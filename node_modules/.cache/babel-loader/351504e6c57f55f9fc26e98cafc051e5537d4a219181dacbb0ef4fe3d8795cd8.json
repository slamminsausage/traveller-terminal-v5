{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\Desktop\\\\traveller-terminal-v5\\\\src\\\\components\\\\TravellerTerminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Card, CardContent } from \"../ui/Card\";\nimport { Input } from \"../ui/Input\";\nimport { Button } from \"../ui/Button\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport SignalInterference from './SignalInterference';\nimport AudioManager from '../utils/AudioManager';\n\n// Network Map Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkMap = ({\n  accessedTerminals,\n  activeTerminal,\n  onTerminalSelect\n}) => {\n  if (accessedTerminals.length === 0) return null;\n  const getTerminalStatus = terminalId => {\n    const terminal = terminals[terminalId];\n    if (!terminal) return 'offline';\n    if (terminal.requiresPassword) return 'encrypted';\n    if (['blacksite-es1', 'sayelle-logs', 'vennik-personal'].includes(terminalId)) return 'corrupted';\n    if (terminal.requiresRoll && terminal.requiresRoll >= 10) return 'secure';\n    return 'active';\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'active':\n        return '#33ff33';\n      case 'corrupted':\n        return '#ff3333';\n      case 'encrypted':\n        return '#ffaa00';\n      case 'secure':\n        return '#3366ff';\n      default:\n        return '#666666';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: -20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    className: \"network-map mb-4 p-3 border border-green-400 rounded bg-black bg-opacity-80\",\n    style: {\n      fontSize: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-green-400 font-mono mb-2 text-xs\",\n      children: \"NETWORK MAP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 sm:grid-cols-3 gap-2\",\n      children: accessedTerminals.map(terminalId => {\n        const status = getTerminalStatus(terminalId);\n        const isActive = activeTerminal === null || activeTerminal === void 0 ? void 0 : activeTerminal.logs.includes(terminalId);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `network-node cursor-pointer p-1 rounded border text-center transition-all hover:bg-opacity-20 hover:bg-green-400 ${isActive ? 'bg-green-400 bg-opacity-20 border-green-400' : 'border-gray-600'}`,\n          style: {\n            color: getStatusColor(status),\n            borderColor: getStatusColor(status),\n            fontSize: '9px'\n          },\n          onClick: () => onTerminalSelect(terminalId),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono\",\n            children: terminalId.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs opacity-80\",\n            children: [status === 'corrupted' && '[UNSTABLE]', status === 'encrypted' && '[ENCRYPTED]', status === 'secure' && '[SECURE]', status === 'active' && '[ONLINE]', status === 'offline' && '[OFFLINE]']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, terminalId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), accessedTerminals.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-green-400 opacity-70\",\n      children: \"Click any terminal to reconnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n// Character set for corruption effects\n_c = NetworkMap;\nconst corruptionCharacters = \"!@#$%^&*()_+-=[]{}|;:,./<>?`~¡™£¢∞§¶•ªº–≠\";\n\n// Apply text corruption for glitch effects\nconst applyTextCorruption = (text, corruptionLevel = 0.02, isEclipseShard = false) => {\n  if (!text) return \"\";\n  const lines = text.split('\\n');\n  const corruptedLines = lines.map(line => {\n    if (line.trim() === '') return line;\n    let corruptedLine = '';\n    for (let i = 0; i < line.length; i++) {\n      if (isEclipseShard && (line.includes(\"SHARD\") || line.includes(\"Eclipse\") || line.includes(\"Trevar\")) && Math.random() < 0.2) {\n        if (Math.random() < 0.4) {\n          corruptedLine += corruptionCharacters.charAt(Math.floor(Math.random() * corruptionCharacters.length));\n          continue;\n        }\n      }\n      if (Math.random() < corruptionLevel) {\n        corruptedLine += corruptionCharacters.charAt(Math.floor(Math.random() * corruptionCharacters.length));\n      } else {\n        corruptedLine += line[i];\n      }\n    }\n    return corruptedLine;\n  });\n  return corruptedLines.join('\\n');\n};\n\n// Get terminal visual effects based on type\nconst getTerminalEffectClasses = terminalId => {\n  if (!terminalId) return \"terminal terminal-flicker\";\n  const terminalName = terminalId.includes(\"/\") ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\") : terminalId;\n  const damagedTerminals = [\"blacksite-es1\", \"sayelle-logs\", \"vennik-personal\"];\n  const minorGlitchTerminals = [\"fuwnet\", \"vanagandr001\", \"fuw01\", \"blacktalon\"];\n  if (damagedTerminals.includes(terminalName)) {\n    return \"terminal terminal-severe-flicker terminal-scanlines\";\n  } else if (minorGlitchTerminals.includes(terminalName)) {\n    return \"terminal terminal-flicker terminal-scanlines\";\n  }\n  return \"terminal terminal-flicker\";\n};\n\n// Check if content should be corrupted\nconst shouldCorruptContent = (content, terminalId) => {\n  if (!content || !terminalId) return false;\n  const terminalName = terminalId.includes(\"/\") ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\") : terminalId;\n  const corruptTerminals = [\"blacksite-es1\", \"vennik-personal\", \"sayelle-logs\", \"blacktalon\"];\n  return corruptTerminals.includes(terminalName) || content.includes(\"Eclipse Shard\") || content.includes(\"ES1\") || content.includes(\"Trevar\");\n};\n\n// Get corruption parameters\nconst getCorruptionParams = (content, terminalId) => {\n  if (!content || !terminalId) return {\n    level: 0,\n    isEclipseShard: false\n  };\n  const terminalName = terminalId.includes(\"/\") ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\") : terminalId;\n  const isEclipseContent = content.includes(\"Eclipse Shard\") || content.includes(\"ES1\") || terminalName === \"blacksite-es1\";\n  if (isEclipseContent) return {\n    level: 0.03,\n    isEclipseShard: true\n  };\n  if (terminalName.includes(\"blacksite\")) return {\n    level: 0.02,\n    isEclipseShard: false\n  };\n  if (terminalName.includes(\"sayelle\")) return {\n    level: 0.015,\n    isEclipseShard: false\n  };\n  return {\n    level: 0.01,\n    isEclipseShard: false\n  };\n};\n\n// Terminal definitions\nconst terminals = {\n  \"lysani01\": {\n    requiresRoll: 8,\n    logs: \"/logs/lysani01.json\"\n  },\n  \"s.elara01\": {\n    requiresRoll: false,\n    logs: \"/logs/s.elara01.json\"\n  },\n  \"slocombe875\": {\n    requiresRoll: 8,\n    logs: \"/logs/slocombe875.json\"\n  },\n  \"waferterm01\": {\n    requiresRoll: false,\n    logs: \"/logs/waferterm01.json\"\n  },\n  \"labpc81\": {\n    requiresRoll: 6,\n    logs: \"/logs/labpc81.json\"\n  },\n  \"vanagandr001\": {\n    requiresRoll: 8,\n    logs: \"/logs/vanagandr001.json\"\n  },\n  \"blackcircuit01\": {\n    requiresRoll: 8,\n    logs: \"/logs/blackcircuit01.json\"\n  },\n  \"fuw01\": {\n    requiresRoll: 8,\n    logs: \"/logs/fuw01.json\"\n  },\n  \"azura01\": {\n    requiresRoll: 10,\n    logs: \"/logs/azura01.json\"\n  },\n  \"vennik01\": {\n    requiresRoll: 12,\n    logs: \"/logs/vennik01.json\",\n    requiresPassword: true,\n    password: \"vennik4ever\"\n  },\n  \"caldonis_public\": {\n    requiresRoll: false,\n    logs: \"/logs/caldonis_public.json\"\n  },\n  \"blacksite-es1\": {\n    requiresRoll: 10,\n    logs: \"/logs/blacksite-es1.json\"\n  },\n  \"blacktalon\": {\n    requiresRoll: 12,\n    logs: \"/logs/blacktalon.json\"\n  },\n  \"vennik-personal\": {\n    requiresRoll: 10,\n    logs: \"/logs/vennik-personal.json\"\n  },\n  \"sayelle-logs\": {\n    requiresRoll: 8,\n    logs: \"/logs/sayelle-logs.json\"\n  },\n  \"fuwnet\": {\n    requiresRoll: 8,\n    logs: \"/logs/fuw-network.json\"\n  },\n  \"01-1485-10-4-89-40\": {\n    requiresRoll: false,\n    logs: \"/logs/01-1485-10-4-89-40.json\"\n  }\n};\n\n// Typing effect with sound\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\n  if (index < text.length) {\n    setState(prev => prev + text[index]);\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\n  } else {\n    if (callback) callback();\n  }\n};\nexport default function TravellerTerminal() {\n  _s();\n  const navigate = useNavigate();\n  const hasInitialized = useRef(false);\n  const typingRef = useRef(null);\n  const terminalRef = useRef(null);\n\n  // Core state\n  const [initText, setInitText] = useState(\"\");\n  const [initComplete, setInitComplete] = useState(false);\n  const [currentView, setCurrentView] = useState(\"init\");\n  const [inputCode, setInputCode] = useState(\"\");\n  const [terminalData, setTerminalData] = useState(\"\");\n\n  // Network tracking state\n  const [accessedTerminals, setAccessedTerminals] = useState([]);\n\n  // Terminal state\n  const [activeTerminal, setActiveTerminal] = useState(null);\n  const [logData, setLogData] = useState(null);\n  const [selectedLogData, setSelectedLogData] = useState(null);\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\n\n  // Security state\n  const [rollCheck, setRollCheck] = useState(null);\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\n  const [requiresPassword, setRequiresPassword] = useState(false);\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [passwordAttempts, setPasswordAttempts] = useState(0);\n  const [terminalPasswordRequired, setTerminalPasswordRequired] = useState(false);\n  const [terminalPasswordInput, setTerminalPasswordInput] = useState(\"\");\n  const [terminalPasswordAttempts, setTerminalPasswordAttempts] = useState(0);\n\n  // Visual effects state\n  const [severeMalfunction, setSevereMalfunction] = useState(false);\n  const [glitchText, setGlitchText] = useState(\"\");\n\n  // Command mode state\n  const [commandMode, setCommandMode] = useState(false);\n  const [commandHistory, setCommandHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [commandOutput, setCommandOutput] = useState([]);\n\n  // Audio logs state\n  const [showAudioLogsPage, setShowAudioLogsPage] = useState(false);\n  const [audioLogsData, setAudioLogsData] = useState([]);\n\n  // Signal interference and audio state\n  const [signalInterferenceLevel, setSignalInterferenceLevel] = useState(0);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n\n  // Enhanced Terminal commands definition\n  const terminalCommands = {\n    help: {\n      description: \"Display available commands\",\n      execute: () => {\n        const helpText = Object.entries(terminalCommands).map(([cmd, info]) => `${cmd.padEnd(15)} - ${info.description}`).join('\\n');\n        return `Available commands:\\n\\n${helpText}\\n\\nType 'exit' to return to normal mode.`;\n      }\n    },\n    scan: {\n      description: \"Scan for nearby terminals\",\n      execute: () => {\n        AudioManager.playEffect('corruption', 0.2);\n        const availableTerminals = Object.keys(terminals);\n        const scanResults = availableTerminals.map((t, i) => {\n          const corrupted = ['blacksite-es1', 'sayelle-logs', 'vennik-personal'].includes(t);\n          const encrypted = terminals[t].requiresPassword;\n          const accessed = accessedTerminals.includes(t);\n          const status = corrupted ? '[CORRUPTED]' : encrypted ? '[ENCRYPTED]' : accessed ? '[ACCESSED]' : '[ONLINE]';\n          return `${i + 1}. ${t.padEnd(20)} ${status}`;\n        }).join('\\n');\n        return `Scanning local network...\\n\\n${scanResults}\\n\\nUse 'connect [terminal_name]' to establish connection.`;\n      }\n    },\n    trace: {\n      description: \"Trace signal origin\",\n      execute: () => {\n        AudioManager.playEffect('glitch', 0.3);\n        const traces = [\"Tracing signal path...\", \"Hop 1: Eternium Starport Relay [OK]\", \"Hop 2: Caldonis Central Hub [OK]\", \"Hop 3: ████████████ [ENCRYPTED]\", \"Hop 4: Blacksite ES1 [CONNECTION LOST]\", \"\", \"WARNING: Trace detected by remote system\", \"ALERT: Counter-trace initiated\"];\n        return traces.join('\\n');\n      }\n    },\n    decrypt: {\n      description: \"Attempt to decrypt corrupted data\",\n      execute: () => {\n        if (selectedLogData && activeTerminal) {\n          const chance = Math.random();\n          if (chance > 0.7) {\n            AudioManager.playEffect('access_granted', 0.3);\n            return \"Decryption successful! Corruption reduced by 15%.\\nRe-displaying content with improved clarity...\";\n          } else if (chance > 0.3) {\n            AudioManager.playEffect('corruption', 0.2);\n            return \"Partial decryption achieved. Some data recovered.\\nCorruption reduced by 5%.\";\n          } else {\n            AudioManager.playEffect('access_denied', 0.4);\n            return \"Decryption failed. Data integrity compromised.\\nWARNING: Security countermeasures detected.\";\n          }\n        }\n        return \"No encrypted data in current buffer.\";\n      }\n    },\n    ping: {\n      description: \"Check connection stability\",\n      execute: () => {\n        const latency = Math.floor(Math.random() * 200) + 50;\n        const packetLoss = Math.floor(Math.random() * 15);\n        const jitter = Math.floor(Math.random() * 30);\n        AudioManager.playEffect('keypress', 0.2);\n        return `Connection diagnostics:\n        \nLatency: ${latency}ms\nPacket Loss: ${packetLoss}%\nJitter: ${jitter}ms\nSignal Strength: ${100 - packetLoss}%\n        \n${packetLoss > 10 ? 'WARNING: Connection unstable' : 'Connection stable'}`;\n      }\n    },\n    whoami: {\n      description: \"Display current user info\",\n      execute: () => {\n        return `Current User: GUEST_${Math.floor(Math.random() * 9999).toString().padStart(4, '0')}\nAccess Level: RESTRICTED\nSession Started: ${new Date().toLocaleTimeString()}\nOrigin: Eternium Starport\nTerminal: ${activeTerminal ? activeTerminal.logs.replace('/logs/', '').replace('.json', '') : 'NONE'}`;\n      }\n    },\n    clear: {\n      description: \"Clear terminal screen\",\n      execute: () => {\n        setCommandOutput([]);\n        return null;\n      }\n    },\n    ls: {\n      description: \"List available files\",\n      execute: () => {\n        if (logData) {\n          const files = logData.map((log, i) => {\n            const locked = log.requires_roll ? `[LOCKED:${log.roll_check.difficulty}+]` : '';\n            const password = log.requires_password ? '[PASSWORD]' : '';\n            return `${i.toString().padStart(2, '0')}. ${log.title.padEnd(40)} ${locked}${password}`;\n          }).join('\\n');\n          return `Directory listing:\\n\\n${files}\\n\\nUse 'cat [number]' to view file contents.`;\n        }\n        return \"No files in current directory. Use 'scan' to find terminals.\";\n      }\n    },\n    cat: {\n      description: \"Display file contents\",\n      execute: args => {\n        if (!args || args.length === 0) {\n          return \"Usage: cat [file_number]\";\n        }\n        const fileIndex = parseInt(args[0]);\n        if (logData && fileIndex >= 0 && fileIndex < logData.length) {\n          handleLogClick(logData[fileIndex]);\n          return `Loading file: ${logData[fileIndex].title}...`;\n        }\n        return `Error: File not found. Use 'ls' to list available files.`;\n      }\n    },\n    connect: {\n      description: \"Connect to a terminal\",\n      execute: args => {\n        if (!args || args.length === 0) {\n          return \"Usage: connect [terminal_name]\";\n        }\n        const terminalName = args.join(' ').toLowerCase();\n        if (terminals[terminalName]) {\n          // Add to accessed terminals if not already there\n          if (!accessedTerminals.includes(terminalName)) {\n            setAccessedTerminals(prev => [...prev, terminalName]);\n          }\n          setInputCode(terminalName);\n          // Use setTimeout to ensure state updates\n          setTimeout(() => {\n            handleAccessCode();\n          }, 100);\n          return `Attempting connection to ${terminalName}...`;\n        }\n        return `Error: Terminal '${terminalName}' not found. Use 'scan' to list available terminals.`;\n      }\n    },\n    network: {\n      description: \"Show network map\",\n      execute: () => {\n        if (accessedTerminals.length === 0) {\n          return \"No terminals accessed yet. Use 'scan' to find available terminals.\";\n        }\n        return `Network Map:\\n\\n${accessedTerminals.map(t => `• ${t.toUpperCase()}`).join('\\n')}\\n\\nUse 'connect [terminal]' to reconnect.`;\n      }\n    }\n  };\n\n  // Hidden/Easter egg commands\n  const hiddenCommands = {\n    riftjaw: () => {\n      setSevereMalfunction(true);\n      AudioManager.playEffect('warning', 0.5);\n      setTimeout(() => setSevereMalfunction(false), 3000);\n      return \"WARNING: UNAUTHORIZED ACCESS ATTEMPT DETECTED\\n\\nᚱᛁᚠᛏᛃᚨᚹ ᛊᛏᛁᚱᛊ ᛒᛖᚾᛖᚨᚦ\\n\\nSYSTEM LOCKDOWN INITIATED\";\n    },\n    eclipse: () => {\n      AudioManager.playEffect('glitch', 0.4);\n      const glitchText = \"QUANTUM FLUCTUATION DETECTED IN LOCAL SPACETIME\\n\\n\" + \"Reality anchor holding at \" + (Math.random() * 30 + 70).toFixed(1) + \"%\\n\" + \"Dimensional barriers: UNSTABLE\\n\" + \"Eclipse Shard resonance detected: \" + (Math.random() * 1000).toFixed(0) + \" Hz\\n\\n\" + \"ERROR: Cannot triangulate signal source\";\n      return applyTextCorruption(glitchText, 0.1, true);\n    },\n    trevar: () => {\n      AudioManager.playEffect('corruption', 0.3);\n      return \"SUBJECT FILE CLASSIFIED - OMEGA CLEARANCE REQUIRED\\n\\n\" + \"Last known status: CONTAINED\\n\" + \"Location: [REDACTED]\\n\" + \"Neural synchronization: 87%\\n\" + \"Warning: Subject demonstrates Class-IV psionic manifestations\";\n    },\n    vanagandr: () => {\n      return \"VESSEL REGISTRY: VANAGANDR\\n\" + \"Class: Type-S Scout/Courier (Modified)\\n\" + \"Status: IMPOUNDED - PENDING AUCTION\\n\" + \"Special Modifications: CLASSIFIED\\n\" + \"Warning: Ship systems contain encrypted data\\n\" + \"Warning: Potential biohazard in cargo hold\";\n    }\n  };\n\n  // Initialize audio manager\n  useEffect(() => {\n    AudioManager.preloadSounds();\n  }, []);\n\n  // Update signal interference based on terminal\n  useEffect(() => {\n    if (!activeTerminal) {\n      setSignalInterferenceLevel(0);\n      return;\n    }\n    const terminalName = activeTerminal.logs.replace(\"/logs/\", \"\").replace(\".json\", \"\");\n\n    // Set interference levels based on terminal type\n    const interferenceMap = {\n      'blacksite-es1': 0.8,\n      'sayelle-logs': 0.7,\n      'vennik-personal': 0.6,\n      'blacktalon': 0.5,\n      'fuwnet': 0.4,\n      'vanagandr001': 0.3,\n      'default': 0.1\n    };\n    const level = interferenceMap[terminalName] || interferenceMap.default;\n    setSignalInterferenceLevel(level);\n\n    // Play connection sound\n    if (soundEnabled) {\n      AudioManager.playEffect('access_granted', 0.3);\n    }\n  }, [activeTerminal, soundEnabled]);\n\n  // Play key sounds\n  const playKeySound = () => {\n    if (soundEnabled && Math.random() > 0.7) {\n      AudioManager.playEffect('keypress', 0.1);\n    }\n  };\n\n  // Play typing sounds\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.target.tagName === 'INPUT' && soundEnabled) {\n        playKeySound();\n      }\n    };\n    window.addEventListener('keypress', handleKeyPress);\n    return () => window.removeEventListener('keypress', handleKeyPress);\n  }, [soundEnabled]);\n\n  // Enhanced typing with sound\n  const typeTextWithSound = (text, setState, callback = null, index = 0, delay = 30) => {\n    if (soundEnabled) {\n      if (text.includes(\"ACCESS DENIED\")) {\n        AudioManager.playEffect('access_denied', 0.4);\n      } else if (text.includes(\"ERROR\")) {\n        AudioManager.playEffect('warning', 0.3);\n      } else if (text.includes(\"ACCESS GRANTED\") || text.includes(\"successful\")) {\n        AudioManager.playEffect('access_granted', 0.3);\n      }\n    }\n    typeText(text, setState, callback, index, delay);\n  };\n\n  // Command processing\n  const processCommand = input => {\n    if (!input.trim()) return;\n    const parts = input.trim().toLowerCase().split(' ');\n    const command = parts[0];\n    const args = parts.slice(1);\n\n    // Add to history FIRST\n    setCommandHistory(prev => [...prev, input]);\n    setHistoryIndex(-1);\n    if (command === 'exit') {\n      setCommandMode(false);\n      setCommandOutput([]);\n      return;\n    }\n    let output = null;\n    if (terminalCommands[command]) {\n      output = terminalCommands[command].execute(args);\n    } else if (hiddenCommands[command]) {\n      output = hiddenCommands[command]();\n    } else {\n      output = `Command not recognized: '${command}'. Type 'help' for available commands.`;\n    }\n    if (output !== null) {\n      setCommandOutput(prev => [...prev, {\n        command: input,\n        output\n      }]);\n    }\n  };\n\n  // Command input handler\n  const handleCommandKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      e.stopPropagation();\n      processCommand(inputCode);\n      setInputCode('');\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      if (commandHistory.length > 0 && historyIndex < commandHistory.length - 1) {\n        const newIndex = historyIndex + 1;\n        setHistoryIndex(newIndex);\n        setInputCode(commandHistory[commandHistory.length - 1 - newIndex]);\n      }\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setHistoryIndex(newIndex);\n        setInputCode(commandHistory[commandHistory.length - 1 - newIndex]);\n      } else if (historyIndex === 0) {\n        setHistoryIndex(-1);\n        setInputCode('');\n      }\n    }\n  };\n\n  // Initialize terminal\n  useEffect(() => {\n    if (hasInitialized.current) return;\n    hasInitialized.current = true;\n    const loadingMessages = [\"Initializing system...\", \"Connecting to network...\", \"Loading secure protocols...\", \"The Traveller Terminal is now online.\"];\n    let i = 0;\n    const displayNextMessage = () => {\n      if (i < loadingMessages.length) {\n        typeTextWithSound(loadingMessages[i] + \"\\n\", setInitText, () => {\n          setInitText(prev => prev + \"\\n\");\n          i++;\n          displayNextMessage();\n        }, 0, 50);\n      } else {\n        const welcomeMessage = \"\\nWelcome to The Traveller Terminal.\\n\" + \"Type the name of a terminal to access its contents.\\n\" + \"Press ESC at any time to go back.\\n\" + \"Toggle Command Mode for advanced hacking tools.\\n\\n\";\n        typeTextWithSound(welcomeMessage, setInitText, () => {\n          setInitComplete(true);\n        }, 0, 50);\n      }\n    };\n    displayNextMessage();\n  }, []);\n\n  // Auto-scroll terminal\n  useEffect(() => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  }, [displayedText, terminalData, logTypingComplete, currentView, commandOutput]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Don't interfere with input fields\n      if (e.target.tagName === 'INPUT') return;\n      if (e.key === \"Escape\") {\n        if (currentView === \"log\" && !logTypingComplete) {\n          setLogTypingComplete(true);\n          if (typingRef.current) {\n            clearTimeout(typingRef.current);\n          }\n          if (selectedLogData) {\n            let fullText = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n            if (activeTerminal && shouldCorruptContent(fullText, activeTerminal.logs)) {\n              const {\n                level,\n                isEclipseShard\n              } = getCorruptionParams(fullText, activeTerminal.logs);\n              fullText = applyTextCorruption(fullText, level, isEclipseShard);\n            }\n            setDisplayedText(fullText);\n          }\n        } else if (currentView === \"log\") {\n          handleBackToTerminal();\n        } else if (currentView === \"terminal\") {\n          handleBackToInit();\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [currentView, logTypingComplete, selectedLogData, activeTerminal]);\n\n  // Random glitch effects\n  useEffect(() => {\n    if (!activeTerminal || !selectedLogData) return;\n    const terminalName = activeTerminal.logs.replace(\"/logs/\", \"\").replace(\".json\", \"\");\n    const glitchEnabledTerminals = [\"blacksite-es1\", \"vennik-personal\", \"fuwnet\", \"sayelle-logs\", \"blacktalon\"];\n    if (glitchEnabledTerminals.includes(terminalName)) {\n      const randomGlitch = () => {\n        if (Math.random() < 0.05) {\n          setSevereMalfunction(true);\n          if (soundEnabled) {\n            AudioManager.playEffect('glitch', 0.3);\n          }\n          const glitchMessages = [\"WARNING: SIGNAL INTEGRITY FAILING\", \"CRC ERROR DETECTED IN DATA STREAM\", \"QUANTUM FLUCTUATION DETECTED\", \"TEMPORAL ANOMALY IN DATA BUFFER\", \"WARNING: REALITY ANCHOR DESTABILIZING\", \"SECURITY BREACH ATTEMPT DETECTED\"];\n          setGlitchText(glitchMessages[Math.floor(Math.random() * glitchMessages.length)]);\n          setTimeout(() => {\n            setSevereMalfunction(false);\n            setGlitchText(\"\");\n          }, 1500);\n        }\n      };\n      const glitchInterval = setInterval(randomGlitch, 10000);\n      return () => clearInterval(glitchInterval);\n    }\n  }, [selectedLogData, activeTerminal, soundEnabled]);\n\n  // Terminal access handler\n  const handleAccessCode = () => {\n    if (inputCode.trim().toLowerCase() === \"poop\") {\n      navigate(\"/poop\");\n      return;\n    }\n    if (inputCode.trim() === \"01-1485-10-4-89-40\") {\n      navigate(\"/riftjaw\");\n      return;\n    }\n    const terminal = terminals[inputCode];\n    if (terminal) {\n      // Add to accessed terminals if not already there\n      if (!accessedTerminals.includes(inputCode)) {\n        setAccessedTerminals(prev => [...prev, inputCode]);\n      }\n      setActiveTerminal(terminal);\n      setCurrentView(\"terminal\");\n      if (terminal.requiresPassword) {\n        setTerminalPasswordRequired(true);\n      } else if (terminal.requiresRoll) {\n        setRollCheck({\n          difficulty: terminal.requiresRoll\n        });\n      } else {\n        fetchLogs(terminal.logs);\n      }\n    } else {\n      typeTextWithSound(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\n    }\n    setInputCode(\"\");\n  };\n\n  // Terminal password handler\n  const handleTerminalPasswordSubmit = () => {\n    if (activeTerminal && terminalPasswordInput === activeTerminal.password) {\n      setTerminalPasswordRequired(false);\n      fetchLogs(activeTerminal.logs);\n    } else {\n      const attempts = terminalPasswordAttempts + 1;\n      setTerminalPasswordAttempts(attempts);\n      setTerminalPasswordInput(\"\");\n      if (attempts >= 3) {\n        setTerminalPasswordRequired(false);\n        if (activeTerminal && activeTerminal.requiresRoll) {\n          setRollCheck({\n            difficulty: activeTerminal.requiresRoll\n          });\n          typeTextWithSound(\"Maximum password attempts reached. Attempting alternate access method...\", setTerminalData);\n        } else {\n          typeTextWithSound(\"ACCESS DENIED. MAXIMUM ATTEMPTS REACHED.\", setTerminalData);\n          setTimeout(() => handleBackToInit(), 2000);\n        }\n      } else {\n        typeTextWithSound(`ACCESS DENIED. INVALID PASSWORD. ${3 - attempts} attempts remaining.`, setTerminalData);\n      }\n    }\n  };\n\n  // Roll check handler\n  const handleRollCheck = passed => {\n    if (passed) {\n      if (activeTerminal) {\n        fetchLogs(activeTerminal.logs);\n      } else {\n        typeTextWithSound(\"ERROR: Terminal not found.\", setTerminalData);\n      }\n    } else {\n      typeTextWithSound(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n    }\n    setRollCheck(null);\n  };\n\n  // Special roll check handler\n  const handleSpecialRollCheck = passed => {\n    if (passed) {\n      if (selectedLogData) {\n        if (selectedLogData.logs) {\n          setAudioLogsData(selectedLogData.logs);\n          setShowAudioLogsPage(true);\n        } else {\n          setDisplayedText(\"\");\n          setLogTypingComplete(false);\n          setCurrentView(\"log\");\n          let message = \"\";\n          if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\n            message = selectedLogData.roll_check.on_success + \"\\n\\n\";\n            message += `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n          } else {\n            message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n          }\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n            const {\n              level,\n              isEclipseShard\n            } = getCorruptionParams(message, activeTerminal.logs);\n            message = applyTextCorruption(message, level, isEclipseShard);\n          }\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n            if (index < text.length) {\n              setState(prev => prev + text[index]);\n              typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n            } else {\n              typingRef.current = null;\n              if (callback) callback();\n            }\n          };\n          typeWithRef(message, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        }\n      }\n    } else {\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\n        typeTextWithSound(selectedLogData.roll_check.on_failure, setTerminalData);\n      } else {\n        typeTextWithSound(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n      }\n      setSelectedLogData(null);\n    }\n    setSpecialRollCheck(null);\n    setPasswordAttempts(0);\n    setPasswordInput(\"\");\n  };\n\n  // Fetch logs from terminal\n  const fetchLogs = async logPath => {\n    try {\n      const response = await fetch(logPath);\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setLogData(data);\n      } else {\n        // Handle special multi-level authentication\n        if (logPath.includes(\"01-1485-10-4-89-40\")) {\n          navigate(\"/riftjaw\");\n        } else {\n          setSelectedLogData(data);\n          setCurrentView(\"log\");\n          setDisplayedText(\"\");\n          setLogTypingComplete(false);\n          let message = `Date: ${data.date}\\nAuthor: ${data.author}\\n\\n${data.content || \"No data available.\"}`;\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n            const {\n              level,\n              isEclipseShard\n            } = getCorruptionParams(message, activeTerminal.logs);\n            message = applyTextCorruption(message, level, isEclipseShard);\n          }\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n            if (index < text.length) {\n              setState(prev => prev + text[index]);\n              typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n            } else {\n              typingRef.current = null;\n              if (callback) callback();\n            }\n          };\n          typeWithRef(message, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        }\n      }\n    } catch (error) {\n      typeTextWithSound(\"ERROR LOADING LOGS.\", setTerminalData);\n    }\n  };\n\n  // Handle log click\n  const handleLogClick = log => {\n    setSelectedLogData(log);\n    setCurrentView(\"log\");\n    setPasswordAttempts(0);\n    setPasswordInput(\"\");\n    if (log.logs) {\n      if (log.requires_password) {\n        setRequiresPassword(true);\n      } else {\n        setAudioLogsData(log.logs);\n        setShowAudioLogsPage(true);\n      }\n    } else if (log.requires_password) {\n      setRequiresPassword(true);\n    } else {\n      if (log.requires_roll && log.roll_check && log.roll_check.difficulty >= 10) {\n        setSpecialRollCheck({\n          difficulty: log.roll_check.difficulty\n        });\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        let message = `Date: ${log.date}\\nAuthor: ${log.author}\\n\\n${log.content}`;\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n          const {\n            level,\n            isEclipseShard\n          } = getCorruptionParams(message, activeTerminal.logs);\n          message = applyTextCorruption(message, level, isEclipseShard);\n        }\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n          if (index < text.length) {\n            setState(prev => prev + text[index]);\n            typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n          } else {\n            typingRef.current = null;\n            if (callback) callback();\n          }\n        };\n        typeWithRef(message, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    }\n  };\n\n  // Password submit handler\n  const handlePasswordSubmit = () => {\n    if (passwordInput === selectedLogData.password) {\n      setRequiresPassword(false);\n      if (selectedLogData.logs) {\n        setAudioLogsData(selectedLogData.logs);\n        setShowAudioLogsPage(true);\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        let message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n          const {\n            level,\n            isEclipseShard\n          } = getCorruptionParams(message, activeTerminal.logs);\n          message = applyTextCorruption(message, level, isEclipseShard);\n        }\n        typeTextWithSound(message, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    } else {\n      const attempts = passwordAttempts + 1;\n      setPasswordAttempts(attempts);\n      if (attempts >= (selectedLogData.attemptsAllowed || 3)) {\n        setRequiresPassword(false);\n        setSpecialRollCheck({\n          difficulty: selectedLogData.roll_check.difficulty\n        });\n      } else {\n        typeTextWithSound(\"Incorrect password. Please try again.\", setTerminalData);\n      }\n    }\n  };\n\n  // Network map terminal selection handler\n  const handleNetworkTerminalSelect = terminalId => {\n    setInputCode(terminalId);\n    setTimeout(() => {\n      handleAccessCode();\n    }, 100);\n  };\n\n  // Navigation handlers\n  const handleBackToTerminal = () => {\n    setSelectedLogData(null);\n    setDisplayedText(\"\");\n    setLogTypingComplete(false);\n    setCurrentView(\"terminal\");\n    if (typingRef.current) {\n      clearTimeout(typingRef.current);\n      typingRef.current = null;\n    }\n  };\n  const handleBackToInit = () => {\n    setLogData(null);\n    setActiveTerminal(null);\n    setTerminalData(\"\");\n    setCurrentView(\"init\");\n    setTerminalPasswordRequired(false);\n    setTerminalPasswordInput(\"\");\n    setTerminalPasswordAttempts(0);\n    setRequiresPassword(false);\n    setPasswordInput(\"\");\n    setPasswordAttempts(0);\n    setSignalInterferenceLevel(0);\n  };\n\n  // Audio logs page\n  if (showAudioLogsPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center h-screen bg-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-green-400 font-mono text-xl my-4 terminal-flicker\",\n        children: \"Encrypted Audio Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md border-green-400 border-2 p-4 overflow-auto terminal-flicker\",\n        children: [audioLogsData.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-green-400 font-mono\",\n            children: log.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-mono\",\n            style: {\n              whiteSpace: \"pre-wrap\"\n            },\n            children: log.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 15\n          }, this), log.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            style: {\n              backgroundColor: \"black\",\n              border: \"1px solid #33ff33\",\n              borderRadius: \"5px\",\n              width: \"100%\",\n              marginTop: \"10px\",\n              color: \"#33ff33\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: log.audio_file,\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 19\n            }, this), \"Your browser does not support the audio element.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-4\",\n          onClick: () => {\n            setShowAudioLogsPage(false);\n            setAudioLogsData([]);\n            setSelectedLogData(null);\n            setCurrentView(\"terminal\");\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-h-screen bg-black p-2 sm:p-4\",\n    children: [/*#__PURE__*/_jsxDEV(SignalInterference, {\n      level: signalInterferenceLevel,\n      terminalType: activeTerminal ? 'corrupted' : 'normal'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 left-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"bg-green-400 text-black font-mono px-2 py-1 rounded text-xs hover:bg-green-500\",\n        onClick: () => {\n          const isMuted = AudioManager.toggleMute();\n          setSoundEnabled(!isMuted);\n        },\n        children: soundEnabled ? '🔊' : '🔇'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 7\n    }, this), currentView === \"init\" && /*#__PURE__*/_jsxDEV(NetworkMap, {\n      accessedTerminals: accessedTerminals,\n      activeTerminal: activeTerminal,\n      onTerminalSelect: handleNetworkTerminalSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 9\n    }, this), currentView === \"init\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"monospace\",\n        color: \"#33ff33\",\n        whiteSpace: \"pre-wrap\",\n        marginBottom: \"10px\",\n        textAlign: \"center\",\n        fontSize: \"12px\"\n      },\n      className: \"terminal-flicker px-2 sm:text-sm lg:text-base\",\n      children: initText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-sm sm:max-w-md lg:max-w-lg border-green-400 border-2\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-3 sm:p-4 lg:p-6\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${activeTerminal ? getTerminalEffectClasses(activeTerminal.logs) : \"terminal terminal-flicker\"} sm:h-[300px] lg:h-[350px] sm:text-xs lg:text-sm`,\n            style: {\n              overflow: \"auto\",\n              height: \"250px\",\n              position: \"relative\",\n              fontSize: \"11px\"\n            },\n            ref: terminalRef,\n            children: [severeMalfunction && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 bg-black bg-opacity-70 flex items-center justify-center z-20\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-red-500 font-mono text-sm sm:text-lg lg:text-xl severe-glitch p-2 sm:p-4 border border-red-500\",\n                children: glitchText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 17\n            }, this), terminalPasswordRequired ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-2\",\n                children: \"Terminal requires password authentication.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-4\",\n                children: [\"Attempts remaining: \", 3 - terminalPasswordAttempts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  className: \"bg-black text-green-400 border border-green-400 px-2 sm:px-3 py-2 font-mono focus:outline-none w-full text-xs sm:text-sm\",\n                  placeholder: \"Enter Password\",\n                  value: terminalPasswordInput,\n                  onChange: e => setTerminalPasswordInput(e.target.value),\n                  type: \"password\",\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      handleTerminalPasswordSubmit();\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col sm:flex-row gap-2 mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                    onClick: handleTerminalPasswordSubmit,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1124,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                    onClick: handleBackToInit,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1130,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 17\n            }, this) : specialRollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-4 text-xs sm:text-sm\",\n                children: [\"Did you pass the \", specialRollCheck.difficulty, \"+ check for\", \" \", selectedLogData ? selectedLogData.title : \"this file\", \"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col sm:flex-row gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                  onClick: () => handleSpecialRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                  onClick: () => handleSpecialRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1140,\n              columnNumber: 17\n            }, this) : rollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-4 text-xs sm:text-sm\",\n                children: [\"Did you pass the \", rollCheck.difficulty, \"+ Electronics (Computers) check?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col sm:flex-row gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                  onClick: () => handleRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                  onClick: () => handleRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1172,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 17\n            }, this) : selectedLogData && requiresPassword ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\",\n                  marginBottom: \"10px\"\n                },\n                className: \"text-xs sm:text-sm\",\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-2 text-xs sm:text-sm\",\n                children: [\"Password required. Attempts remaining:\", \" \", (selectedLogData.attemptsAllowed || 3) - passwordAttempts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: \"bg-black text-green-400 border border-green-400 px-2 sm:px-3 py-2 font-mono focus:outline-none w-full text-xs sm:text-sm\",\n                placeholder: \"Enter Password\",\n                value: passwordInput,\n                onChange: e => setPasswordInput(e.target.value),\n                type: \"password\",\n                onKeyPress: e => {\n                  if (e.key === 'Enter') {\n                    handlePasswordSubmit();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col sm:flex-row gap-2 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                  onClick: handlePasswordSubmit,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\",\n                  onClick: handleBackToTerminal,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 17\n            }, this) : selectedLogData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terminal-glitch p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\"\n                },\n                className: \"text-xs sm:text-sm\",\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 19\n              }, this), selectedLogData.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                className: \"w-full mt-2\",\n                style: {\n                  backgroundColor: \"black\",\n                  border: \"1px solid #33ff33\",\n                  borderRadius: \"5px\",\n                  color: \"#33ff33\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: selectedLogData.audio_file,\n                  type: \"audio/mp3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 23\n                }, this), \"Your browser does not support the audio element.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 21\n              }, this), logTypingComplete && /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2 w-full sm:w-auto text-xs sm:text-sm\",\n                onClick: handleBackToTerminal,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1233,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 17\n            }, this) : logData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2\",\n              children: [logData.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => handleLogClick(log),\n                className: \"cursor-pointer underline py-2 sm:py-1 text-xs sm:text-sm hover:text-green-300\",\n                children: log.title\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1244,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2 w-full sm:w-auto text-xs sm:text-sm\",\n                onClick: handleBackToInit,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1252,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 17\n            }, this) : currentView === \"init\" && commandMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"command-interface p-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-output\",\n                style: {\n                  minHeight: '150px',\n                  maxHeight: '200px',\n                  overflowY: 'auto',\n                  marginBottom: '10px'\n                },\n                children: commandOutput.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  className: \"text-xs sm:text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#33ff33'\n                    },\n                    children: [\"> \", entry.command]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1269,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      whiteSpace: 'pre-wrap',\n                      marginLeft: '10px'\n                    },\n                    children: entry.output\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1270,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1268,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"command-prompt flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mr-1 text-xs sm:text-sm\",\n                  children: \">\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  className: \"bg-black text-green-400 border-0 px-0 py-0 font-mono focus:outline-none flex-grow text-xs sm:text-sm\",\n                  placeholder: \"Enter command...\",\n                  value: inputCode,\n                  onChange: e => setInputCode(e.target.value),\n                  onKeyDown: handleCommandKeyDown,\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"glitch-text p-2 text-xs sm:text-sm\",\n              children: terminalData || \"ENTER ACCESS CODE TO PROCEED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 11\n        }, this), currentView === \"init\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 sm:mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"command-mode-toggle mb-2 text-right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"bg-green-400 text-black font-mono px-2 py-1 rounded text-xs hover:bg-green-500\",\n              onClick: () => {\n                setCommandMode(!commandMode);\n                setCommandOutput([]);\n              },\n              children: commandMode ? 'GUI MODE' : 'COMMAND MODE'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1300,\n            columnNumber: 15\n          }, this), !commandMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col sm:flex-row gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              className: \"bg-black text-green-400 border border-green-400 px-2 sm:px-3 py-2 font-mono focus:outline-none text-xs sm:text-sm flex-grow\",\n              placeholder: \"Enter Access Code...\",\n              value: inputCode,\n              onChange: e => setInputCode(e.target.value),\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  handleAccessCode();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 text-xs sm:text-sm w-full sm:w-auto\",\n              onClick: handleAccessCode,\n              children: \"Enter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1038,\n    columnNumber: 5\n  }, this);\n}\n_s(TravellerTerminal, \"R0sI3G5HTzsB6KDjGHQyoCKE8uI=\", false, function () {\n  return [useNavigate];\n});\n_c2 = TravellerTerminal;\nvar _c, _c2;\n$RefreshReg$(_c, \"NetworkMap\");\n$RefreshReg$(_c2, \"TravellerTerminal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","Input","Button","motion","useNavigate","SignalInterference","AudioManager","jsxDEV","_jsxDEV","NetworkMap","accessedTerminals","activeTerminal","onTerminalSelect","length","getTerminalStatus","terminalId","terminal","terminals","requiresPassword","includes","requiresRoll","getStatusColor","status","div","initial","opacity","y","animate","className","style","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isActive","logs","color","borderColor","onClick","toUpperCase","_c","corruptionCharacters","applyTextCorruption","text","corruptionLevel","isEclipseShard","lines","split","corruptedLines","line","trim","corruptedLine","i","Math","random","charAt","floor","join","getTerminalEffectClasses","terminalName","replace","damagedTerminals","minorGlitchTerminals","shouldCorruptContent","content","corruptTerminals","getCorruptionParams","level","isEclipseContent","password","typeText","setState","callback","index","delay","prev","setTimeout","TravellerTerminal","_s","navigate","hasInitialized","typingRef","terminalRef","initText","setInitText","initComplete","setInitComplete","currentView","setCurrentView","inputCode","setInputCode","terminalData","setTerminalData","setAccessedTerminals","setActiveTerminal","logData","setLogData","selectedLogData","setSelectedLogData","displayedText","setDisplayedText","logTypingComplete","setLogTypingComplete","rollCheck","setRollCheck","specialRollCheck","setSpecialRollCheck","setRequiresPassword","passwordInput","setPasswordInput","passwordAttempts","setPasswordAttempts","terminalPasswordRequired","setTerminalPasswordRequired","terminalPasswordInput","setTerminalPasswordInput","terminalPasswordAttempts","setTerminalPasswordAttempts","severeMalfunction","setSevereMalfunction","glitchText","setGlitchText","commandMode","setCommandMode","commandHistory","setCommandHistory","historyIndex","setHistoryIndex","commandOutput","setCommandOutput","showAudioLogsPage","setShowAudioLogsPage","audioLogsData","setAudioLogsData","signalInterferenceLevel","setSignalInterferenceLevel","soundEnabled","setSoundEnabled","terminalCommands","help","description","execute","helpText","Object","entries","cmd","info","padEnd","scan","playEffect","availableTerminals","keys","scanResults","t","corrupted","encrypted","accessed","trace","traces","decrypt","chance","ping","latency","packetLoss","jitter","whoami","toString","padStart","Date","toLocaleTimeString","clear","ls","files","log","locked","requires_roll","roll_check","difficulty","requires_password","title","cat","args","fileIndex","parseInt","handleLogClick","connect","toLowerCase","handleAccessCode","network","hiddenCommands","riftjaw","eclipse","toFixed","trevar","vanagandr","preloadSounds","interferenceMap","default","playKeySound","handleKeyPress","e","target","tagName","window","addEventListener","removeEventListener","typeTextWithSound","processCommand","input","parts","command","slice","output","handleCommandKeyDown","key","preventDefault","stopPropagation","newIndex","current","loadingMessages","displayNextMessage","welcomeMessage","scrollTop","scrollHeight","handleKeyDown","clearTimeout","fullText","date","author","handleBackToTerminal","handleBackToInit","glitchEnabledTerminals","randomGlitch","glitchMessages","glitchInterval","setInterval","clearInterval","fetchLogs","handleTerminalPasswordSubmit","attempts","handleRollCheck","passed","handleSpecialRollCheck","message","on_success","typeWithRef","on_failure","logPath","response","fetch","data","json","Array","isArray","error","handlePasswordSubmit","attemptsAllowed","handleNetworkTerminalSelect","marginBottom","whiteSpace","audio_file","controls","backgroundColor","border","borderRadius","width","marginTop","src","type","terminalType","isMuted","toggleMute","fontFamily","textAlign","transition","duration","overflow","height","position","ref","placeholder","value","onChange","onKeyDown","onKeyPress","minHeight","maxHeight","overflowY","entry","marginLeft","autoFocus","_c2","$RefreshReg$"],"sources":["C:/Users/James/Desktop/traveller-terminal-v5/src/components/TravellerTerminal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, CardContent } from \"../ui/Card\";\r\nimport { Input } from \"../ui/Input\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SignalInterference from './SignalInterference';\r\nimport AudioManager from '../utils/AudioManager';\r\n\r\n// Network Map Component\r\nconst NetworkMap = ({ accessedTerminals, activeTerminal, onTerminalSelect }) => {\r\n  if (accessedTerminals.length === 0) return null;\r\n\r\n  const getTerminalStatus = (terminalId) => {\r\n    const terminal = terminals[terminalId];\r\n    if (!terminal) return 'offline';\r\n    if (terminal.requiresPassword) return 'encrypted';\r\n    if (['blacksite-es1', 'sayelle-logs', 'vennik-personal'].includes(terminalId)) return 'corrupted';\r\n    if (terminal.requiresRoll && terminal.requiresRoll >= 10) return 'secure';\r\n    return 'active';\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'active': return '#33ff33';\r\n      case 'corrupted': return '#ff3333';\r\n      case 'encrypted': return '#ffaa00';\r\n      case 'secure': return '#3366ff';\r\n      default: return '#666666';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0, y: -20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"network-map mb-4 p-3 border border-green-400 rounded bg-black bg-opacity-80\"\r\n      style={{ fontSize: '10px' }}\r\n    >\r\n      <div className=\"text-green-400 font-mono mb-2 text-xs\">NETWORK MAP</div>\r\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\r\n        {accessedTerminals.map((terminalId) => {\r\n          const status = getTerminalStatus(terminalId);\r\n          const isActive = activeTerminal?.logs.includes(terminalId);\r\n          \r\n          return (\r\n            <div \r\n              key={terminalId}\r\n              className={`network-node cursor-pointer p-1 rounded border text-center transition-all hover:bg-opacity-20 hover:bg-green-400 ${\r\n                isActive ? 'bg-green-400 bg-opacity-20 border-green-400' : 'border-gray-600'\r\n              }`}\r\n              style={{ \r\n                color: getStatusColor(status),\r\n                borderColor: getStatusColor(status),\r\n                fontSize: '9px'\r\n              }}\r\n              onClick={() => onTerminalSelect(terminalId)}\r\n            >\r\n              <div className=\"font-mono\">{terminalId.toUpperCase()}</div>\r\n              <div className=\"text-xs opacity-80\">\r\n                {status === 'corrupted' && '[UNSTABLE]'}\r\n                {status === 'encrypted' && '[ENCRYPTED]'}\r\n                {status === 'secure' && '[SECURE]'}\r\n                {status === 'active' && '[ONLINE]'}\r\n                {status === 'offline' && '[OFFLINE]'}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {accessedTerminals.length > 0 && (\r\n        <div className=\"mt-2 text-xs text-green-400 opacity-70\">\r\n          Click any terminal to reconnect\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n// Character set for corruption effects\r\nconst corruptionCharacters = \"!@#$%^&*()_+-=[]{}|;:,./<>?`~¡™£¢∞§¶•ªº–≠\";\r\n\r\n// Apply text corruption for glitch effects\r\nconst applyTextCorruption = (text, corruptionLevel = 0.02, isEclipseShard = false) => {\r\n  if (!text) return \"\";\r\n  \r\n  const lines = text.split('\\n');\r\n  const corruptedLines = lines.map(line => {\r\n    if (line.trim() === '') return line;\r\n    \r\n    let corruptedLine = '';\r\n    for (let i = 0; i < line.length; i++) {\r\n      if (isEclipseShard && \r\n         (line.includes(\"SHARD\") || line.includes(\"Eclipse\") || line.includes(\"Trevar\")) && \r\n         Math.random() < 0.2) {\r\n        if (Math.random() < 0.4) {\r\n          corruptedLine += corruptionCharacters.charAt(\r\n            Math.floor(Math.random() * corruptionCharacters.length)\r\n          );\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if (Math.random() < corruptionLevel) {\r\n        corruptedLine += corruptionCharacters.charAt(\r\n          Math.floor(Math.random() * corruptionCharacters.length)\r\n        );\r\n      } else {\r\n        corruptedLine += line[i];\r\n      }\r\n    }\r\n    return corruptedLine;\r\n  });\r\n  \r\n  return corruptedLines.join('\\n');\r\n};\r\n\r\n// Get terminal visual effects based on type\r\nconst getTerminalEffectClasses = (terminalId) => {\r\n  if (!terminalId) return \"terminal terminal-flicker\";\r\n  \r\n  const terminalName = terminalId.includes(\"/\") \r\n    ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\")\r\n    : terminalId;\r\n  \r\n  const damagedTerminals = [\"blacksite-es1\", \"sayelle-logs\", \"vennik-personal\"];\r\n  const minorGlitchTerminals = [\"fuwnet\", \"vanagandr001\", \"fuw01\", \"blacktalon\"];\r\n  \r\n  if (damagedTerminals.includes(terminalName)) {\r\n    return \"terminal terminal-severe-flicker terminal-scanlines\";\r\n  } else if (minorGlitchTerminals.includes(terminalName)) {\r\n    return \"terminal terminal-flicker terminal-scanlines\";\r\n  }\r\n  return \"terminal terminal-flicker\";\r\n};\r\n\r\n// Check if content should be corrupted\r\nconst shouldCorruptContent = (content, terminalId) => {\r\n  if (!content || !terminalId) return false;\r\n  \r\n  const terminalName = terminalId.includes(\"/\") \r\n    ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\")\r\n    : terminalId;\r\n  \r\n  const corruptTerminals = [\"blacksite-es1\", \"vennik-personal\", \"sayelle-logs\", \"blacktalon\"];\r\n  \r\n  return corruptTerminals.includes(terminalName) || \r\n         content.includes(\"Eclipse Shard\") || \r\n         content.includes(\"ES1\") ||\r\n         content.includes(\"Trevar\");\r\n};\r\n\r\n// Get corruption parameters\r\nconst getCorruptionParams = (content, terminalId) => {\r\n  if (!content || !terminalId) return { level: 0, isEclipseShard: false };\r\n  \r\n  const terminalName = terminalId.includes(\"/\") \r\n    ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\")\r\n    : terminalId;\r\n  \r\n  const isEclipseContent = content.includes(\"Eclipse Shard\") || \r\n                         content.includes(\"ES1\") ||\r\n                         terminalName === \"blacksite-es1\";\r\n                         \r\n  if (isEclipseContent) return { level: 0.03, isEclipseShard: true };\r\n  if (terminalName.includes(\"blacksite\")) return { level: 0.02, isEclipseShard: false };\r\n  if (terminalName.includes(\"sayelle\")) return { level: 0.015, isEclipseShard: false };\r\n  return { level: 0.01, isEclipseShard: false };\r\n};\r\n\r\n// Terminal definitions\r\nconst terminals = {\r\n  \"lysani01\": { requiresRoll: 8, logs: \"/logs/lysani01.json\" },\r\n  \"s.elara01\": { requiresRoll: false, logs: \"/logs/s.elara01.json\" },\r\n  \"slocombe875\": { requiresRoll: 8, logs: \"/logs/slocombe875.json\" },\r\n  \"waferterm01\": { requiresRoll: false, logs: \"/logs/waferterm01.json\" },\r\n  \"labpc81\": { requiresRoll: 6, logs: \"/logs/labpc81.json\" },\r\n  \"vanagandr001\": { requiresRoll: 8, logs: \"/logs/vanagandr001.json\" },\r\n  \"blackcircuit01\": { requiresRoll: 8, logs: \"/logs/blackcircuit01.json\" },\r\n  \"fuw01\": { requiresRoll: 8, logs: \"/logs/fuw01.json\" },\r\n  \"azura01\": { requiresRoll: 10, logs: \"/logs/azura01.json\" },\r\n  \"vennik01\": { requiresRoll: 12, logs: \"/logs/vennik01.json\", requiresPassword: true, password: \"vennik4ever\" },\r\n  \"caldonis_public\": { requiresRoll: false, logs: \"/logs/caldonis_public.json\" },\r\n  \"blacksite-es1\": { requiresRoll: 10, logs: \"/logs/blacksite-es1.json\" },\r\n  \"blacktalon\": { requiresRoll: 12, logs: \"/logs/blacktalon.json\" },\r\n  \"vennik-personal\": { requiresRoll: 10, logs: \"/logs/vennik-personal.json\" },\r\n  \"sayelle-logs\": { requiresRoll: 8, logs: \"/logs/sayelle-logs.json\" },\r\n  \"fuwnet\": { requiresRoll: 8, logs: \"/logs/fuw-network.json\" },\r\n  \"01-1485-10-4-89-40\": { requiresRoll: false, logs: \"/logs/01-1485-10-4-89-40.json\" }\r\n};\r\n\r\n// Typing effect with sound\r\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\r\n  if (index < text.length) {\r\n    setState(prev => prev + text[index]);\r\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\r\n  } else {\r\n    if (callback) callback();\r\n  }\r\n};\r\n\r\nexport default function TravellerTerminal() {\r\n  const navigate = useNavigate();\r\n  const hasInitialized = useRef(false);\r\n  const typingRef = useRef(null);\r\n  const terminalRef = useRef(null);\r\n  \r\n  // Core state\r\n  const [initText, setInitText] = useState(\"\");\r\n  const [initComplete, setInitComplete] = useState(false);\r\n  const [currentView, setCurrentView] = useState(\"init\");\r\n  const [inputCode, setInputCode] = useState(\"\");\r\n  const [terminalData, setTerminalData] = useState(\"\");\r\n  \r\n  // Network tracking state\r\n  const [accessedTerminals, setAccessedTerminals] = useState([]);\r\n  \r\n  // Terminal state\r\n  const [activeTerminal, setActiveTerminal] = useState(null);\r\n  const [logData, setLogData] = useState(null);\r\n  const [selectedLogData, setSelectedLogData] = useState(null);\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\r\n  \r\n  // Security state\r\n  const [rollCheck, setRollCheck] = useState(null);\r\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\r\n  const [requiresPassword, setRequiresPassword] = useState(false);\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const [passwordAttempts, setPasswordAttempts] = useState(0);\r\n  const [terminalPasswordRequired, setTerminalPasswordRequired] = useState(false);\r\n  const [terminalPasswordInput, setTerminalPasswordInput] = useState(\"\");\r\n  const [terminalPasswordAttempts, setTerminalPasswordAttempts] = useState(0);\r\n  \r\n  // Visual effects state\r\n  const [severeMalfunction, setSevereMalfunction] = useState(false);\r\n  const [glitchText, setGlitchText] = useState(\"\");\r\n  \r\n  // Command mode state\r\n  const [commandMode, setCommandMode] = useState(false);\r\n  const [commandHistory, setCommandHistory] = useState([]);\r\n  const [historyIndex, setHistoryIndex] = useState(-1);\r\n  const [commandOutput, setCommandOutput] = useState([]);\r\n\r\n  // Audio logs state\r\n  const [showAudioLogsPage, setShowAudioLogsPage] = useState(false);\r\n  const [audioLogsData, setAudioLogsData] = useState([]);\r\n\r\n  // Signal interference and audio state\r\n  const [signalInterferenceLevel, setSignalInterferenceLevel] = useState(0);\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n\r\n  // Enhanced Terminal commands definition\r\n  const terminalCommands = {\r\n    help: {\r\n      description: \"Display available commands\",\r\n      execute: () => {\r\n        const helpText = Object.entries(terminalCommands)\r\n          .map(([cmd, info]) => `${cmd.padEnd(15)} - ${info.description}`)\r\n          .join('\\n');\r\n        return `Available commands:\\n\\n${helpText}\\n\\nType 'exit' to return to normal mode.`;\r\n      }\r\n    },\r\n    scan: {\r\n      description: \"Scan for nearby terminals\",\r\n      execute: () => {\r\n        AudioManager.playEffect('corruption', 0.2);\r\n        const availableTerminals = Object.keys(terminals);\r\n        const scanResults = availableTerminals.map((t, i) => {\r\n          const corrupted = ['blacksite-es1', 'sayelle-logs', 'vennik-personal'].includes(t);\r\n          const encrypted = terminals[t].requiresPassword;\r\n          const accessed = accessedTerminals.includes(t);\r\n          const status = corrupted ? '[CORRUPTED]' : encrypted ? '[ENCRYPTED]' : accessed ? '[ACCESSED]' : '[ONLINE]';\r\n          return `${i + 1}. ${t.padEnd(20)} ${status}`;\r\n        }).join('\\n');\r\n        \r\n        return `Scanning local network...\\n\\n${scanResults}\\n\\nUse 'connect [terminal_name]' to establish connection.`;\r\n      }\r\n    },\r\n    trace: {\r\n      description: \"Trace signal origin\",\r\n      execute: () => {\r\n        AudioManager.playEffect('glitch', 0.3);\r\n        const traces = [\r\n          \"Tracing signal path...\",\r\n          \"Hop 1: Eternium Starport Relay [OK]\",\r\n          \"Hop 2: Caldonis Central Hub [OK]\", \r\n          \"Hop 3: ████████████ [ENCRYPTED]\",\r\n          \"Hop 4: Blacksite ES1 [CONNECTION LOST]\",\r\n          \"\",\r\n          \"WARNING: Trace detected by remote system\",\r\n          \"ALERT: Counter-trace initiated\"\r\n        ];\r\n        return traces.join('\\n');\r\n      }\r\n    },\r\n    decrypt: {\r\n      description: \"Attempt to decrypt corrupted data\",\r\n      execute: () => {\r\n        if (selectedLogData && activeTerminal) {\r\n          const chance = Math.random();\r\n          if (chance > 0.7) {\r\n            AudioManager.playEffect('access_granted', 0.3);\r\n            return \"Decryption successful! Corruption reduced by 15%.\\nRe-displaying content with improved clarity...\";\r\n          } else if (chance > 0.3) {\r\n            AudioManager.playEffect('corruption', 0.2);\r\n            return \"Partial decryption achieved. Some data recovered.\\nCorruption reduced by 5%.\";\r\n          } else {\r\n            AudioManager.playEffect('access_denied', 0.4);\r\n            return \"Decryption failed. Data integrity compromised.\\nWARNING: Security countermeasures detected.\";\r\n          }\r\n        }\r\n        return \"No encrypted data in current buffer.\";\r\n      }\r\n    },\r\n    ping: {\r\n      description: \"Check connection stability\",\r\n      execute: () => {\r\n        const latency = Math.floor(Math.random() * 200) + 50;\r\n        const packetLoss = Math.floor(Math.random() * 15);\r\n        const jitter = Math.floor(Math.random() * 30);\r\n        \r\n        AudioManager.playEffect('keypress', 0.2);\r\n        \r\n        return `Connection diagnostics:\r\n        \r\nLatency: ${latency}ms\r\nPacket Loss: ${packetLoss}%\r\nJitter: ${jitter}ms\r\nSignal Strength: ${100 - packetLoss}%\r\n        \r\n${packetLoss > 10 ? 'WARNING: Connection unstable' : 'Connection stable'}`;\r\n      }\r\n    },\r\n    whoami: {\r\n      description: \"Display current user info\",\r\n      execute: () => {\r\n        return `Current User: GUEST_${Math.floor(Math.random() * 9999).toString().padStart(4, '0')}\r\nAccess Level: RESTRICTED\r\nSession Started: ${new Date().toLocaleTimeString()}\r\nOrigin: Eternium Starport\r\nTerminal: ${activeTerminal ? activeTerminal.logs.replace('/logs/', '').replace('.json', '') : 'NONE'}`;\r\n      }\r\n    },\r\n    clear: {\r\n      description: \"Clear terminal screen\",\r\n      execute: () => {\r\n        setCommandOutput([]);\r\n        return null;\r\n      }\r\n    },\r\n    ls: {\r\n      description: \"List available files\",\r\n      execute: () => {\r\n        if (logData) {\r\n          const files = logData.map((log, i) => {\r\n            const locked = log.requires_roll ? `[LOCKED:${log.roll_check.difficulty}+]` : '';\r\n            const password = log.requires_password ? '[PASSWORD]' : '';\r\n            return `${i.toString().padStart(2, '0')}. ${log.title.padEnd(40)} ${locked}${password}`;\r\n          }).join('\\n');\r\n          return `Directory listing:\\n\\n${files}\\n\\nUse 'cat [number]' to view file contents.`;\r\n        }\r\n        return \"No files in current directory. Use 'scan' to find terminals.\";\r\n      }\r\n    },\r\n    cat: {\r\n      description: \"Display file contents\",\r\n      execute: (args) => {\r\n        if (!args || args.length === 0) {\r\n          return \"Usage: cat [file_number]\";\r\n        }\r\n        \r\n        const fileIndex = parseInt(args[0]);\r\n        if (logData && fileIndex >= 0 && fileIndex < logData.length) {\r\n          handleLogClick(logData[fileIndex]);\r\n          return `Loading file: ${logData[fileIndex].title}...`;\r\n        }\r\n        \r\n        return `Error: File not found. Use 'ls' to list available files.`;\r\n      }\r\n    },\r\n    connect: {\r\n      description: \"Connect to a terminal\",\r\n      execute: (args) => {\r\n        if (!args || args.length === 0) {\r\n          return \"Usage: connect [terminal_name]\";\r\n        }\r\n        \r\n        const terminalName = args.join(' ').toLowerCase();\r\n        if (terminals[terminalName]) {\r\n          // Add to accessed terminals if not already there\r\n          if (!accessedTerminals.includes(terminalName)) {\r\n            setAccessedTerminals(prev => [...prev, terminalName]);\r\n          }\r\n          \r\n          setInputCode(terminalName);\r\n          // Use setTimeout to ensure state updates\r\n          setTimeout(() => {\r\n            handleAccessCode();\r\n          }, 100);\r\n          return `Attempting connection to ${terminalName}...`;\r\n        }\r\n        \r\n        return `Error: Terminal '${terminalName}' not found. Use 'scan' to list available terminals.`;\r\n      }\r\n    },\r\n    network: {\r\n      description: \"Show network map\",\r\n      execute: () => {\r\n        if (accessedTerminals.length === 0) {\r\n          return \"No terminals accessed yet. Use 'scan' to find available terminals.\";\r\n        }\r\n        return `Network Map:\\n\\n${accessedTerminals.map(t => `• ${t.toUpperCase()}`).join('\\n')}\\n\\nUse 'connect [terminal]' to reconnect.`;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Hidden/Easter egg commands\r\n  const hiddenCommands = {\r\n    riftjaw: () => {\r\n      setSevereMalfunction(true);\r\n      AudioManager.playEffect('warning', 0.5);\r\n      setTimeout(() => setSevereMalfunction(false), 3000);\r\n      return \"WARNING: UNAUTHORIZED ACCESS ATTEMPT DETECTED\\n\\nᚱᛁᚠᛏᛃᚨᚹ ᛊᛏᛁᚱᛊ ᛒᛖᚾᛖᚨᚦ\\n\\nSYSTEM LOCKDOWN INITIATED\";\r\n    },\r\n    eclipse: () => {\r\n      AudioManager.playEffect('glitch', 0.4);\r\n      const glitchText = \"QUANTUM FLUCTUATION DETECTED IN LOCAL SPACETIME\\n\\n\" +\r\n        \"Reality anchor holding at \" + (Math.random() * 30 + 70).toFixed(1) + \"%\\n\" +\r\n        \"Dimensional barriers: UNSTABLE\\n\" +\r\n        \"Eclipse Shard resonance detected: \" + (Math.random() * 1000).toFixed(0) + \" Hz\\n\\n\" +\r\n        \"ERROR: Cannot triangulate signal source\";\r\n      return applyTextCorruption(glitchText, 0.1, true);\r\n    },\r\n    trevar: () => {\r\n      AudioManager.playEffect('corruption', 0.3);\r\n      return \"SUBJECT FILE CLASSIFIED - OMEGA CLEARANCE REQUIRED\\n\\n\" +\r\n        \"Last known status: CONTAINED\\n\" +\r\n        \"Location: [REDACTED]\\n\" +\r\n        \"Neural synchronization: 87%\\n\" +\r\n        \"Warning: Subject demonstrates Class-IV psionic manifestations\";\r\n    },\r\n    vanagandr: () => {\r\n      return \"VESSEL REGISTRY: VANAGANDR\\n\" +\r\n        \"Class: Type-S Scout/Courier (Modified)\\n\" +\r\n        \"Status: IMPOUNDED - PENDING AUCTION\\n\" +\r\n        \"Special Modifications: CLASSIFIED\\n\" +\r\n        \"Warning: Ship systems contain encrypted data\\n\" +\r\n        \"Warning: Potential biohazard in cargo hold\";\r\n    }\r\n  };\r\n\r\n  // Initialize audio manager\r\n  useEffect(() => {\r\n    AudioManager.preloadSounds();\r\n  }, []);\r\n\r\n  // Update signal interference based on terminal\r\n  useEffect(() => {\r\n    if (!activeTerminal) {\r\n      setSignalInterferenceLevel(0);\r\n      return;\r\n    }\r\n    \r\n    const terminalName = activeTerminal.logs.replace(\"/logs/\", \"\").replace(\".json\", \"\");\r\n    \r\n    // Set interference levels based on terminal type\r\n    const interferenceMap = {\r\n      'blacksite-es1': 0.8,\r\n      'sayelle-logs': 0.7,\r\n      'vennik-personal': 0.6,\r\n      'blacktalon': 0.5,\r\n      'fuwnet': 0.4,\r\n      'vanagandr001': 0.3,\r\n      'default': 0.1\r\n    };\r\n    \r\n    const level = interferenceMap[terminalName] || interferenceMap.default;\r\n    setSignalInterferenceLevel(level);\r\n    \r\n    // Play connection sound\r\n    if (soundEnabled) {\r\n      AudioManager.playEffect('access_granted', 0.3);\r\n    }\r\n  }, [activeTerminal, soundEnabled]);\r\n\r\n  // Play key sounds\r\n  const playKeySound = () => {\r\n    if (soundEnabled && Math.random() > 0.7) {\r\n      AudioManager.playEffect('keypress', 0.1);\r\n    }\r\n  };\r\n\r\n  // Play typing sounds\r\n  useEffect(() => {\r\n    const handleKeyPress = (e) => {\r\n      if (e.target.tagName === 'INPUT' && soundEnabled) {\r\n        playKeySound();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('keypress', handleKeyPress);\r\n    return () => window.removeEventListener('keypress', handleKeyPress);\r\n  }, [soundEnabled]);\r\n\r\n  // Enhanced typing with sound\r\n  const typeTextWithSound = (text, setState, callback = null, index = 0, delay = 30) => {\r\n    if (soundEnabled) {\r\n      if (text.includes(\"ACCESS DENIED\")) {\r\n        AudioManager.playEffect('access_denied', 0.4);\r\n      } else if (text.includes(\"ERROR\")) {\r\n        AudioManager.playEffect('warning', 0.3);\r\n      } else if (text.includes(\"ACCESS GRANTED\") || text.includes(\"successful\")) {\r\n        AudioManager.playEffect('access_granted', 0.3);\r\n      }\r\n    }\r\n    \r\n    typeText(text, setState, callback, index, delay);\r\n  };\r\n\r\n  // Command processing\r\n  const processCommand = (input) => {\r\n    if (!input.trim()) return;\r\n    \r\n    const parts = input.trim().toLowerCase().split(' ');\r\n    const command = parts[0];\r\n    const args = parts.slice(1);\r\n    \r\n    // Add to history FIRST\r\n    setCommandHistory(prev => [...prev, input]);\r\n    setHistoryIndex(-1);\r\n    \r\n    if (command === 'exit') {\r\n      setCommandMode(false);\r\n      setCommandOutput([]);\r\n      return;\r\n    }\r\n    \r\n    let output = null;\r\n    \r\n    if (terminalCommands[command]) {\r\n      output = terminalCommands[command].execute(args);\r\n    } else if (hiddenCommands[command]) {\r\n      output = hiddenCommands[command]();\r\n    } else {\r\n      output = `Command not recognized: '${command}'. Type 'help' for available commands.`;\r\n    }\r\n    \r\n    if (output !== null) {\r\n      setCommandOutput(prev => [...prev, { command: input, output }]);\r\n    }\r\n  };\r\n\r\n  // Command input handler\r\n  const handleCommandKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      processCommand(inputCode);\r\n      setInputCode('');\r\n    } else if (e.key === 'ArrowUp') {\r\n      e.preventDefault();\r\n      if (commandHistory.length > 0 && historyIndex < commandHistory.length - 1) {\r\n        const newIndex = historyIndex + 1;\r\n        setHistoryIndex(newIndex);\r\n        setInputCode(commandHistory[commandHistory.length - 1 - newIndex]);\r\n      }\r\n    } else if (e.key === 'ArrowDown') {\r\n      e.preventDefault();\r\n      if (historyIndex > 0) {\r\n        const newIndex = historyIndex - 1;\r\n        setHistoryIndex(newIndex);\r\n        setInputCode(commandHistory[commandHistory.length - 1 - newIndex]);\r\n      } else if (historyIndex === 0) {\r\n        setHistoryIndex(-1);\r\n        setInputCode('');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Initialize terminal\r\n  useEffect(() => {\r\n    if (hasInitialized.current) return;\r\n    hasInitialized.current = true;\r\n    \r\n    const loadingMessages = [\r\n      \"Initializing system...\",\r\n      \"Connecting to network...\",\r\n      \"Loading secure protocols...\",\r\n      \"The Traveller Terminal is now online.\"\r\n    ];\r\n    \r\n    let i = 0;\r\n    const displayNextMessage = () => {\r\n      if (i < loadingMessages.length) {\r\n        typeTextWithSound(loadingMessages[i] + \"\\n\", setInitText, () => {\r\n          setInitText(prev => prev + \"\\n\");\r\n          i++;\r\n          displayNextMessage();\r\n        }, 0, 50);\r\n      } else {\r\n        const welcomeMessage =\r\n          \"\\nWelcome to The Traveller Terminal.\\n\" +\r\n          \"Type the name of a terminal to access its contents.\\n\" +\r\n          \"Press ESC at any time to go back.\\n\" +\r\n          \"Toggle Command Mode for advanced hacking tools.\\n\\n\";\r\n        typeTextWithSound(welcomeMessage, setInitText, () => {\r\n          setInitComplete(true);\r\n        }, 0, 50);\r\n      }\r\n    };\r\n    displayNextMessage();\r\n  }, []);\r\n\r\n  // Auto-scroll terminal\r\n  useEffect(() => {\r\n    if (terminalRef.current) {\r\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\r\n    }\r\n  }, [displayedText, terminalData, logTypingComplete, currentView, commandOutput]);\r\n\r\n  // Keyboard shortcuts\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      // Don't interfere with input fields\r\n      if (e.target.tagName === 'INPUT') return;\r\n      \r\n      if (e.key === \"Escape\") {\r\n        if (currentView === \"log\" && !logTypingComplete) {\r\n          setLogTypingComplete(true);\r\n          if (typingRef.current) {\r\n            clearTimeout(typingRef.current);\r\n          }\r\n          if (selectedLogData) {\r\n            let fullText = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n            \r\n            if (activeTerminal && shouldCorruptContent(fullText, activeTerminal.logs)) {\r\n              const { level, isEclipseShard } = getCorruptionParams(fullText, activeTerminal.logs);\r\n              fullText = applyTextCorruption(fullText, level, isEclipseShard);\r\n            }\r\n            \r\n            setDisplayedText(fullText);\r\n          }\r\n        } else if (currentView === \"log\") {\r\n          handleBackToTerminal();\r\n        } else if (currentView === \"terminal\") {\r\n          handleBackToInit();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [currentView, logTypingComplete, selectedLogData, activeTerminal]);\r\n\r\n  // Random glitch effects\r\n  useEffect(() => {\r\n    if (!activeTerminal || !selectedLogData) return;\r\n    \r\n    const terminalName = activeTerminal.logs.replace(\"/logs/\", \"\").replace(\".json\", \"\");\r\n    const glitchEnabledTerminals = [\"blacksite-es1\", \"vennik-personal\", \"fuwnet\", \"sayelle-logs\", \"blacktalon\"];\r\n    \r\n    if (glitchEnabledTerminals.includes(terminalName)) {\r\n      const randomGlitch = () => {\r\n        if (Math.random() < 0.05) {\r\n          setSevereMalfunction(true);\r\n          if (soundEnabled) {\r\n            AudioManager.playEffect('glitch', 0.3);\r\n          }\r\n          \r\n          const glitchMessages = [\r\n            \"WARNING: SIGNAL INTEGRITY FAILING\",\r\n            \"CRC ERROR DETECTED IN DATA STREAM\",\r\n            \"QUANTUM FLUCTUATION DETECTED\",\r\n            \"TEMPORAL ANOMALY IN DATA BUFFER\",\r\n            \"WARNING: REALITY ANCHOR DESTABILIZING\",\r\n            \"SECURITY BREACH ATTEMPT DETECTED\"\r\n          ];\r\n          \r\n          setGlitchText(glitchMessages[Math.floor(Math.random() * glitchMessages.length)]);\r\n          \r\n          setTimeout(() => {\r\n            setSevereMalfunction(false);\r\n            setGlitchText(\"\");\r\n          }, 1500);\r\n        }\r\n      };\r\n      \r\n      const glitchInterval = setInterval(randomGlitch, 10000);\r\n      return () => clearInterval(glitchInterval);\r\n    }\r\n  }, [selectedLogData, activeTerminal, soundEnabled]);\r\n\r\n  // Terminal access handler\r\n  const handleAccessCode = () => {\r\n    if (inputCode.trim().toLowerCase() === \"poop\") {\r\n      navigate(\"/poop\");\r\n      return;\r\n    }\r\n    \r\n    if (inputCode.trim() === \"01-1485-10-4-89-40\") {\r\n      navigate(\"/riftjaw\");\r\n      return;\r\n    }\r\n    \r\n    const terminal = terminals[inputCode];\r\n    if (terminal) {\r\n      // Add to accessed terminals if not already there\r\n      if (!accessedTerminals.includes(inputCode)) {\r\n        setAccessedTerminals(prev => [...prev, inputCode]);\r\n      }\r\n      \r\n      setActiveTerminal(terminal);\r\n      setCurrentView(\"terminal\");\r\n      \r\n      if (terminal.requiresPassword) {\r\n        setTerminalPasswordRequired(true);\r\n      } else if (terminal.requiresRoll) {\r\n        setRollCheck({ difficulty: terminal.requiresRoll });\r\n      } else {\r\n        fetchLogs(terminal.logs);\r\n      }\r\n    } else {\r\n      typeTextWithSound(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\r\n    }\r\n    setInputCode(\"\");\r\n  };\r\n\r\n  // Terminal password handler\r\n  const handleTerminalPasswordSubmit = () => {\r\n    if (activeTerminal && terminalPasswordInput === activeTerminal.password) {\r\n      setTerminalPasswordRequired(false);\r\n      fetchLogs(activeTerminal.logs);\r\n    } else {\r\n      const attempts = terminalPasswordAttempts + 1;\r\n      setTerminalPasswordAttempts(attempts);\r\n      setTerminalPasswordInput(\"\");\r\n      \r\n      if (attempts >= 3) {\r\n        setTerminalPasswordRequired(false);\r\n        \r\n        if (activeTerminal && activeTerminal.requiresRoll) {\r\n          setRollCheck({ difficulty: activeTerminal.requiresRoll });\r\n          typeTextWithSound(\"Maximum password attempts reached. Attempting alternate access method...\", setTerminalData);\r\n        } else {\r\n          typeTextWithSound(\"ACCESS DENIED. MAXIMUM ATTEMPTS REACHED.\", setTerminalData);\r\n          setTimeout(() => handleBackToInit(), 2000);\r\n        }\r\n      } else {\r\n        typeTextWithSound(`ACCESS DENIED. INVALID PASSWORD. ${3 - attempts} attempts remaining.`, setTerminalData);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Roll check handler\r\n  const handleRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (activeTerminal) {\r\n        fetchLogs(activeTerminal.logs);\r\n      } else {\r\n        typeTextWithSound(\"ERROR: Terminal not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      typeTextWithSound(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n    }\r\n    setRollCheck(null);\r\n  };\r\n\r\n  // Special roll check handler\r\n  const handleSpecialRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (selectedLogData) {\r\n        if (selectedLogData.logs) {\r\n          setAudioLogsData(selectedLogData.logs);\r\n          setShowAudioLogsPage(true);\r\n        } else {\r\n          setDisplayedText(\"\");\r\n          setLogTypingComplete(false);\r\n          setCurrentView(\"log\");\r\n          \r\n          let message = \"\";\r\n          if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\r\n            message = selectedLogData.roll_check.on_success + \"\\n\\n\";\r\n            message += `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n          } else {\r\n            message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n          }\r\n          \r\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n            const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n            message = applyTextCorruption(message, level, isEclipseShard);\r\n          }\r\n          \r\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n            if (index < text.length) {\r\n              setState(prev => prev + text[index]);\r\n              typingRef.current = setTimeout(\r\n                () => typeWithRef(text, setState, callback, index + 1, delay), \r\n                delay\r\n              );\r\n            } else {\r\n              typingRef.current = null;\r\n              if (callback) callback();\r\n            }\r\n          };\r\n          \r\n          typeWithRef(message, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\r\n        typeTextWithSound(selectedLogData.roll_check.on_failure, setTerminalData);\r\n      } else {\r\n        typeTextWithSound(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n      }\r\n      setSelectedLogData(null);\r\n    }\r\n    setSpecialRollCheck(null);\r\n    setPasswordAttempts(0);\r\n    setPasswordInput(\"\");\r\n  };\r\n\r\n  // Fetch logs from terminal\r\n  const fetchLogs = async (logPath) => {\r\n    try {\r\n      const response = await fetch(logPath);\r\n      const data = await response.json();\r\n      \r\n      if (Array.isArray(data)) {\r\n        setLogData(data);\r\n      } else {\r\n        // Handle special multi-level authentication\r\n        if (logPath.includes(\"01-1485-10-4-89-40\")) {\r\n          navigate(\"/riftjaw\");\r\n        } else {\r\n          setSelectedLogData(data);\r\n          setCurrentView(\"log\");\r\n          setDisplayedText(\"\");\r\n          setLogTypingComplete(false);\r\n          \r\n          let message = `Date: ${data.date}\\nAuthor: ${data.author}\\n\\n${data.content || \"No data available.\"}`;\r\n          \r\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n            const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n            message = applyTextCorruption(message, level, isEclipseShard);\r\n          }\r\n          \r\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n            if (index < text.length) {\r\n              setState(prev => prev + text[index]);\r\n              typingRef.current = setTimeout(\r\n                () => typeWithRef(text, setState, callback, index + 1, delay), \r\n                delay\r\n              );\r\n            } else {\r\n              typingRef.current = null;\r\n              if (callback) callback();\r\n            }\r\n          };\r\n          \r\n          typeWithRef(message, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      typeTextWithSound(\"ERROR LOADING LOGS.\", setTerminalData);\r\n    }\r\n  };\r\n\r\n  // Handle log click\r\n  const handleLogClick = (log) => {\r\n    setSelectedLogData(log);\r\n    setCurrentView(\"log\");\r\n    setPasswordAttempts(0);\r\n    setPasswordInput(\"\");\r\n    \r\n    if (log.logs) {\r\n      if (log.requires_password) {\r\n        setRequiresPassword(true);\r\n      } else {\r\n        setAudioLogsData(log.logs);\r\n        setShowAudioLogsPage(true);\r\n      }\r\n    } else if (log.requires_password) {\r\n      setRequiresPassword(true);\r\n    } else {\r\n      if (log.requires_roll && log.roll_check && log.roll_check.difficulty >= 10) {\r\n        setSpecialRollCheck({ difficulty: log.roll_check.difficulty });\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        \r\n        let message = `Date: ${log.date}\\nAuthor: ${log.author}\\n\\n${log.content}`;\r\n        \r\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n          const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n          message = applyTextCorruption(message, level, isEclipseShard);\r\n        }\r\n        \r\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n          if (index < text.length) {\r\n            setState(prev => prev + text[index]);\r\n            typingRef.current = setTimeout(\r\n              () => typeWithRef(text, setState, callback, index + 1, delay), \r\n              delay\r\n            );\r\n          } else {\r\n            typingRef.current = null;\r\n            if (callback) callback();\r\n          }\r\n        };\r\n        \r\n        typeWithRef(message, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Password submit handler\r\n  const handlePasswordSubmit = () => {\r\n    if (passwordInput === selectedLogData.password) {\r\n      setRequiresPassword(false);\r\n      \r\n      if (selectedLogData.logs) {\r\n        setAudioLogsData(selectedLogData.logs);\r\n        setShowAudioLogsPage(true);\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        \r\n        let message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n        \r\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n          const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n          message = applyTextCorruption(message, level, isEclipseShard);\r\n        }\r\n        \r\n        typeTextWithSound(message, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    } else {\r\n      const attempts = passwordAttempts + 1;\r\n      setPasswordAttempts(attempts);\r\n      if (attempts >= (selectedLogData.attemptsAllowed || 3)) {\r\n        setRequiresPassword(false);\r\n        setSpecialRollCheck({ difficulty: selectedLogData.roll_check.difficulty });\r\n      } else {\r\n        typeTextWithSound(\"Incorrect password. Please try again.\", setTerminalData);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Network map terminal selection handler\r\n  const handleNetworkTerminalSelect = (terminalId) => {\r\n    setInputCode(terminalId);\r\n    setTimeout(() => {\r\n      handleAccessCode();\r\n    }, 100);\r\n  };\r\n\r\n  // Navigation handlers\r\n  const handleBackToTerminal = () => {\r\n    setSelectedLogData(null);\r\n    setDisplayedText(\"\");\r\n    setLogTypingComplete(false);\r\n    setCurrentView(\"terminal\");\r\n    if (typingRef.current) {\r\n      clearTimeout(typingRef.current);\r\n      typingRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleBackToInit = () => {\r\n    setLogData(null);\r\n    setActiveTerminal(null);\r\n    setTerminalData(\"\");\r\n    setCurrentView(\"init\");\r\n    setTerminalPasswordRequired(false);\r\n    setTerminalPasswordInput(\"\");\r\n    setTerminalPasswordAttempts(0);\r\n    setRequiresPassword(false);\r\n    setPasswordInput(\"\");\r\n    setPasswordAttempts(0);\r\n    setSignalInterferenceLevel(0);\r\n  };\r\n\r\n  // Audio logs page\r\n  if (showAudioLogsPage) {\r\n    return (\r\n      <div className=\"flex flex-col items-center h-screen bg-black\">\r\n        <h1 className=\"text-green-400 font-mono text-xl my-4 terminal-flicker\">Encrypted Audio Logs</h1>\r\n        <div className=\"w-full max-w-md border-green-400 border-2 p-4 overflow-auto terminal-flicker\">\r\n          {audioLogsData.map((log, index) => (\r\n            <div key={index} style={{ marginBottom: \"20px\" }}>\r\n              <h2 className=\"text-green-400 font-mono\">{log.title}</h2>\r\n              <p className=\"text-green-400 font-mono\" style={{ whiteSpace: \"pre-wrap\" }}>{log.content}</p>\r\n              {log.audio_file && (\r\n                <audio\r\n                  controls\r\n                  style={{\r\n                    backgroundColor: \"black\",\r\n                    border: \"1px solid #33ff33\",\r\n                    borderRadius: \"5px\",\r\n                    width: \"100%\",\r\n                    marginTop: \"10px\",\r\n                    color: \"#33ff33\"\r\n                  }}\r\n                >\r\n                  <source src={log.audio_file} type=\"audio/mp3\" />\r\n                  Your browser does not support the audio element.\r\n                </audio>\r\n              )}\r\n            </div>\r\n          ))}\r\n          <Button\r\n            className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-4\"\r\n            onClick={() => {\r\n              setShowAudioLogsPage(false);\r\n              setAudioLogsData([]);\r\n              setSelectedLogData(null);\r\n              setCurrentView(\"terminal\");\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main render\r\n  return (\r\n    <div className=\"flex flex-col items-center min-h-screen bg-black p-2 sm:p-4\">\r\n      {/* Signal Interference Component */}\r\n      <SignalInterference \r\n        level={signalInterferenceLevel} \r\n        terminalType={activeTerminal ? 'corrupted' : 'normal'} \r\n      />\r\n      \r\n      {/* Sound Toggle Button */}\r\n      <div className=\"fixed top-4 left-4 z-50\">\r\n        <Button\r\n          className=\"bg-green-400 text-black font-mono px-2 py-1 rounded text-xs hover:bg-green-500\"\r\n          onClick={() => {\r\n            const isMuted = AudioManager.toggleMute();\r\n            setSoundEnabled(!isMuted);\r\n          }}\r\n        >\r\n          {soundEnabled ? '🔊' : '🔇'}\r\n        </Button>\r\n      </div>\r\n      \r\n      {/* Network Map - NEW FEATURE */}\r\n      {currentView === \"init\" && (\r\n        <NetworkMap \r\n          accessedTerminals={accessedTerminals}\r\n          activeTerminal={activeTerminal}\r\n          onTerminalSelect={handleNetworkTerminalSelect}\r\n        />\r\n      )}\r\n      \r\n      {currentView === \"init\" && (\r\n        <div\r\n          style={{\r\n            fontFamily: \"monospace\",\r\n            color: \"#33ff33\",\r\n            whiteSpace: \"pre-wrap\",\r\n            marginBottom: \"10px\",\r\n            textAlign: \"center\",\r\n            fontSize: \"12px\"\r\n          }}\r\n          className=\"terminal-flicker px-2 sm:text-sm lg:text-base\"\r\n        >\r\n          {initText}\r\n        </div>\r\n      )}\r\n      \r\n      <Card className=\"w-full max-w-sm sm:max-w-md lg:max-w-lg border-green-400 border-2\">\r\n        <CardContent className=\"p-3 sm:p-4 lg:p-6\">\r\n          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\r\n            <div \r\n              className={`${activeTerminal ? getTerminalEffectClasses(activeTerminal.logs) : \"terminal terminal-flicker\"} sm:h-[300px] lg:h-[350px] sm:text-xs lg:text-sm`}\r\n              style={{ \r\n                overflow: \"auto\", \r\n                height: \"250px\",\r\n                position: \"relative\",\r\n                fontSize: \"11px\"\r\n              }}\r\n              ref={terminalRef}\r\n            >\r\n              {/* Severe malfunction overlay */}\r\n              {severeMalfunction && (\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-70 flex items-center justify-center z-20\">\r\n                  <div className=\"text-red-500 font-mono text-sm sm:text-lg lg:text-xl severe-glitch p-2 sm:p-4 border border-red-500\">\r\n                    {glitchText}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Terminal password prompt */}\r\n              {terminalPasswordRequired ? (\r\n                <div className=\"p-2\">\r\n                  <p className=\"mb-2\">Terminal requires password authentication.</p>\r\n                  <p className=\"mb-4\">Attempts remaining: {3 - terminalPasswordAttempts}</p>\r\n                  <div className=\"mt-4\">\r\n                    <Input\r\n                      className=\"bg-black text-green-400 border border-green-400 px-2 sm:px-3 py-2 font-mono focus:outline-none w-full text-xs sm:text-sm\"\r\n                      placeholder=\"Enter Password\"\r\n                      value={terminalPasswordInput}\r\n                      onChange={(e) => setTerminalPasswordInput(e.target.value)}\r\n                      type=\"password\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                          handleTerminalPasswordSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div className=\"flex flex-col sm:flex-row gap-2 mt-2\">\r\n                      <Button\r\n                        className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                        onClick={handleTerminalPasswordSubmit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                        onClick={handleBackToInit}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : specialRollCheck ? (\r\n                <div className=\"p-2\">\r\n                  <p className=\"mb-4 text-xs sm:text-sm\">\r\n                    Did you pass the {specialRollCheck.difficulty}+ check for{\" \"}\r\n                    {selectedLogData ? selectedLogData.title : \"this file\"}?\r\n                  </p>\r\n                  <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={() => handleSpecialRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={() => handleSpecialRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : rollCheck ? (\r\n                <div className=\"p-2\">\r\n                  <p className=\"mb-4 text-xs sm:text-sm\">\r\n                    Did you pass the {rollCheck.difficulty}+ Electronics (Computers) check?\r\n                  </p>\r\n                  <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={() => handleRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={() => handleRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData && requiresPassword ? (\r\n                <div className=\"p-2\">\r\n                  <div style={{ whiteSpace: \"pre-wrap\", marginBottom: \"10px\" }} className=\"text-xs sm:text-sm\">{displayedText}</div>\r\n                  <p className=\"mb-2 text-xs sm:text-sm\">\r\n                    Password required. Attempts remaining:{\" \"}\r\n                    {(selectedLogData.attemptsAllowed || 3) - passwordAttempts}\r\n                  </p>\r\n                  <Input\r\n                    className=\"bg-black text-green-400 border border-green-400 px-2 sm:px-3 py-2 font-mono focus:outline-none w-full text-xs sm:text-sm\"\r\n                    placeholder=\"Enter Password\"\r\n                    value={passwordInput}\r\n                    onChange={(e) => setPasswordInput(e.target.value)}\r\n                    type=\"password\"\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        handlePasswordSubmit();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <div className=\"flex flex-col sm:flex-row gap-2 mt-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={handlePasswordSubmit}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={handleBackToTerminal}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData ? (\r\n                <div className=\"terminal-glitch p-2\">\r\n                  <div style={{ whiteSpace: \"pre-wrap\" }} className=\"text-xs sm:text-sm\">{displayedText}</div>\r\n                  {selectedLogData.audio_file && (\r\n                    <audio\r\n                      controls\r\n                      className=\"w-full mt-2\"\r\n                      style={{\r\n                        backgroundColor: \"black\",\r\n                        border: \"1px solid #33ff33\",\r\n                        borderRadius: \"5px\",\r\n                        color: \"#33ff33\"\r\n                      }}\r\n                    >\r\n                      <source src={selectedLogData.audio_file} type=\"audio/mp3\" />\r\n                      Your browser does not support the audio element.\r\n                    </audio>\r\n                  )}\r\n                  {logTypingComplete && (\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2 w-full sm:w-auto text-xs sm:text-sm\"\r\n                      onClick={handleBackToTerminal}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              ) : logData ? (\r\n                <div className=\"p-2\">\r\n                  {logData.map((log, index) => (\r\n                    <p\r\n                      key={index}\r\n                      onClick={() => handleLogClick(log)}\r\n                      className=\"cursor-pointer underline py-2 sm:py-1 text-xs sm:text-sm hover:text-green-300\"\r\n                    >\r\n                      {log.title}\r\n                    </p>\r\n                  ))}\r\n                  <Button\r\n                    className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2 w-full sm:w-auto text-xs sm:text-sm\"\r\n                    onClick={handleBackToInit}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              ) : currentView === \"init\" && commandMode ? (\r\n                <div className=\"command-interface p-2\">\r\n                  <div className=\"command-output\" style={{ \r\n                    minHeight: '150px', \r\n                    maxHeight: '200px', \r\n                    overflowY: 'auto',\r\n                    marginBottom: '10px'\r\n                  }}>\r\n                    {commandOutput.map((entry, index) => (\r\n                      <div key={index} style={{ marginBottom: '10px' }} className=\"text-xs sm:text-sm\">\r\n                        <div style={{ color: '#33ff33' }}>&gt; {entry.command}</div>\r\n                        <div style={{ whiteSpace: 'pre-wrap', marginLeft: '10px' }}>\r\n                          {entry.output}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"command-prompt flex items-center\">\r\n                    <span className=\"mr-1 text-xs sm:text-sm\">&gt;</span>\r\n                    <Input\r\n                      className=\"bg-black text-green-400 border-0 px-0 py-0 font-mono focus:outline-none flex-grow text-xs sm:text-sm\"\r\n                      placeholder=\"Enter command...\"\r\n                      value={inputCode}\r\n                      onChange={(e) => setInputCode(e.target.value)}\r\n                      onKeyDown={handleCommandKeyDown}\r\n                      autoFocus\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <p className=\"glitch-text p-2 text-xs sm:text-sm\">\r\n                  {terminalData || \"ENTER ACCESS CODE TO PROCEED\"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n          \r\n          {/* Input section */}\r\n          {currentView === \"init\" && (\r\n            <div className=\"mt-3 sm:mt-4\">\r\n              {/* Command mode toggle */}\r\n              <div className=\"command-mode-toggle mb-2 text-right\">\r\n                <Button\r\n                  className=\"bg-green-400 text-black font-mono px-2 py-1 rounded text-xs hover:bg-green-500\"\r\n                  onClick={() => {\r\n                    setCommandMode(!commandMode);\r\n                    setCommandOutput([]);\r\n                  }}\r\n                >\r\n                  {commandMode ? 'GUI MODE' : 'COMMAND MODE'}\r\n                </Button>\r\n              </div>\r\n              \r\n              {/* Regular input (only show if not in command mode) */}\r\n              {!commandMode && (\r\n                <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                  <Input\r\n                    className=\"bg-black text-green-400 border border-green-400 px-2 sm:px-3 py-2 font-mono focus:outline-none text-xs sm:text-sm flex-grow\"\r\n                    placeholder=\"Enter Access Code...\"\r\n                    value={inputCode}\r\n                    onChange={(e) => setInputCode(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        handleAccessCode();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 text-xs sm:text-sm w-full sm:w-auto\"\r\n                    onClick={handleAccessCode}\r\n                  >\r\n                    Enter\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}