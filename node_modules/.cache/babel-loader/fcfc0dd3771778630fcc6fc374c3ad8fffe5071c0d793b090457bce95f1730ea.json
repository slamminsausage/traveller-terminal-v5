{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\Desktop\\\\traveller-terminal-v5\\\\src\\\\components\\\\TravellerTerminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"../ui/Card\";\nimport { Input } from \"../ui/Input\";\nimport { Button } from \"../ui/Button\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst terminalStyle = {\n  fontFamily: \"monospace\",\n  color: \"#33ff33\",\n  backgroundColor: \"black\",\n  padding: \"20px\",\n  minHeight: \"400px\",\n  border: \"2px solid #33ff33\",\n  borderRadius: \"5px\",\n  boxShadow: \"0 0 10px #33ff33\"\n};\nconst terminalInputStyle = \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\";\nconst terminalButtonStyle = \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\";\nconst terminals = {\n  \"lysani01\": {\n    requiresRoll: 8,\n    logs: \"/logs/lysani01.json\"\n  },\n  \"s.elara01\": {\n    requiresRoll: false,\n    logs: \"/logs/s.elara01.json\"\n  },\n  \"slocombe875\": {\n    requiresRoll: 8,\n    logs: \"/logs/slocombe875.json\"\n  },\n  \"waferterm01\": {\n    requiresRoll: false,\n    logs: \"/logs/waferterm01.json\"\n  },\n  \"labpc81\": {\n    requiresRoll: 6,\n    logs: \"/logs/labpc81.json\"\n  } // New terminal added\n};\n\n// Recursive typing function using setTimeout.\nconst typeText = (text, setState, callback = null, index = 0) => {\n  if (index < text.length) {\n    setState(prev => prev + text[index]);\n    setTimeout(() => typeText(text, setState, callback, index + 1), 30);\n  } else {\n    if (callback) callback();\n  }\n};\nexport default function TravellerTerminal() {\n  _s();\n  const [inputCode, setInputCode] = useState(\"\");\n  const [terminalData, setTerminalData] = useState(\"\");\n  const [logData, setLogData] = useState(null);\n  const [rollCheck, setRollCheck] = useState(null);\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\n  const [activeTerminal, setActiveTerminal] = useState(null);\n  const [selectedLogData, setSelectedLogData] = useState(null);\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\n\n  // Boot sequence states\n  const [bootMessage, setBootMessage] = useState(\"\");\n  const [bootComplete, setBootComplete] = useState(false);\n  useEffect(() => {\n    // Phase 1: Type \"Booting up...\"\n    typeText(\"Booting up...\", setBootMessage, () => {\n      // After a brief pause, clear and type the welcome message.\n      setTimeout(() => {\n        setBootMessage(\"\");\n        typeText(\"Welcome to the Traveller Terminal\", setBootMessage, () => {\n          setBootComplete(true);\n        });\n      }, 500);\n    });\n  }, []);\n  const handleAccessCode = () => {\n    const terminal = terminals[inputCode];\n    if (terminal) {\n      setActiveTerminal(terminal);\n      if (terminal.requiresRoll) {\n        setRollCheck({\n          difficulty: terminal.requiresRoll,\n          success: null\n        });\n      } else {\n        fetchLogs(terminal.logs);\n      }\n    } else {\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\n    }\n    setInputCode(\"\");\n  };\n  const handleRollCheck = passed => {\n    if (passed) {\n      if (activeTerminal) {\n        fetchLogs(activeTerminal.logs);\n      } else {\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\n      }\n    } else {\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n    }\n    setRollCheck(null);\n  };\n  const handleSpecialRollCheck = passed => {\n    if (passed) {\n      if (selectedLogData) {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\n          typeText(selectedLogData.roll_check.on_success, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        } else {\n          typeText(selectedLogData.content, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        }\n      } else {\n        typeText(\"ERROR: Log not found.\", setTerminalData);\n      }\n    } else {\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\n      } else {\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n      }\n      setSelectedLogData(null);\n    }\n    setSpecialRollCheck(null);\n  };\n  const fetchLogs = async logPath => {\n    try {\n      const response = await fetch(logPath);\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setLogData(data);\n      } else {\n        setSelectedLogData(data);\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        typeText(data.content || \"No data available.\", setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    } catch (error) {\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\n    }\n  };\n\n  // Updated: Trigger a special roll check for logs that require it.\n  const handleLogClick = log => {\n    if (log.title === \"Erased Transmission\" || log.title === \"Internal Memo - Urgent Subject Transfer\") {\n      setSelectedLogData(log);\n      // Use the roll_check difficulty defined in the log (10 for the internal memo).\n      setSpecialRollCheck({\n        difficulty: log.roll_check.difficulty\n      });\n    } else {\n      setSelectedLogData(log);\n      setDisplayedText(\"\");\n      setLogTypingComplete(false);\n      typeText(log.content, setDisplayedText, () => {\n        setLogTypingComplete(true);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-black\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-[600px] border-green-400 border-2\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: terminalStyle,\n            className: \"overflow-auto h-[300px] terminal\",\n            children: specialRollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Did you pass the \", specialRollCheck.difficulty, \"+ check for\", \" \", selectedLogData ? selectedLogData.title : \"this file\", \"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: terminalButtonStyle,\n                  onClick: () => handleSpecialRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: terminalButtonStyle,\n                  onClick: () => handleSpecialRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this) : rollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Did you pass the \", rollCheck.difficulty, \"+ Electronics (Computers) check?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: terminalButtonStyle,\n                  onClick: () => handleRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: terminalButtonStyle,\n                  onClick: () => handleRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this) : selectedLogData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\"\n                },\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), selectedLogData.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                style: {\n                  backgroundColor: \"black\",\n                  border: \"1px solid #33ff33\",\n                  borderRadius: \"5px\",\n                  width: \"100%\",\n                  marginTop: \"10px\",\n                  color: \"#33ff33\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: selectedLogData.audio_file,\n                  type: \"audio/mp3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 23\n                }, this), \"Your browser does not support the audio element.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), logTypingComplete && /*#__PURE__*/_jsxDEV(Button, {\n                className: terminalButtonStyle,\n                onClick: () => {\n                  setSelectedLogData(null);\n                  setDisplayedText(\"\");\n                  setLogTypingComplete(false);\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this) : logData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: logData.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => handleLogClick(log),\n                style: {\n                  cursor: \"pointer\",\n                  textDecoration: \"underline\"\n                },\n                children: log.title\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [bootMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: bootMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 35\n              }, this), bootComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  className: terminalInputStyle,\n                  type: \"text\",\n                  placeholder: \"Enter access code\",\n                  value: inputCode,\n                  onChange: e => setInputCode(e.target.value),\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      handleAccessCode();\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: terminalButtonStyle,\n                  onClick: handleAccessCode,\n                  children: \"Access Terminal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), terminalData && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: terminalData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(TravellerTerminal, \"q5iuFecCzXBgQ+9YHitQ31/1/ng=\");\n_c = TravellerTerminal;\nvar _c;\n$RefreshReg$(_c, \"TravellerTerminal\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Input","Button","motion","jsxDEV","_jsxDEV","terminalStyle","fontFamily","color","backgroundColor","padding","minHeight","border","borderRadius","boxShadow","terminalInputStyle","terminalButtonStyle","terminals","requiresRoll","logs","typeText","text","setState","callback","index","length","prev","setTimeout","TravellerTerminal","_s","inputCode","setInputCode","terminalData","setTerminalData","logData","setLogData","rollCheck","setRollCheck","specialRollCheck","setSpecialRollCheck","activeTerminal","setActiveTerminal","selectedLogData","setSelectedLogData","displayedText","setDisplayedText","logTypingComplete","setLogTypingComplete","bootMessage","setBootMessage","bootComplete","setBootComplete","handleAccessCode","terminal","difficulty","success","fetchLogs","handleRollCheck","passed","handleSpecialRollCheck","roll_check","on_success","content","on_failure","logPath","response","fetch","data","json","Array","isArray","error","handleLogClick","log","title","className","children","div","initial","opacity","animate","transition","duration","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","whiteSpace","audio_file","controls","width","marginTop","src","type","map","cursor","textDecoration","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/James/Desktop/traveller-terminal-v5/src/components/TravellerTerminal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardContent } from \"../ui/Card\";\r\nimport { Input } from \"../ui/Input\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst terminalStyle = {\r\n  fontFamily: \"monospace\",\r\n  color: \"#33ff33\",\r\n  backgroundColor: \"black\",\r\n  padding: \"20px\",\r\n  minHeight: \"400px\",\r\n  border: \"2px solid #33ff33\",\r\n  borderRadius: \"5px\",\r\n  boxShadow: \"0 0 10px #33ff33\"\r\n};\r\n\r\nconst terminalInputStyle =\r\n  \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\";\r\nconst terminalButtonStyle =\r\n  \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\";\r\n\r\nconst terminals = {\r\n  \"lysani01\": { requiresRoll: 8, logs: \"/logs/lysani01.json\" },\r\n  \"s.elara01\": { requiresRoll: false, logs: \"/logs/s.elara01.json\" },\r\n  \"slocombe875\": { requiresRoll: 8, logs: \"/logs/slocombe875.json\" },\r\n  \"waferterm01\": { requiresRoll: false, logs: \"/logs/waferterm01.json\" },\r\n  \"labpc81\": { requiresRoll: 6, logs: \"/logs/labpc81.json\" } // New terminal added\r\n};\r\n\r\n// Recursive typing function using setTimeout.\r\nconst typeText = (text, setState, callback = null, index = 0) => {\r\n  if (index < text.length) {\r\n    setState((prev) => prev + text[index]);\r\n    setTimeout(() => typeText(text, setState, callback, index + 1), 30);\r\n  } else {\r\n    if (callback) callback();\r\n  }\r\n};\r\n\r\nexport default function TravellerTerminal() {\r\n  const [inputCode, setInputCode] = useState(\"\");\r\n  const [terminalData, setTerminalData] = useState(\"\");\r\n  const [logData, setLogData] = useState(null);\r\n  const [rollCheck, setRollCheck] = useState(null);\r\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\r\n  const [activeTerminal, setActiveTerminal] = useState(null);\r\n  const [selectedLogData, setSelectedLogData] = useState(null);\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\r\n\r\n  // Boot sequence states\r\n  const [bootMessage, setBootMessage] = useState(\"\");\r\n  const [bootComplete, setBootComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Phase 1: Type \"Booting up...\"\r\n    typeText(\"Booting up...\", setBootMessage, () => {\r\n      // After a brief pause, clear and type the welcome message.\r\n      setTimeout(() => {\r\n        setBootMessage(\"\");\r\n        typeText(\"Welcome to the Traveller Terminal\", setBootMessage, () => {\r\n          setBootComplete(true);\r\n        });\r\n      }, 500);\r\n    });\r\n  }, []);\r\n\r\n  const handleAccessCode = () => {\r\n    const terminal = terminals[inputCode];\r\n    if (terminal) {\r\n      setActiveTerminal(terminal);\r\n      if (terminal.requiresRoll) {\r\n        setRollCheck({ difficulty: terminal.requiresRoll, success: null });\r\n      } else {\r\n        fetchLogs(terminal.logs);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\r\n    }\r\n    setInputCode(\"\");\r\n  };\r\n\r\n  const handleRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (activeTerminal) {\r\n        fetchLogs(activeTerminal.logs);\r\n      } else {\r\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n    }\r\n    setRollCheck(null);\r\n  };\r\n\r\n  const handleSpecialRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (selectedLogData) {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\r\n          typeText(\r\n            selectedLogData.roll_check.on_success,\r\n            setDisplayedText,\r\n            () => {\r\n              setLogTypingComplete(true);\r\n            }\r\n          );\r\n        } else {\r\n          typeText(selectedLogData.content, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      } else {\r\n        typeText(\"ERROR: Log not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      if (\r\n        selectedLogData &&\r\n        selectedLogData.roll_check &&\r\n        selectedLogData.roll_check.on_failure\r\n      ) {\r\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\r\n      } else {\r\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n      }\r\n      setSelectedLogData(null);\r\n    }\r\n    setSpecialRollCheck(null);\r\n  };\r\n\r\n  const fetchLogs = async (logPath) => {\r\n    try {\r\n      const response = await fetch(logPath);\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setLogData(data);\r\n      } else {\r\n        setSelectedLogData(data);\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        typeText(data.content || \"No data available.\", setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\r\n    }\r\n  };\r\n\r\n  // Updated: Trigger a special roll check for logs that require it.\r\n  const handleLogClick = (log) => {\r\n    if (\r\n      log.title === \"Erased Transmission\" ||\r\n      log.title === \"Internal Memo - Urgent Subject Transfer\"\r\n    ) {\r\n      setSelectedLogData(log);\r\n      // Use the roll_check difficulty defined in the log (10 for the internal memo).\r\n      setSpecialRollCheck({ difficulty: log.roll_check.difficulty });\r\n    } else {\r\n      setSelectedLogData(log);\r\n      setDisplayedText(\"\");\r\n      setLogTypingComplete(false);\r\n      typeText(log.content, setDisplayedText, () => {\r\n        setLogTypingComplete(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen bg-black\">\r\n      <Card className=\"w-[600px] border-green-400 border-2\">\r\n        <CardContent>\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ duration: 1 }}\r\n          >\r\n            <div style={terminalStyle} className=\"overflow-auto h-[300px] terminal\">\r\n              {specialRollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {specialRollCheck.difficulty}+ check for{\" \"}\r\n                    {selectedLogData ? selectedLogData.title : \"this file\"}?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className={terminalButtonStyle}\r\n                      onClick={() => handleSpecialRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className={terminalButtonStyle}\r\n                      onClick={() => handleSpecialRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : rollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {rollCheck.difficulty}+ Electronics (Computers)\r\n                    check?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className={terminalButtonStyle}\r\n                      onClick={() => handleRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className={terminalButtonStyle}\r\n                      onClick={() => handleRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData ? (\r\n                <div>\r\n                  <div style={{ whiteSpace: \"pre-wrap\" }}>{displayedText}</div>\r\n                  {selectedLogData.audio_file && (\r\n                    <audio\r\n                      controls\r\n                      style={{\r\n                        backgroundColor: \"black\",\r\n                        border: \"1px solid #33ff33\",\r\n                        borderRadius: \"5px\",\r\n                        width: \"100%\",\r\n                        marginTop: \"10px\",\r\n                        color: \"#33ff33\"\r\n                      }}\r\n                    >\r\n                      <source src={selectedLogData.audio_file} type=\"audio/mp3\" />\r\n                      Your browser does not support the audio element.\r\n                    </audio>\r\n                  )}\r\n                  {logTypingComplete && (\r\n                    <Button\r\n                      className={terminalButtonStyle}\r\n                      onClick={() => {\r\n                        setSelectedLogData(null);\r\n                        setDisplayedText(\"\");\r\n                        setLogTypingComplete(false);\r\n                      }}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              ) : logData ? (\r\n                <div>\r\n                  {logData.map((log, index) => (\r\n                    <p\r\n                      key={index}\r\n                      onClick={() => handleLogClick(log)}\r\n                      style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n                    >\r\n                      {log.title}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {/* Boot sequence messages */}\r\n                  {bootMessage && <p>{bootMessage}</p>}\r\n                  {bootComplete && (\r\n                    <div className=\"mt-4\">\r\n                      <Input\r\n                        className={terminalInputStyle}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter access code\"\r\n                        value={inputCode}\r\n                        onChange={(e) => setInputCode(e.target.value)}\r\n                        onKeyDown={(e) => {\r\n                          if (e.key === \"Enter\") {\r\n                            handleAccessCode();\r\n                          }\r\n                        }}\r\n                      />\r\n                      <Button\r\n                        className={terminalButtonStyle}\r\n                        onClick={handleAccessCode}\r\n                      >\r\n                        Access Terminal\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            {/* Display terminal data messages */}\r\n            {terminalData && <p>{terminalData}</p>}\r\n          </motion.div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}