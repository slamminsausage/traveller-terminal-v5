{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Card,CardContent}from\"../ui/Card\";import{Input}from\"../ui/Input\";import{Button}from\"../ui/Button\";import{motion}from\"framer-motion\";// Terminal definitions including labpc81\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const terminals={\"lysani01\":{requiresRoll:8,logs:\"/logs/lysani01.json\"},\"s.elara01\":{requiresRoll:false,logs:\"/logs/s.elara01.json\"},\"slocombe875\":{requiresRoll:8,logs:\"/logs/slocombe875.json\"},\"waferterm01\":{requiresRoll:false,logs:\"/logs/waferterm01.json\"},\"labpc81\":{requiresRoll:6,logs:\"/logs/labpc81.json\"}};// Generic typing function with adjustable delay\nconst typeText=function(text,setState){let callback=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let index=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let delay=arguments.length>4&&arguments[4]!==undefined?arguments[4]:30;if(index<text.length){setState(prev=>prev+text[index]);setTimeout(()=>typeText(text,setState,callback,index+1,delay),delay);}else{if(callback)callback();}};export default function TravellerTerminal(){// Initialization states\nconst[initText,setInitText]=useState(\"\");const[initComplete,setInitComplete]=useState(false);const hasInitialized=useRef(false);// Terminal and log states\nconst[inputCode,setInputCode]=useState(\"\");const[terminalData,setTerminalData]=useState(\"\");const[logData,setLogData]=useState(null);const[rollCheck,setRollCheck]=useState(null);const[specialRollCheck,setSpecialRollCheck]=useState(null);const[activeTerminal,setActiveTerminal]=useState(null);const[selectedLogData,setSelectedLogData]=useState(null);const[displayedText,setDisplayedText]=useState(\"\");const[logTypingComplete,setLogTypingComplete]=useState(false);// Initialization effect: ensure it runs only once\nuseEffect(()=>{if(hasInitialized.current)return;hasInitialized.current=true;const loadingMessages=[\"Initializing system...\",\"Connecting to network...\",\"Loading secure protocols...\",\"The Traveller Terminal is now online.\"];let i=0;const displayNextMessage=()=>{if(i<loadingMessages.length){typeText(loadingMessages[i]+\"\\n\",setInitText,()=>{// Add an extra newline for readability\nsetInitText(prev=>prev+\"\\n\");i++;displayNextMessage();},0,50);}else{const welcomeMessage=\"\\nWelcome to The Traveller Terminal.\\n\"+\"Type the name of a terminal to access its contents.\\n\\n\";typeText(welcomeMessage,setInitText,()=>{setInitComplete(true);},0,50);}};displayNextMessage();},[]);// Access code handler for selecting a terminal\nconst handleAccessCode=()=>{const terminal=terminals[inputCode];if(terminal){setActiveTerminal(terminal);if(terminal.requiresRoll){setRollCheck({difficulty:terminal.requiresRoll,success:null});}else{fetchLogs(terminal.logs);}}else{typeText(\"ACCESS DENIED. INVALID CODE.\",setTerminalData);}setInputCode(\"\");};// Roll check for the terminal itself\nconst handleRollCheck=passed=>{if(passed){if(activeTerminal){fetchLogs(activeTerminal.logs);}else{typeText(\"ERROR: Terminal not found.\",setTerminalData);}}else{typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\",setTerminalData);}setRollCheck(null);};// Roll check for special logs (like the Internal Memo)\nconst handleSpecialRollCheck=passed=>{if(passed){if(selectedLogData){setDisplayedText(\"\");setLogTypingComplete(false);// For Internal Memo, display the actual content rather than the on_success message.\nif(selectedLogData.title===\"Internal Memo - Urgent Subject Transfer\"){typeText(selectedLogData.content,setDisplayedText,()=>{setLogTypingComplete(true);});}else if(selectedLogData.roll_check&&selectedLogData.roll_check.on_success){typeText(selectedLogData.roll_check.on_success,setDisplayedText,()=>{setLogTypingComplete(true);});}else{typeText(selectedLogData.content,setDisplayedText,()=>{setLogTypingComplete(true);});}}else{typeText(\"ERROR: Log not found.\",setTerminalData);}}else{if(selectedLogData&&selectedLogData.roll_check&&selectedLogData.roll_check.on_failure){typeText(selectedLogData.roll_check.on_failure,setTerminalData);}else{typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\",setTerminalData);}setSelectedLogData(null);}setSpecialRollCheck(null);};// Fetch logs from the provided path\nconst fetchLogs=async logPath=>{try{const response=await fetch(logPath);const data=await response.json();if(Array.isArray(data)){setLogData(data);}else{setSelectedLogData(data);setDisplayedText(\"\");setLogTypingComplete(false);typeText(data.content||\"No data available.\",setDisplayedText,()=>{setLogTypingComplete(true);});}}catch(error){typeText(\"ERROR LOADING LOGS.\",setTerminalData);}};// Handler for when a log is clicked\nconst handleLogClick=log=>{setSelectedLogData(log);if(log.requires_roll){var _log$roll_check;setSpecialRollCheck({difficulty:(_log$roll_check=log.roll_check)===null||_log$roll_check===void 0?void 0:_log$roll_check.difficulty});}else{setDisplayedText(\"\");setLogTypingComplete(false);typeText(log.content,setDisplayedText,()=>{setLogTypingComplete(true);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center h-screen bg-black\",children:[/*#__PURE__*/_jsx(\"div\",{style:{fontFamily:\"monospace\",color:\"#33ff33\",whiteSpace:\"pre-wrap\",marginBottom:\"10px\",textAlign:\"center\"},children:initText}),/*#__PURE__*/_jsx(Card,{className:\"w-[600px] border-green-400 border-2\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:1},children:/*#__PURE__*/_jsx(\"div\",{className:\"terminal overflow-auto h-[300px]\",children:specialRollCheck?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Did you pass the \",specialRollCheck.difficulty,\"+ check for\",\" \",selectedLogData?selectedLogData.title:\"this file\",\"?\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{className:\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",onClick:()=>handleSpecialRollCheck(true),children:\"Yes\"}),/*#__PURE__*/_jsx(Button,{className:\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",onClick:()=>handleSpecialRollCheck(false),children:\"No\"})]})]}):rollCheck?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Did you pass the \",rollCheck.difficulty,\"+ Electronics (Computers) check?\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(Button,{className:\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",onClick:()=>handleRollCheck(true),children:\"Yes\"}),/*#__PURE__*/_jsx(Button,{className:\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",onClick:()=>handleRollCheck(false),children:\"No\"})]})]}):selectedLogData?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:\"pre-wrap\"},children:displayedText}),selectedLogData.audio_file&&/*#__PURE__*/_jsxs(\"audio\",{controls:true,style:{backgroundColor:\"black\",border:\"1px solid #33ff33\",borderRadius:\"5px\",width:\"100%\",marginTop:\"10px\",color:\"#33ff33\"},children:[/*#__PURE__*/_jsx(\"source\",{src:selectedLogData.audio_file,type:\"audio/mp3\"}),\"Your browser does not support the audio element.\"]}),logTypingComplete&&/*#__PURE__*/_jsx(Button,{className:\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",onClick:()=>{setSelectedLogData(null);setDisplayedText(\"\");setLogTypingComplete(false);},children:\"Back\"})]}):logData?/*#__PURE__*/_jsx(\"div\",{children:logData.map((log,index)=>/*#__PURE__*/_jsx(\"p\",{onClick:()=>handleLogClick(log),style:{cursor:\"pointer\",textDecoration:\"underline\"},children:log.title},index))}):/*#__PURE__*/_jsx(\"p\",{className:\"glitch-text\",children:terminalData||\"ENTER ACCESS CODE TO PROCEED\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex gap-2\",children:[/*#__PURE__*/_jsx(Input,{className:\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",placeholder:\"Enter Access Code...\",value:inputCode,onChange:e=>setInputCode(e.target.value)}),/*#__PURE__*/_jsx(Button,{className:\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",onClick:handleAccessCode,children:\"Enter\"})]})]})})]});}","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","Input","Button","motion","jsx","_jsx","jsxs","_jsxs","terminals","requiresRoll","logs","typeText","text","setState","callback","arguments","length","undefined","index","delay","prev","setTimeout","TravellerTerminal","initText","setInitText","initComplete","setInitComplete","hasInitialized","inputCode","setInputCode","terminalData","setTerminalData","logData","setLogData","rollCheck","setRollCheck","specialRollCheck","setSpecialRollCheck","activeTerminal","setActiveTerminal","selectedLogData","setSelectedLogData","displayedText","setDisplayedText","logTypingComplete","setLogTypingComplete","current","loadingMessages","i","displayNextMessage","welcomeMessage","handleAccessCode","terminal","difficulty","success","fetchLogs","handleRollCheck","passed","handleSpecialRollCheck","title","content","roll_check","on_success","on_failure","logPath","response","fetch","data","json","Array","isArray","error","handleLogClick","log","requires_roll","_log$roll_check","className","children","style","fontFamily","color","whiteSpace","marginBottom","textAlign","div","initial","opacity","animate","transition","duration","onClick","audio_file","controls","backgroundColor","border","borderRadius","width","marginTop","src","type","map","cursor","textDecoration","placeholder","value","onChange","e","target"],"sources":["C:/Users/James/Desktop/traveller-terminal-v5/src/components/TravellerTerminal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, CardContent } from \"../ui/Card\";\r\nimport { Input } from \"../ui/Input\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n// Terminal definitions including labpc81\r\nconst terminals = {\r\n  \"lysani01\": { requiresRoll: 8, logs: \"/logs/lysani01.json\" },\r\n  \"s.elara01\": { requiresRoll: false, logs: \"/logs/s.elara01.json\" },\r\n  \"slocombe875\": { requiresRoll: 8, logs: \"/logs/slocombe875.json\" },\r\n  \"waferterm01\": { requiresRoll: false, logs: \"/logs/waferterm01.json\" },\r\n  \"labpc81\": { requiresRoll: 6, logs: \"/logs/labpc81.json\" }\r\n};\r\n\r\n// Generic typing function with adjustable delay\r\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\r\n  if (index < text.length) {\r\n    setState((prev) => prev + text[index]);\r\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\r\n  } else {\r\n    if (callback) callback();\r\n  }\r\n};\r\n\r\nexport default function TravellerTerminal() {\r\n  // Initialization states\r\n  const [initText, setInitText] = useState(\"\");\r\n  const [initComplete, setInitComplete] = useState(false);\r\n  const hasInitialized = useRef(false);\r\n\r\n  // Terminal and log states\r\n  const [inputCode, setInputCode] = useState(\"\");\r\n  const [terminalData, setTerminalData] = useState(\"\");\r\n  const [logData, setLogData] = useState(null);\r\n  const [rollCheck, setRollCheck] = useState(null);\r\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\r\n  const [activeTerminal, setActiveTerminal] = useState(null);\r\n  const [selectedLogData, setSelectedLogData] = useState(null);\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\r\n\r\n  // Initialization effect: ensure it runs only once\r\n  useEffect(() => {\r\n    if (hasInitialized.current) return;\r\n    hasInitialized.current = true;\r\n\r\n    const loadingMessages = [\r\n      \"Initializing system...\",\r\n      \"Connecting to network...\",\r\n      \"Loading secure protocols...\",\r\n      \"The Traveller Terminal is now online.\"\r\n    ];\r\n    let i = 0;\r\n    const displayNextMessage = () => {\r\n      if (i < loadingMessages.length) {\r\n        typeText(loadingMessages[i] + \"\\n\", setInitText, () => {\r\n          // Add an extra newline for readability\r\n          setInitText((prev) => prev + \"\\n\");\r\n          i++;\r\n          displayNextMessage();\r\n        }, 0, 50);\r\n      } else {\r\n        const welcomeMessage =\r\n          \"\\nWelcome to The Traveller Terminal.\\n\" +\r\n          \"Type the name of a terminal to access its contents.\\n\\n\";\r\n        typeText(welcomeMessage, setInitText, () => {\r\n          setInitComplete(true);\r\n        }, 0, 50);\r\n      }\r\n    };\r\n    displayNextMessage();\r\n  }, []);\r\n\r\n  // Access code handler for selecting a terminal\r\n  const handleAccessCode = () => {\r\n    const terminal = terminals[inputCode];\r\n    if (terminal) {\r\n      setActiveTerminal(terminal);\r\n      if (terminal.requiresRoll) {\r\n        setRollCheck({ difficulty: terminal.requiresRoll, success: null });\r\n      } else {\r\n        fetchLogs(terminal.logs);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\r\n    }\r\n    setInputCode(\"\");\r\n  };\r\n\r\n  // Roll check for the terminal itself\r\n  const handleRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (activeTerminal) {\r\n        fetchLogs(activeTerminal.logs);\r\n      } else {\r\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n    }\r\n    setRollCheck(null);\r\n  };\r\n\r\n  // Roll check for special logs (like the Internal Memo)\r\n  const handleSpecialRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (selectedLogData) {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        // For Internal Memo, display the actual content rather than the on_success message.\r\n        if (selectedLogData.title === \"Internal Memo - Urgent Subject Transfer\") {\r\n          typeText(selectedLogData.content, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        } else if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\r\n          typeText(selectedLogData.roll_check.on_success, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        } else {\r\n          typeText(selectedLogData.content, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      } else {\r\n        typeText(\"ERROR: Log not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\r\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\r\n      } else {\r\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n      }\r\n      setSelectedLogData(null);\r\n    }\r\n    setSpecialRollCheck(null);\r\n  };\r\n\r\n  // Fetch logs from the provided path\r\n  const fetchLogs = async (logPath) => {\r\n    try {\r\n      const response = await fetch(logPath);\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setLogData(data);\r\n      } else {\r\n        setSelectedLogData(data);\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        typeText(data.content || \"No data available.\", setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\r\n    }\r\n  };\r\n\r\n  // Handler for when a log is clicked\r\n  const handleLogClick = (log) => {\r\n    setSelectedLogData(log);\r\n    if (log.requires_roll) {\r\n      setSpecialRollCheck({ difficulty: log.roll_check?.difficulty });\r\n    } else {\r\n      setDisplayedText(\"\");\r\n      setLogTypingComplete(false);\r\n      typeText(log.content, setDisplayedText, () => {\r\n        setLogTypingComplete(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-screen bg-black\">\r\n      {/* Initialization message area above the terminal */}\r\n      <div\r\n        style={{\r\n          fontFamily: \"monospace\",\r\n          color: \"#33ff33\",\r\n          whiteSpace: \"pre-wrap\",\r\n          marginBottom: \"10px\",\r\n          textAlign: \"center\"\r\n        }}\r\n      >\r\n        {initText}\r\n      </div>\r\n\r\n      <Card className=\"w-[600px] border-green-400 border-2\">\r\n        <CardContent>\r\n          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\r\n            <div className=\"terminal overflow-auto h-[300px]\">\r\n              {specialRollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {specialRollCheck.difficulty}+ check for{\" \"}\r\n                    {selectedLogData ? selectedLogData.title : \"this file\"}?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleSpecialRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleSpecialRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : rollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {rollCheck.difficulty}+ Electronics (Computers) check?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData ? (\r\n                <div>\r\n                  <div style={{ whiteSpace: \"pre-wrap\" }}>{displayedText}</div>\r\n                  {selectedLogData.audio_file && (\r\n                    <audio\r\n                      controls\r\n                      style={{\r\n                        backgroundColor: \"black\",\r\n                        border: \"1px solid #33ff33\",\r\n                        borderRadius: \"5px\",\r\n                        width: \"100%\",\r\n                        marginTop: \"10px\",\r\n                        color: \"#33ff33\"\r\n                      }}\r\n                    >\r\n                      <source src={selectedLogData.audio_file} type=\"audio/mp3\" />\r\n                      Your browser does not support the audio element.\r\n                    </audio>\r\n                  )}\r\n                  {logTypingComplete && (\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                      onClick={() => {\r\n                        setSelectedLogData(null);\r\n                        setDisplayedText(\"\");\r\n                        setLogTypingComplete(false);\r\n                      }}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              ) : logData ? (\r\n                <div>\r\n                  {logData.map((log, index) => (\r\n                    <p\r\n                      key={index}\r\n                      onClick={() => handleLogClick(log)}\r\n                      style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n                    >\r\n                      {log.title}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"glitch-text\">\r\n                  {terminalData || \"ENTER ACCESS CODE TO PROCEED\"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n          <div className=\"mt-4 flex gap-2\">\r\n            <Input\r\n              className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n              placeholder=\"Enter Access Code...\"\r\n              value={inputCode}\r\n              onChange={(e) => setInputCode(e.target.value)}\r\n            />\r\n            <Button\r\n              className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n              onClick={handleAccessCode}\r\n            >\r\n              Enter\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}