{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\Desktop\\\\traveller-terminal-v5\\\\src\\\\components\\\\TravellerTerminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Card, CardContent } from \"../ui/Card\";\nimport { Input } from \"../ui/Input\";\nimport { Button } from \"../ui/Button\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Terminal definitions including labpc81 and vanagandr001\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst terminals = {\n  \"lysani01\": {\n    requiresRoll: 8,\n    logs: \"/logs/lysani01.json\"\n  },\n  \"s.elara01\": {\n    requiresRoll: false,\n    logs: \"/logs/s.elara01.json\"\n  },\n  \"slocombe875\": {\n    requiresRoll: 8,\n    logs: \"/logs/slocombe875.json\"\n  },\n  \"waferterm01\": {\n    requiresRoll: false,\n    logs: \"/logs/waferterm01.json\"\n  },\n  \"labpc81\": {\n    requiresRoll: 6,\n    logs: \"/logs/labpc81.json\"\n  },\n  \"vanagandr001\": {\n    requiresRoll: 7,\n    logs: \"/logs/vanagandr001.json\"\n  }\n};\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\n  if (index < text.length) {\n    setState(prev => prev + text[index]);\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\n  } else {\n    if (callback) callback();\n  }\n};\nexport default function TravellerTerminal() {\n  _s();\n  const navigate = useNavigate();\n  const [initText, setInitText] = useState(\"\");\n  const [initComplete, setInitComplete] = useState(false);\n  const hasInitialized = useRef(false);\n  const [inputCode, setInputCode] = useState(\"\");\n  const [terminalData, setTerminalData] = useState(\"\");\n  const [logData, setLogData] = useState(null);\n  const [rollCheck, setRollCheck] = useState(null);\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\n  const [activeTerminal, setActiveTerminal] = useState(null);\n  const [selectedLogData, setSelectedLogData] = useState(null);\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\n\n  // Password-related states\n  const [requiresPassword, setRequiresPassword] = useState(false);\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [passwordAttempts, setPasswordAttempts] = useState(0);\n  const [isPasswordUnlocked, setIsPasswordUnlocked] = useState(false);\n\n  // Grouping state for grouped logs\n  const [expandedGroup, setExpandedGroup] = useState(null);\n  // State for displaying a separate page for grouped audio logs\n  const [showAudioLogsPage, setShowAudioLogsPage] = useState(false);\n  const [audioLogsData, setAudioLogsData] = useState([]);\n  useEffect(() => {\n    if (hasInitialized.current) return;\n    hasInitialized.current = true;\n    const loadingMessages = [\"Initializing system...\", \"Connecting to network...\", \"Loading secure protocols...\", \"The Traveller Terminal is now online.\"];\n    let i = 0;\n    const displayNextMessage = () => {\n      if (i < loadingMessages.length) {\n        typeText(loadingMessages[i] + \"\\n\", setInitText, () => {\n          setInitText(prev => prev + \"\\n\");\n          i++;\n          displayNextMessage();\n        }, 0, 50);\n      } else {\n        const welcomeMessage = \"\\nWelcome to The Traveller Terminal.\\n\" + \"Type the name of a terminal to access its contents.\\n\\n\";\n        typeText(welcomeMessage, setInitText, () => {\n          setInitComplete(true);\n        }, 0, 50);\n      }\n    };\n    displayNextMessage();\n  }, []);\n  const handleAccessCode = () => {\n    // Check for our silly terminal first:\n    if (inputCode.trim().toLowerCase() === \"poop\") {\n      navigate(\"/poop\");\n      return;\n    }\n    const terminal = terminals[inputCode];\n    if (terminal) {\n      setActiveTerminal(terminal);\n      if (terminal.requiresRoll) {\n        setRollCheck({\n          difficulty: terminal.requiresRoll,\n          success: null\n        });\n      } else {\n        fetchLogs(terminal.logs);\n      }\n    } else {\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\n    }\n    setInputCode(\"\");\n  };\n  const handleRollCheck = passed => {\n    if (passed) {\n      if (activeTerminal) {\n        fetchLogs(activeTerminal.logs);\n      } else {\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\n      }\n    } else {\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n    }\n    setRollCheck(null);\n  };\n  const handleSpecialRollCheck = passed => {\n    if (passed) {\n      if (selectedLogData) {\n        if (selectedLogData.logs) {\n          setAudioLogsData(selectedLogData.logs);\n          setShowAudioLogsPage(true);\n        } else {\n          setDisplayedText(\"\");\n          setLogTypingComplete(false);\n          let message = \"\";\n          if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\n            message = selectedLogData.content + \"\\n\\n\" + selectedLogData.roll_check.on_success;\n          } else {\n            message = selectedLogData.content;\n          }\n          typeText(message, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        }\n      } else {\n        typeText(\"ERROR: Log not found.\", setTerminalData);\n      }\n    } else {\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\n      } else {\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n      }\n      setSelectedLogData(null);\n    }\n    setSpecialRollCheck(null);\n    setPasswordAttempts(0);\n    setIsPasswordUnlocked(false);\n    setPasswordInput(\"\");\n  };\n  const fetchLogs = async logPath => {\n    try {\n      const response = await fetch(logPath);\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setLogData(data);\n      } else {\n        setSelectedLogData(data);\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        typeText(data.content || \"No data available.\", setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    } catch (error) {\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\n    }\n  };\n  const handleLogClick = log => {\n    setSelectedLogData(log);\n    setExpandedGroup(null);\n    setPasswordAttempts(0);\n    setPasswordInput(\"\");\n    setIsPasswordUnlocked(false);\n    if (log.logs) {\n      if (log.requires_password) {\n        setRequiresPassword(true);\n      } else {\n        setAudioLogsData(log.logs);\n        setShowAudioLogsPage(true);\n      }\n    } else if (log.requires_password) {\n      setRequiresPassword(true);\n    } else {\n      if (log.requires_roll && log.roll_check && log.roll_check.difficulty === 10) {\n        setSpecialRollCheck({\n          difficulty: log.roll_check.difficulty\n        });\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        typeText(log.content, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    }\n  };\n  const handlePasswordSubmit = () => {\n    if (passwordInput === selectedLogData.password) {\n      setIsPasswordUnlocked(true);\n      setRequiresPassword(false);\n      if (selectedLogData.logs) {\n        setAudioLogsData(selectedLogData.logs);\n        setShowAudioLogsPage(true);\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        typeText(selectedLogData.content, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    } else {\n      const attempts = passwordAttempts + 1;\n      setPasswordAttempts(attempts);\n      if (attempts >= (selectedLogData.attemptsAllowed || 3)) {\n        setRequiresPassword(false);\n        setSpecialRollCheck({\n          difficulty: selectedLogData.roll_check.difficulty\n        });\n      } else {\n        typeText(\"Incorrect password. Please try again.\", setTerminalData);\n      }\n    }\n  };\n  if (showAudioLogsPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center h-screen bg-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-green-400 font-mono text-xl my-4\",\n        children: \"Encrypted Audio Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md border-green-400 border-2 p-4 overflow-auto\",\n        children: [audioLogsData.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-green-400 font-mono\",\n            children: log.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-mono\",\n            style: {\n              whiteSpace: \"pre-wrap\"\n            },\n            children: log.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), log.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            style: {\n              backgroundColor: \"black\",\n              border: \"1px solid #33ff33\",\n              borderRadius: \"5px\",\n              width: \"100%\",\n              marginTop: \"10px\",\n              color: \"#33ff33\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: log.audio_file,\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), \"Your browser does not support the audio element.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-4\",\n          onClick: () => {\n            setShowAudioLogsPage(false);\n            setAudioLogsData([]);\n            setSelectedLogData(null);\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center h-screen bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"monospace\",\n        color: \"#33ff33\",\n        whiteSpace: \"pre-wrap\",\n        marginBottom: \"10px\",\n        textAlign: \"center\"\n      },\n      children: initText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-md border-green-400 border-2\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"terminal overflow-auto h-[300px]\",\n            children: specialRollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Did you pass the \", specialRollCheck.difficulty, \"+ check for\", \" \", selectedLogData ? selectedLogData.title : \"this file\", \"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleSpecialRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleSpecialRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this) : rollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Did you pass the \", rollCheck.difficulty, \"+ Electronics (Computers) check?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this) : selectedLogData && requiresPassword && !isPasswordUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Password required for \", selectedLogData.title, \". Attempts remaining:\", \" \", (selectedLogData.attemptsAllowed || 3) - passwordAttempts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",\n                placeholder: \"Enter Password\",\n                value: passwordInput,\n                onChange: e => setPasswordInput(e.target.value),\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",\n                onClick: handlePasswordSubmit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this) : selectedLogData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\"\n                },\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), selectedLogData.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                style: {\n                  backgroundColor: \"black\",\n                  border: \"1px solid #33ff33\",\n                  borderRadius: \"5px\",\n                  width: \"100%\",\n                  marginTop: \"10px\",\n                  color: \"#33ff33\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: selectedLogData.audio_file,\n                  type: \"audio/mp3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this), \"Your browser does not support the audio element.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this), logTypingComplete && /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",\n                onClick: () => {\n                  setSelectedLogData(null);\n                  setDisplayedText(\"\");\n                  setLogTypingComplete(false);\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this) : logData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: logData.map((log, index) => {\n                if (log.logs) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      onClick: () => handleLogClick(log),\n                      style: {\n                        cursor: \"pointer\",\n                        textDecoration: \"underline\"\n                      },\n                      children: log.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    onClick: () => handleLogClick(log),\n                    style: {\n                      cursor: \"pointer\",\n                      textDecoration: \"underline\"\n                    },\n                    children: log.title\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"glitch-text\",\n              children: terminalData || \"ENTER ACCESS CODE TO PROCEED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            className: \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",\n            placeholder: \"Enter Access Code...\",\n            value: inputCode,\n            onChange: e => setInputCode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n            onClick: handleAccessCode,\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s(TravellerTerminal, \"sKFgXqYTFtgjgathaMvQhQc3dlc=\", false, function () {\n  return [useNavigate];\n});\n_c = TravellerTerminal;\nvar _c;\n$RefreshReg$(_c, \"TravellerTerminal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","Input","Button","motion","useNavigate","jsxDEV","_jsxDEV","terminals","requiresRoll","logs","typeText","text","setState","callback","index","delay","length","prev","setTimeout","TravellerTerminal","_s","navigate","initText","setInitText","initComplete","setInitComplete","hasInitialized","inputCode","setInputCode","terminalData","setTerminalData","logData","setLogData","rollCheck","setRollCheck","specialRollCheck","setSpecialRollCheck","activeTerminal","setActiveTerminal","selectedLogData","setSelectedLogData","displayedText","setDisplayedText","logTypingComplete","setLogTypingComplete","requiresPassword","setRequiresPassword","passwordInput","setPasswordInput","passwordAttempts","setPasswordAttempts","isPasswordUnlocked","setIsPasswordUnlocked","expandedGroup","setExpandedGroup","showAudioLogsPage","setShowAudioLogsPage","audioLogsData","setAudioLogsData","current","loadingMessages","i","displayNextMessage","welcomeMessage","handleAccessCode","trim","toLowerCase","terminal","difficulty","success","fetchLogs","handleRollCheck","passed","handleSpecialRollCheck","message","roll_check","on_success","content","on_failure","logPath","response","fetch","data","json","Array","isArray","error","handleLogClick","log","requires_password","requires_roll","handlePasswordSubmit","password","attempts","attemptsAllowed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","marginBottom","title","whiteSpace","audio_file","controls","backgroundColor","border","borderRadius","width","marginTop","color","src","type","onClick","fontFamily","textAlign","div","initial","opacity","animate","transition","duration","placeholder","value","onChange","e","target","cursor","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/James/Desktop/traveller-terminal-v5/src/components/TravellerTerminal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, CardContent } from \"../ui/Card\";\r\nimport { Input } from \"../ui/Input\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Terminal definitions including labpc81 and vanagandr001\r\nconst terminals = {\r\n  \"lysani01\": { requiresRoll: 8, logs: \"/logs/lysani01.json\" },\r\n  \"s.elara01\": { requiresRoll: false, logs: \"/logs/s.elara01.json\" },\r\n  \"slocombe875\": { requiresRoll: 8, logs: \"/logs/slocombe875.json\" },\r\n  \"waferterm01\": { requiresRoll: false, logs: \"/logs/waferterm01.json\" },\r\n  \"labpc81\": { requiresRoll: 6, logs: \"/logs/labpc81.json\" },\r\n  \"vanagandr001\": { requiresRoll: 7, logs: \"/logs/vanagandr001.json\" }\r\n};\r\n\r\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\r\n  if (index < text.length) {\r\n    setState(prev => prev + text[index]);\r\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\r\n  } else {\r\n    if (callback) callback();\r\n  }\r\n};\r\n\r\nexport default function TravellerTerminal() {\r\n  const navigate = useNavigate();\r\n  const [initText, setInitText] = useState(\"\");\r\n  const [initComplete, setInitComplete] = useState(false);\r\n  const hasInitialized = useRef(false);\r\n\r\n  const [inputCode, setInputCode] = useState(\"\");\r\n  const [terminalData, setTerminalData] = useState(\"\");\r\n  const [logData, setLogData] = useState(null);\r\n  const [rollCheck, setRollCheck] = useState(null);\r\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\r\n  const [activeTerminal, setActiveTerminal] = useState(null);\r\n  const [selectedLogData, setSelectedLogData] = useState(null);\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\r\n\r\n  // Password-related states\r\n  const [requiresPassword, setRequiresPassword] = useState(false);\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const [passwordAttempts, setPasswordAttempts] = useState(0);\r\n  const [isPasswordUnlocked, setIsPasswordUnlocked] = useState(false);\r\n\r\n  // Grouping state for grouped logs\r\n  const [expandedGroup, setExpandedGroup] = useState(null);\r\n  // State for displaying a separate page for grouped audio logs\r\n  const [showAudioLogsPage, setShowAudioLogsPage] = useState(false);\r\n  const [audioLogsData, setAudioLogsData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (hasInitialized.current) return;\r\n    hasInitialized.current = true;\r\n    const loadingMessages = [\r\n      \"Initializing system...\",\r\n      \"Connecting to network...\",\r\n      \"Loading secure protocols...\",\r\n      \"The Traveller Terminal is now online.\"\r\n    ];\r\n    let i = 0;\r\n    const displayNextMessage = () => {\r\n      if (i < loadingMessages.length) {\r\n        typeText(loadingMessages[i] + \"\\n\", setInitText, () => {\r\n          setInitText(prev => prev + \"\\n\");\r\n          i++;\r\n          displayNextMessage();\r\n        }, 0, 50);\r\n      } else {\r\n        const welcomeMessage =\r\n          \"\\nWelcome to The Traveller Terminal.\\n\" +\r\n          \"Type the name of a terminal to access its contents.\\n\\n\";\r\n        typeText(welcomeMessage, setInitText, () => {\r\n          setInitComplete(true);\r\n        }, 0, 50);\r\n      }\r\n    };\r\n    displayNextMessage();\r\n  }, []);\r\n\r\n  const handleAccessCode = () => {\r\n    // Check for our silly terminal first:\r\n    if (inputCode.trim().toLowerCase() === \"poop\") {\r\n      navigate(\"/poop\");\r\n      return;\r\n    }\r\n    const terminal = terminals[inputCode];\r\n    if (terminal) {\r\n      setActiveTerminal(terminal);\r\n      if (terminal.requiresRoll) {\r\n        setRollCheck({ difficulty: terminal.requiresRoll, success: null });\r\n      } else {\r\n        fetchLogs(terminal.logs);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\r\n    }\r\n    setInputCode(\"\");\r\n  };\r\n\r\n  const handleRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (activeTerminal) {\r\n        fetchLogs(activeTerminal.logs);\r\n      } else {\r\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n    }\r\n    setRollCheck(null);\r\n  };\r\n\r\n  const handleSpecialRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (selectedLogData) {\r\n        if (selectedLogData.logs) {\r\n          setAudioLogsData(selectedLogData.logs);\r\n          setShowAudioLogsPage(true);\r\n        } else {\r\n          setDisplayedText(\"\");\r\n          setLogTypingComplete(false);\r\n          let message = \"\";\r\n          if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\r\n            message = selectedLogData.content + \"\\n\\n\" + selectedLogData.roll_check.on_success;\r\n          } else {\r\n            message = selectedLogData.content;\r\n          }\r\n          typeText(message, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      } else {\r\n        typeText(\"ERROR: Log not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\r\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\r\n      } else {\r\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n      }\r\n      setSelectedLogData(null);\r\n    }\r\n    setSpecialRollCheck(null);\r\n    setPasswordAttempts(0);\r\n    setIsPasswordUnlocked(false);\r\n    setPasswordInput(\"\");\r\n  };\r\n\r\n  const fetchLogs = async (logPath) => {\r\n    try {\r\n      const response = await fetch(logPath);\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setLogData(data);\r\n      } else {\r\n        setSelectedLogData(data);\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        typeText(data.content || \"No data available.\", setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\r\n    }\r\n  };\r\n\r\n  const handleLogClick = (log) => {\r\n    setSelectedLogData(log);\r\n    setExpandedGroup(null);\r\n    setPasswordAttempts(0);\r\n    setPasswordInput(\"\");\r\n    setIsPasswordUnlocked(false);\r\n    if (log.logs) {\r\n      if (log.requires_password) {\r\n        setRequiresPassword(true);\r\n      } else {\r\n        setAudioLogsData(log.logs);\r\n        setShowAudioLogsPage(true);\r\n      }\r\n    } else if (log.requires_password) {\r\n      setRequiresPassword(true);\r\n    } else {\r\n      if (log.requires_roll && log.roll_check && log.roll_check.difficulty === 10) {\r\n        setSpecialRollCheck({ difficulty: log.roll_check.difficulty });\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        typeText(log.content, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = () => {\r\n    if (passwordInput === selectedLogData.password) {\r\n      setIsPasswordUnlocked(true);\r\n      setRequiresPassword(false);\r\n      if (selectedLogData.logs) {\r\n        setAudioLogsData(selectedLogData.logs);\r\n        setShowAudioLogsPage(true);\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        typeText(selectedLogData.content, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    } else {\r\n      const attempts = passwordAttempts + 1;\r\n      setPasswordAttempts(attempts);\r\n      if (attempts >= (selectedLogData.attemptsAllowed || 3)) {\r\n        setRequiresPassword(false);\r\n        setSpecialRollCheck({ difficulty: selectedLogData.roll_check.difficulty });\r\n      } else {\r\n        typeText(\"Incorrect password. Please try again.\", setTerminalData);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (showAudioLogsPage) {\r\n    return (\r\n      <div className=\"flex flex-col items-center h-screen bg-black\">\r\n        <h1 className=\"text-green-400 font-mono text-xl my-4\">Encrypted Audio Logs</h1>\r\n        <div className=\"w-full max-w-md border-green-400 border-2 p-4 overflow-auto\">\r\n          {audioLogsData.map((log, index) => (\r\n            <div key={index} style={{ marginBottom: \"20px\" }}>\r\n              <h2 className=\"text-green-400 font-mono\">{log.title}</h2>\r\n              <p className=\"text-green-400 font-mono\" style={{ whiteSpace: \"pre-wrap\" }}>{log.content}</p>\r\n              {log.audio_file && (\r\n                <audio\r\n                  controls\r\n                  style={{\r\n                    backgroundColor: \"black\",\r\n                    border: \"1px solid #33ff33\",\r\n                    borderRadius: \"5px\",\r\n                    width: \"100%\",\r\n                    marginTop: \"10px\",\r\n                    color: \"#33ff33\"\r\n                  }}\r\n                >\r\n                  <source src={log.audio_file} type=\"audio/mp3\" />\r\n                  Your browser does not support the audio element.\r\n                </audio>\r\n              )}\r\n            </div>\r\n          ))}\r\n          <Button\r\n            className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-4\"\r\n            onClick={() => {\r\n              setShowAudioLogsPage(false);\r\n              setAudioLogsData([]);\r\n              setSelectedLogData(null);\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-screen bg-black\">\r\n      <div\r\n        style={{\r\n          fontFamily: \"monospace\",\r\n          color: \"#33ff33\",\r\n          whiteSpace: \"pre-wrap\",\r\n          marginBottom: \"10px\",\r\n          textAlign: \"center\"\r\n        }}\r\n      >\r\n        {initText}\r\n      </div>\r\n      <Card className=\"w-full max-w-md border-green-400 border-2\">\r\n        <CardContent>\r\n          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\r\n            <div className=\"terminal overflow-auto h-[300px]\">\r\n              {specialRollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {specialRollCheck.difficulty}+ check for{\" \"}\r\n                    {selectedLogData ? selectedLogData.title : \"this file\"}?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleSpecialRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleSpecialRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : rollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {rollCheck.difficulty}+ Electronics (Computers) check?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData && requiresPassword && !isPasswordUnlocked ? (\r\n                <div>\r\n                  <p>\r\n                    Password required for {selectedLogData.title}. Attempts remaining:{\" \"}\r\n                    {(selectedLogData.attemptsAllowed || 3) - passwordAttempts}\r\n                  </p>\r\n                  <Input\r\n                    className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n                    placeholder=\"Enter Password\"\r\n                    value={passwordInput}\r\n                    onChange={(e) => setPasswordInput(e.target.value)}\r\n                    type=\"password\"\r\n                  />\r\n                  <Button\r\n                    className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                    onClick={handlePasswordSubmit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              ) : selectedLogData ? (\r\n                <div>\r\n                  <div style={{ whiteSpace: \"pre-wrap\" }}>{displayedText}</div>\r\n                  {selectedLogData.audio_file && (\r\n                    <audio\r\n                      controls\r\n                      style={{\r\n                        backgroundColor: \"black\",\r\n                        border: \"1px solid #33ff33\",\r\n                        borderRadius: \"5px\",\r\n                        width: \"100%\",\r\n                        marginTop: \"10px\",\r\n                        color: \"#33ff33\"\r\n                      }}\r\n                    >\r\n                      <source src={selectedLogData.audio_file} type=\"audio/mp3\" />\r\n                      Your browser does not support the audio element.\r\n                    </audio>\r\n                  )}\r\n                  {logTypingComplete && (\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                      onClick={() => {\r\n                        setSelectedLogData(null);\r\n                        setDisplayedText(\"\");\r\n                        setLogTypingComplete(false);\r\n                      }}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              ) : logData ? (\r\n                <div>\r\n                  {logData.map((log, index) => {\r\n                    if (log.logs) {\r\n                      return (\r\n                        <div key={index}>\r\n                          <p\r\n                            onClick={() => handleLogClick(log)}\r\n                            style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n                          >\r\n                            {log.title}\r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <p\r\n                          key={index}\r\n                          onClick={() => handleLogClick(log)}\r\n                          style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n                        >\r\n                          {log.title}\r\n                        </p>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                <p className=\"glitch-text\">\r\n                  {terminalData || \"ENTER ACCESS CODE TO PROCEED\"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n          <div className=\"mt-4 flex gap-2\">\r\n            <Input\r\n              className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n              placeholder=\"Enter Access Code...\"\r\n              value={inputCode}\r\n              onChange={(e) => setInputCode(e.target.value)}\r\n            />\r\n            <Button\r\n              className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n              onClick={handleAccessCode}\r\n            >\r\n              Enter\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}