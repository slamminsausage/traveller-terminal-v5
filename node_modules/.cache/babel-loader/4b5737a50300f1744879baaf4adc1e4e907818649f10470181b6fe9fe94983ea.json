{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\Desktop\\\\traveller-terminal-v5\\\\src\\\\components\\\\TravellerTerminal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Card, CardContent } from \"../ui/Card\";\nimport { Input } from \"../ui/Input\";\nimport { Button } from \"../ui/Button\";\nimport { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport RiftjawTerminal from \"./RiftjawTerminal\";\n\n// Character set for corruption effects\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst corruptionCharacters = \"!@#$%^&*()_+-=[]{}|;:,./<>?`~¡™£¢∞§¶•ªº–≠\";\n\n/**\r\n * Corrupts a portion of the text for an immersive glitched terminal effect\r\n */\nconst applyTextCorruption = (text, corruptionLevel = 0.02, isEclipseShard = false) => {\n  if (!text) return \"\";\n  const lines = text.split('\\n');\n  const corruptedLines = lines.map(line => {\n    if (line.trim() === '') return line;\n    let corruptedLine = '';\n    for (let i = 0; i < line.length; i++) {\n      if (isEclipseShard && (line.includes(\"SHARD\") || line.includes(\"Eclipse\") || line.includes(\"Trevar\")) && Math.random() < 0.2) {\n        if (line.substring(i, i + 5) === \"SHARD\" || i >= 5 && line.substring(i - 5, i) === \"SHARD\" || line.substring(i, i + 7) === \"Eclipse\" || i >= 7 && line.substring(i - 7, i) === \"Eclipse\" || line.substring(i, i + 6) === \"Trevar\" || i >= 6 && line.substring(i - 6, i) === \"Trevar\") {\n          if (Math.random() < 0.4) {\n            corruptedLine += corruptionCharacters.charAt(Math.floor(Math.random() * corruptionCharacters.length));\n            continue;\n          }\n        }\n      }\n      if (Math.random() < corruptionLevel) {\n        corruptedLine += corruptionCharacters.charAt(Math.floor(Math.random() * corruptionCharacters.length));\n      } else {\n        corruptedLine += line[i];\n      }\n    }\n    return corruptedLine;\n  });\n  return corruptedLines.join('\\n');\n};\n\n// Get terminal effect classes based on terminal type\nconst getTerminalEffectClasses = terminalId => {\n  if (!terminalId) return \"terminal terminal-flicker\";\n  const terminalName = terminalId.includes(\"/\") ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\") : terminalId;\n  const damagedTerminals = [\"blacksite-es1\", \"sayelle-logs\", \"vennik-personal\"];\n  const minorGlitchTerminals = [\"fuwnet\", \"vanagandr001\", \"fuw01\", \"blacktalon\"];\n  if (damagedTerminals.includes(terminalName)) {\n    return \"terminal terminal-severe-flicker terminal-scanlines\";\n  } else if (minorGlitchTerminals.includes(terminalName)) {\n    return \"terminal terminal-flicker terminal-scanlines\";\n  } else {\n    return \"terminal terminal-flicker\";\n  }\n};\n\n// Function to check if content should be corrupted\nconst shouldCorruptContent = (content, terminalId) => {\n  if (!content || !terminalId) return false;\n  const terminalName = terminalId.includes(\"/\") ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\") : terminalId;\n  const corruptTerminals = [\"blacksite-es1\", \"vennik-personal\", \"sayelle-logs\", \"blacktalon\"];\n  return corruptTerminals.includes(terminalName) || content.includes(\"Eclipse Shard\") || content.includes(\"ES1\") || content.includes(\"Trevar\");\n};\n\n// Get corruption level and type for specific terminal content\nconst getCorruptionParams = (content, terminalId) => {\n  if (!content || !terminalId) return {\n    level: 0,\n    isEclipseShard: false\n  };\n  const terminalName = terminalId.includes(\"/\") ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\") : terminalId;\n  const isEclipseContent = content.includes(\"Eclipse Shard\") || content.includes(\"ES1\") || terminalName === \"blacksite-es1\";\n  const isSayelleLog = terminalName.includes(\"sayelle\");\n  const isBlacksiteLog = terminalName.includes(\"blacksite\");\n  if (isEclipseContent) {\n    return {\n      level: 0.03,\n      isEclipseShard: true\n    };\n  } else if (isBlacksiteLog) {\n    return {\n      level: 0.02,\n      isEclipseShard: false\n    };\n  } else if (isSayelleLog) {\n    return {\n      level: 0.015,\n      isEclipseShard: false\n    };\n  } else {\n    return {\n      level: 0.01,\n      isEclipseShard: false\n    };\n  }\n};\n\n// Terminal definitions including all terminals\nconst terminals = {\n  \"lysani01\": {\n    requiresRoll: 8,\n    logs: \"/logs/lysani01.json\"\n  },\n  \"s.elara01\": {\n    requiresRoll: false,\n    logs: \"/logs/s.elara01.json\"\n  },\n  \"slocombe875\": {\n    requiresRoll: 8,\n    logs: \"/logs/slocombe875.json\"\n  },\n  \"waferterm01\": {\n    requiresRoll: false,\n    logs: \"/logs/waferterm01.json\"\n  },\n  \"labpc81\": {\n    requiresRoll: 6,\n    logs: \"/logs/labpc81.json\"\n  },\n  \"vanagandr001\": {\n    requiresRoll: 8,\n    logs: \"/logs/vanagandr001.json\"\n  },\n  \"blackcircuit01\": {\n    requiresRoll: 8,\n    logs: \"/logs/blackcircuit01.json\"\n  },\n  \"fuw01\": {\n    requiresRoll: 8,\n    logs: \"/logs/fuw01.json\"\n  },\n  \"azura01\": {\n    requiresRoll: 10,\n    logs: \"/logs/azura01.json\"\n  },\n  \"vennik01\": {\n    requiresRoll: 12,\n    logs: \"/logs/vennik01.json\",\n    requiresPassword: true,\n    password: \"vennik4ever\"\n  },\n  \"caldonis_public\": {\n    requiresRoll: false,\n    logs: \"/logs/caldonis_public.json\"\n  },\n  \"blacksite-es1\": {\n    requiresRoll: 10,\n    logs: \"/logs/blacksite-es1.json\"\n  },\n  \"blacktalon\": {\n    requiresRoll: 12,\n    logs: \"/logs/blacktalon.json\"\n  },\n  \"vennik-personal\": {\n    requiresRoll: 10,\n    logs: \"/logs/vennik-personal.json\"\n  },\n  \"sayelle-logs\": {\n    requiresRoll: 8,\n    logs: \"/logs/sayelle-logs.json\"\n  },\n  \"fuwnet\": {\n    requiresRoll: 8,\n    logs: \"/logs/fuw-network.json\"\n  },\n  \"01-1485-10-4-89-40\": {\n    requiresRoll: false,\n    logs: \"/logs/01-1485-10-4-89-40.json\"\n  }\n};\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\n  if (index < text.length) {\n    setState(prev => prev + text[index]);\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\n  } else {\n    if (callback) callback();\n  }\n};\nexport default function TravellerTerminal() {\n  _s();\n  const navigate = useNavigate();\n  const [initText, setInitText] = useState(\"\");\n  const [initComplete, setInitComplete] = useState(false);\n  const hasInitialized = useRef(false);\n  const typingRef = useRef(null);\n  const [inputCode, setInputCode] = useState(\"\");\n  const [terminalData, setTerminalData] = useState(\"\");\n  const [logData, setLogData] = useState(null);\n  const [rollCheck, setRollCheck] = useState(null);\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\n  const [activeTerminal, setActiveTerminal] = useState(null);\n  const [selectedLogData, setSelectedLogData] = useState(null);\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\n  const [currentView, setCurrentView] = useState(\"init\");\n\n  // Password-related states\n  const [requiresPassword, setRequiresPassword] = useState(false);\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [passwordAttempts, setPasswordAttempts] = useState(0);\n  const [isPasswordUnlocked, setIsPasswordUnlocked] = useState(false);\n  const [terminalPasswordInput, setTerminalPasswordInput] = useState(\"\");\n  const [terminalPasswordRequired, setTerminalPasswordRequired] = useState(false);\n  const [terminalPasswordAttempts, setTerminalPasswordAttempts] = useState(0);\n\n  // NEW: Multi-level authentication states\n  const [multiLevelAuth, setMultiLevelAuth] = useState(null);\n  const [currentAuthLevel, setCurrentAuthLevel] = useState(0);\n  const [authStep, setAuthStep] = useState(\"content\");\n  const [authData, setAuthData] = useState(null);\n\n  // Grouping state for grouped logs\n  const [expandedGroup, setExpandedGroup] = useState(null);\n  const [showAudioLogsPage, setShowAudioLogsPage] = useState(false);\n  const [audioLogsData, setAudioLogsData] = useState([]);\n\n  // States for screen flicker effects\n  const [severeMalfunction, setSevereMalfunction] = useState(false);\n  const [glitchText, setGlitchText] = useState(\"\");\n  const terminalRef = useRef(null);\n\n  // New state for Riftjaw terminal\n  const [showRiftjawTerminal, setShowRiftjawTerminal] = useState(false);\n\n  // Random severe glitch effect\n  useEffect(() => {\n    if (!activeTerminal || !selectedLogData) return;\n    const terminalName = activeTerminal.logs.replace(\"/logs/\", \"\").replace(\".json\", \"\");\n    const glitchEnabledTerminals = [\"blacksite-es1\", \"vennik-personal\", \"fuwnet\", \"sayelle-logs\", \"blacktalon\"];\n    if (glitchEnabledTerminals.includes(terminalName)) {\n      const randomGlitch = () => {\n        if (Math.random() < 0.05) {\n          setSevereMalfunction(true);\n          const glitchMessages = [\"WARNING: SIGNAL INTEGRITY FAILING\", \"CRC ERROR DETECTED IN DATA STREAM\", \"QUANTUM FLUCTUATION DETECTED\", \"TEMPORAL ANOMALY IN DATA BUFFER\", \"WARNING: REALITY ANCHOR DESTABILIZING\", \"SECURITY BREACH ATTEMPT DETECTED\"];\n          setGlitchText(glitchMessages[Math.floor(Math.random() * glitchMessages.length)]);\n          setTimeout(() => {\n            setSevereMalfunction(false);\n            setGlitchText(\"\");\n          }, 1500);\n        }\n      };\n      const glitchInterval = setInterval(randomGlitch, 10000);\n      return () => {\n        clearInterval(glitchInterval);\n      };\n    }\n  }, [selectedLogData, activeTerminal]);\n\n  // Function to handle keyboard events\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === \"Escape\") {\n        if (currentView === \"log\" && !logTypingComplete) {\n          setLogTypingComplete(true);\n          if (typingRef.current) {\n            clearTimeout(typingRef.current);\n          }\n          if (selectedLogData) {\n            let fullText = \"\";\n            if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\n              fullText = selectedLogData.roll_check.on_success + \"\\n\\n\";\n            }\n            fullText += `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n            if (activeTerminal && shouldCorruptContent(fullText, activeTerminal.logs)) {\n              const {\n                level,\n                isEclipseShard\n              } = getCorruptionParams(fullText, activeTerminal.logs);\n              fullText = applyTextCorruption(fullText, level, isEclipseShard);\n            }\n            setDisplayedText(fullText);\n          }\n        } else if (currentView === \"log\") {\n          handleBackToTerminal();\n        } else if (currentView === \"terminal\") {\n          handleBackToInit();\n        }\n      } else if (e.key === \"Enter\") {\n        if (terminalPasswordRequired) {\n          handleTerminalPasswordSubmit();\n        } else if (requiresPassword && !isPasswordUnlocked) {\n          handlePasswordSubmit();\n        } else if (currentView === \"init\" && inputCode.trim() !== \"\") {\n          handleAccessCode();\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentView, logTypingComplete, selectedLogData, terminalPasswordRequired, terminalPasswordInput, requiresPassword, isPasswordUnlocked, inputCode, activeTerminal]);\n\n  // Auto scroll terminal to keep content in view\n  useEffect(() => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  }, [displayedText, terminalData, logTypingComplete, currentView]);\n  useEffect(() => {\n    if (hasInitialized.current) return;\n    hasInitialized.current = true;\n    const loadingMessages = [\"Initializing system...\", \"Connecting to network...\", \"Loading secure protocols...\", \"The Traveller Terminal is now online.\"];\n    let i = 0;\n    const displayNextMessage = () => {\n      if (i < loadingMessages.length) {\n        typeText(loadingMessages[i] + \"\\n\", setInitText, () => {\n          setInitText(prev => prev + \"\\n\");\n          i++;\n          displayNextMessage();\n        }, 0, 50);\n      } else {\n        const welcomeMessage = \"\\nWelcome to The Traveller Terminal.\\n\" + \"Type the name of a terminal to access its contents.\\n\" + \"Press ESC at any time to go back.\\n\\n\";\n        typeText(welcomeMessage, setInitText, () => {\n          setInitComplete(true);\n        }, 0, 50);\n      }\n    };\n    displayNextMessage();\n  }, []);\n  const handleAccessCode = () => {\n    if (inputCode.trim().toLowerCase() === \"poop\") {\n      navigate(\"/poop\");\n      return;\n    }\n\n    // Check for Riftjaw terminal\n    if (inputCode.trim() === \"01-1485-10-4-89-40\") {\n      setShowRiftjawTerminal(true);\n      setInputCode(\"\");\n      return;\n    }\n    const terminal = terminals[inputCode];\n    if (terminal) {\n      setActiveTerminal(terminal);\n      setCurrentView(\"terminal\");\n      if (terminal.requiresPassword && !isPasswordUnlocked) {\n        setTerminalPasswordRequired(true);\n      } else if (terminal.requiresRoll) {\n        setRollCheck({\n          difficulty: terminal.requiresRoll,\n          success: null\n        });\n      } else {\n        fetchLogs(terminal.logs);\n      }\n    } else {\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\n    }\n    setInputCode(\"\");\n  };\n  const handleTerminalPasswordSubmit = () => {\n    if (activeTerminal && terminalPasswordInput === activeTerminal.password) {\n      setTerminalPasswordRequired(false);\n      setIsPasswordUnlocked(true);\n      fetchLogs(activeTerminal.logs);\n    } else {\n      const attempts = terminalPasswordAttempts + 1;\n      setTerminalPasswordAttempts(attempts);\n      setTerminalPasswordInput(\"\");\n      if (attempts >= 3) {\n        setTerminalPasswordRequired(false);\n        if (activeTerminal && activeTerminal.requiresRoll) {\n          setRollCheck({\n            difficulty: activeTerminal.requiresRoll,\n            success: null\n          });\n          typeText(\"Maximum password attempts reached. Attempting alternate access method...\", setTerminalData);\n        } else {\n          typeText(\"ACCESS DENIED. MAXIMUM ATTEMPTS REACHED.\", setTerminalData);\n          handleBackToInit();\n        }\n      } else {\n        typeText(`ACCESS DENIED. INVALID PASSWORD. ${3 - attempts} attempts remaining.`, setTerminalData);\n      }\n    }\n  };\n  const handleRollCheck = passed => {\n    if (passed) {\n      if (activeTerminal) {\n        fetchLogs(activeTerminal.logs);\n      } else {\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\n      }\n    } else {\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n    }\n    setRollCheck(null);\n  };\n  const handleSpecialRollCheck = passed => {\n    if (passed) {\n      if (selectedLogData) {\n        if (selectedLogData.logs) {\n          setAudioLogsData(selectedLogData.logs);\n          setShowAudioLogsPage(true);\n        } else {\n          setDisplayedText(\"\");\n          setLogTypingComplete(false);\n          setCurrentView(\"log\");\n          let message = \"\";\n          if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\n            message = selectedLogData.roll_check.on_success + \"\\n\\n\";\n            message += `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n          } else {\n            message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n          }\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n            const {\n              level,\n              isEclipseShard\n            } = getCorruptionParams(message, activeTerminal.logs);\n            message = applyTextCorruption(message, level, isEclipseShard);\n          }\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n            if (index < text.length) {\n              setState(prev => prev + text[index]);\n              typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n            } else {\n              typingRef.current = null;\n              if (callback) callback();\n            }\n          };\n          typeWithRef(message, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        }\n      } else {\n        typeText(\"ERROR: Log not found.\", setTerminalData);\n      }\n    } else {\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\n      } else {\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\n      }\n      setSelectedLogData(null);\n    }\n    setSpecialRollCheck(null);\n    setPasswordAttempts(0);\n    setIsPasswordUnlocked(false);\n    setPasswordInput(\"\");\n  };\n  const fetchLogs = async logPath => {\n    try {\n      const response = await fetch(logPath);\n      const data = await response.json();\n      if (Array.isArray(data)) {\n        setLogData(data);\n      } else {\n        // Check if this is the special multi-level authentication terminal\n        if (logPath.includes(\"01-1485-10-4-89-40\")) {\n          setMultiLevelAuth(data);\n          setCurrentAuthLevel(0);\n          setAuthStep(\"content\");\n          setAuthData(data);\n          setCurrentView(\"multi-auth\");\n          setDisplayedText(\"\");\n          setLogTypingComplete(false);\n          let message = `${data.title}\\n\\nDate: ${data.date}\\nAuthor: ${data.author}\\n\\n${data.content}`;\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n            if (index < text.length) {\n              setState(prev => prev + text[index]);\n              typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n            } else {\n              typingRef.current = null;\n              if (callback) callback();\n            }\n          };\n          typeWithRef(message, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        } else {\n          setSelectedLogData(data);\n          setCurrentView(\"log\");\n          setDisplayedText(\"\");\n          setLogTypingComplete(false);\n          if (data.requires_password) {\n            setRequiresPassword(true);\n            setPasswordInput(\"\");\n            setPasswordAttempts(0);\n            setIsPasswordUnlocked(false);\n          }\n          let message = `Date: ${data.date}\\nAuthor: ${data.author}\\n\\n${data.content || \"No data available.\"}`;\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n            const {\n              level,\n              isEclipseShard\n            } = getCorruptionParams(message, activeTerminal.logs);\n            message = applyTextCorruption(message, level, isEclipseShard);\n          }\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n            if (index < text.length) {\n              setState(prev => prev + text[index]);\n              typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n            } else {\n              typingRef.current = null;\n              if (callback) callback();\n            }\n          };\n          typeWithRef(message, setDisplayedText, () => {\n            setLogTypingComplete(true);\n          });\n        }\n      }\n    } catch (error) {\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\n    }\n  };\n  const handleLogClick = log => {\n    setSelectedLogData(log);\n    setCurrentView(\"log\");\n    setExpandedGroup(null);\n    setPasswordAttempts(0);\n    setPasswordInput(\"\");\n    setIsPasswordUnlocked(false);\n    if (log.logs) {\n      if (log.requires_password) {\n        setRequiresPassword(true);\n      } else {\n        setAudioLogsData(log.logs);\n        setShowAudioLogsPage(true);\n      }\n    } else if (log.requires_password) {\n      setRequiresPassword(true);\n    } else {\n      if (log.requires_roll && log.roll_check && log.roll_check.difficulty >= 10) {\n        setSpecialRollCheck({\n          difficulty: log.roll_check.difficulty\n        });\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        let message = `Date: ${log.date}\\nAuthor: ${log.author}\\n\\n${log.content}`;\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n          const {\n            level,\n            isEclipseShard\n          } = getCorruptionParams(message, activeTerminal.logs);\n          message = applyTextCorruption(message, level, isEclipseShard);\n        }\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n          if (index < text.length) {\n            setState(prev => prev + text[index]);\n            typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n          } else {\n            typingRef.current = null;\n            if (callback) callback();\n          }\n        };\n        typeWithRef(message, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    }\n  };\n  const handleMultiAuthNext = () => {\n    console.log(\"handleMultiAuthNext called\");\n    console.log(\"Current authData:\", authData);\n    console.log(\"authData.password:\", authData.password);\n    setAuthStep(\"password\");\n    setPasswordInput(\"\");\n    setPasswordAttempts(0);\n    setDisplayedText(\"\");\n    setLogTypingComplete(false);\n    let message = `Password required for ${authData.title}.\\nAttempts remaining: 3\\n\\nEnter passphrase:`;\n    const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n      if (index < text.length) {\n        setState(prev => prev + text[index]);\n        typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n      } else {\n        typingRef.current = null;\n        if (callback) callback();\n      }\n    };\n    typeWithRef(message, setDisplayedText, () => {\n      setLogTypingComplete(true);\n    });\n  };\n  const handleMultiAuthPassword = () => {\n    console.log(\"handleMultiAuthPassword called\");\n    console.log(\"passwordInput:\", passwordInput);\n    console.log(\"authData.password:\", authData.password);\n    console.log(\"Match?\", passwordInput === authData.password);\n    if (passwordInput === authData.password) {\n      setAuthStep(\"success\");\n      setDisplayedText(\"\");\n      setLogTypingComplete(false);\n      let successMessage = authData.on_success || \"Authentication successful.\";\n      const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n        if (index < text.length) {\n          setState(prev => prev + text[index]);\n          typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n        } else {\n          typingRef.current = null;\n          if (callback) callback();\n        }\n      };\n      typeWithRef(successMessage, setDisplayedText, () => {\n        setLogTypingComplete(true);\n        setTimeout(() => {\n          console.log(\"=== MOVING TO NEXT LEVEL ===\");\n          console.log(\"Current authData:\", authData);\n          console.log(\"authData.next_log exists:\", !!authData.next_log);\n          console.log(\"Current currentView:\", currentView);\n          if (authData.next_log) {\n            const nextLevelData = authData.next_log;\n            console.log(\"nextLevelData:\", nextLevelData);\n            console.log(\"Setting currentView to multi-auth\");\n            console.log(\"Setting authStep to content\");\n            setCurrentAuthLevel(currentAuthLevel + 1);\n            setAuthData(nextLevelData);\n            setAuthStep(\"content\");\n            setPasswordInput(\"\");\n            setPasswordAttempts(0);\n            setDisplayedText(\"\");\n            setLogTypingComplete(false);\n            setCurrentView(\"multi-auth\");\n            console.log(\"About to type next message\");\n            let nextMessage = `${nextLevelData.title}\\n\\nDate: ${nextLevelData.date}\\nAuthor: ${nextLevelData.author}\\n\\n${nextLevelData.content}`;\n            typeWithRef(nextMessage, setDisplayedText, () => {\n              console.log(\"Typing complete for next level\");\n              setLogTypingComplete(true);\n            });\n          } else {\n            console.log(\"No next_log found - this should be final archive\");\n            setCurrentView(\"log\");\n            setSelectedLogData(authData);\n            setDisplayedText(\"\");\n            setLogTypingComplete(false);\n            let finalMessage = `${authData.title}\\n\\nDate: ${authData.date}\\nAuthor: ${authData.author}\\n\\n${authData.content}`;\n            typeWithRef(finalMessage, setDisplayedText, () => {\n              setLogTypingComplete(true);\n            });\n          }\n        }, 2000);\n      });\n    } else {\n      const attempts = passwordAttempts + 1;\n      setPasswordAttempts(attempts);\n      setPasswordInput(\"\");\n      if (attempts >= (authData.attemptsAllowed || 3)) {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        let failureMessage = \"Maximum attempts exceeded. Access denied.\";\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n          if (index < text.length) {\n            setState(prev => prev + text[index]);\n            typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n          } else {\n            typingRef.current = null;\n            if (callback) callback();\n          }\n        };\n        typeWithRef(failureMessage, setDisplayedText, () => {\n          setLogTypingComplete(true);\n          setTimeout(() => {\n            handleBackToInit();\n          }, 2000);\n        });\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        let failureMessage = `${authData.on_failure || \"Incorrect password.\"}\\n\\nAttempts remaining: ${(authData.attemptsAllowed || 3) - attempts}\\n\\nEnter passphrase:`;\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\n          if (index < text.length) {\n            setState(prev => prev + text[index]);\n            typingRef.current = setTimeout(() => typeWithRef(text, setState, callback, index + 1, delay), delay);\n          } else {\n            typingRef.current = null;\n            if (callback) callback();\n          }\n        };\n        typeWithRef(failureMessage, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    }\n  };\n  const handlePasswordSubmit = () => {\n    if (passwordInput === selectedLogData.password) {\n      setIsPasswordUnlocked(true);\n      setRequiresPassword(false);\n      if (selectedLogData.logs) {\n        setAudioLogsData(selectedLogData.logs);\n        setShowAudioLogsPage(true);\n      } else {\n        setDisplayedText(\"\");\n        setLogTypingComplete(false);\n        let message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\n          const {\n            level,\n            isEclipseShard\n          } = getCorruptionParams(message, activeTerminal.logs);\n          message = applyTextCorruption(message, level, isEclipseShard);\n        }\n        typeText(message, setDisplayedText, () => {\n          setLogTypingComplete(true);\n        });\n      }\n    } else {\n      const attempts = passwordAttempts + 1;\n      setPasswordAttempts(attempts);\n      if (attempts >= (selectedLogData.attemptsAllowed || 3)) {\n        setRequiresPassword(false);\n        setSpecialRollCheck({\n          difficulty: selectedLogData.roll_check.difficulty\n        });\n      } else {\n        typeText(\"Incorrect password. Please try again.\", setTerminalData);\n      }\n    }\n  };\n  const handleBackToTerminal = () => {\n    setSelectedLogData(null);\n    setDisplayedText(\"\");\n    setLogTypingComplete(false);\n    setCurrentView(\"terminal\");\n    if (typingRef.current) {\n      clearTimeout(typingRef.current);\n      typingRef.current = null;\n    }\n  };\n  const handleBackToInit = () => {\n    setLogData(null);\n    setActiveTerminal(null);\n    setTerminalData(\"\");\n    setCurrentView(\"init\");\n    setTerminalPasswordRequired(false);\n    setTerminalPasswordInput(\"\");\n    setTerminalPasswordAttempts(0);\n    setIsPasswordUnlocked(false);\n    setMultiLevelAuth(null);\n    setCurrentAuthLevel(0);\n    setAuthStep(\"content\");\n    setAuthData(null);\n    setShowRiftjawTerminal(false);\n  };\n\n  // Handle returning from Riftjaw terminal\n  const handleRiftjawBack = () => {\n    setShowRiftjawTerminal(false);\n  };\n\n  // Show Riftjaw terminal if requested\n  if (showRiftjawTerminal) {\n    return /*#__PURE__*/_jsxDEV(RiftjawTerminal, {\n      onBack: handleRiftjawBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 12\n    }, this);\n  }\n  if (showAudioLogsPage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center h-screen bg-black\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-green-400 font-mono text-xl my-4 terminal-flicker\",\n        children: \"Encrypted Audio Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-md border-green-400 border-2 p-4 overflow-auto terminal-flicker\",\n        children: [audioLogsData.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-green-400 font-mono\",\n            children: log.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-400 font-mono\",\n            style: {\n              whiteSpace: \"pre-wrap\"\n            },\n            children: log.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this), log.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            style: {\n              backgroundColor: \"black\",\n              border: \"1px solid #33ff33\",\n              borderRadius: \"5px\",\n              width: \"100%\",\n              marginTop: \"10px\",\n              color: \"#33ff33\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: log.audio_file,\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 19\n            }, this), \"Your browser does not support the audio element.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-4\",\n          onClick: () => {\n            setShowAudioLogsPage(false);\n            setAudioLogsData([]);\n            setSelectedLogData(null);\n            setCurrentView(\"terminal\");\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center h-screen bg-black\",\n    children: [currentView === \"init\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"monospace\",\n        color: \"#33ff33\",\n        whiteSpace: \"pre-wrap\",\n        marginBottom: \"10px\",\n        textAlign: \"center\"\n      },\n      className: \"terminal-flicker\",\n      children: initText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-md border-green-400 border-2\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          transition: {\n            duration: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: activeTerminal ? getTerminalEffectClasses(activeTerminal.logs) : \"terminal terminal-flicker\",\n            style: {\n              overflow: \"auto\",\n              height: \"300px\",\n              position: \"relative\"\n            },\n            ref: terminalRef,\n            children: [severeMalfunction && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 bg-black bg-opacity-70 flex items-center justify-center z-20\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-red-500 font-mono text-xl severe-glitch p-4 border border-red-500\",\n                children: glitchText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 17\n            }, this), terminalPasswordRequired ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Terminal requires password authentication.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Attempts remaining: \", 3 - terminalPasswordAttempts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  className: \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",\n                  placeholder: \"Enter Password\",\n                  value: terminalPasswordInput,\n                  onChange: e => setTerminalPasswordInput(e.target.value),\n                  type: \"password\",\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      handleTerminalPasswordSubmit();\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-2 mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                    onClick: handleTerminalPasswordSubmit,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                    onClick: handleBackToInit,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 910,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 17\n            }, this) : currentView === \"multi-auth\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\",\n                  marginBottom: \"10px\"\n                },\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '10px',\n                  color: '#666',\n                  marginBottom: '10px'\n                },\n                children: [\"DEBUG: authStep=\", authStep, \", logTypingComplete=\", logTypingComplete, \", currentAuthLevel=\", currentAuthLevel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 19\n              }, this), logTypingComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [authStep === \"content\" && /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",\n                  onClick: handleMultiAuthNext,\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 936,\n                  columnNumber: 25\n                }, this), authStep === \"password\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    className: \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",\n                    placeholder: \"Enter Passphrase\",\n                    value: passwordInput,\n                    onChange: e => setPasswordInput(e.target.value),\n                    type: \"password\",\n                    onKeyPress: e => {\n                      if (e.key === 'Enter') {\n                        handleMultiAuthPassword();\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 945,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex gap-2 mt-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                      onClick: handleMultiAuthPassword,\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 958,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                      onClick: handleBackToInit,\n                      children: \"Back\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 964,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 957,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",\n                onClick: handleBackToInit,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this) : specialRollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Did you pass the \", specialRollCheck.difficulty, \"+ check for\", \" \", selectedLogData ? selectedLogData.title : \"this file\", \"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleSpecialRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 989,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleSpecialRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 995,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 988,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 17\n            }, this) : rollCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Did you pass the \", rollCheck.difficulty, \"+ Electronics (Computers) check?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleRollCheck(true),\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: () => handleRollCheck(false),\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1015,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 17\n            }, this) : selectedLogData && requiresPassword && !isPasswordUnlocked ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\",\n                  marginBottom: \"10px\"\n                },\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Password required. Attempts remaining:\", \" \", (selectedLogData.attemptsAllowed || 3) - passwordAttempts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                className: \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",\n                placeholder: \"Enter Password\",\n                value: passwordInput,\n                onChange: e => setPasswordInput(e.target.value),\n                type: \"password\",\n                onKeyPress: e => {\n                  if (e.key === 'Enter') {\n                    handlePasswordSubmit();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex gap-2 mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: handlePasswordSubmit,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n                  onClick: handleBackToTerminal,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1049,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1024,\n              columnNumber: 17\n            }, this) : selectedLogData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"terminal-glitch\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  whiteSpace: \"pre-wrap\"\n                },\n                children: displayedText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 19\n              }, this), selectedLogData.audio_file && /*#__PURE__*/_jsxDEV(\"audio\", {\n                controls: true,\n                style: {\n                  backgroundColor: \"black\",\n                  border: \"1px solid #33ff33\",\n                  borderRadius: \"5px\",\n                  width: \"100%\",\n                  marginTop: \"10px\",\n                  color: \"#33ff33\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                  src: selectedLogData.audio_file,\n                  type: \"audio/mp3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 23\n                }, this), \"Your browser does not support the audio element.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this), logTypingComplete && /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",\n                onClick: handleBackToTerminal,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 17\n            }, this) : logData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [logData.map((log, index) => {\n                if (log.logs) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      onClick: () => handleLogClick(log),\n                      style: {\n                        cursor: \"pointer\",\n                        textDecoration: \"underline\"\n                      },\n                      children: log.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1091,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1090,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    onClick: () => handleLogClick(log),\n                    style: {\n                      cursor: \"pointer\",\n                      textDecoration: \"underline\"\n                    },\n                    children: log.title\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1101,\n                    columnNumber: 25\n                  }, this);\n                }\n              }), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\",\n                onClick: handleBackToInit,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"glitch-text\",\n              children: terminalData || \"ENTER ACCESS CODE TO PROCEED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            className: \"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\",\n            placeholder: \"Enter Access Code...\",\n            value: inputCode,\n            onChange: e => setInputCode(e.target.value),\n            onKeyDown: e => {\n              if (e.key === \"Enter\") {\n                handleAccessCode();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\",\n            onClick: handleAccessCode,\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 862,\n    columnNumber: 5\n  }, this);\n}\n_s(TravellerTerminal, \"ad67h8YGAkR8St3n+0VoKUlfdwY=\", false, function () {\n  return [useNavigate];\n});\n_c = TravellerTerminal;\nvar _c;\n$RefreshReg$(_c, \"TravellerTerminal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","Input","Button","motion","useNavigate","RiftjawTerminal","jsxDEV","_jsxDEV","corruptionCharacters","applyTextCorruption","text","corruptionLevel","isEclipseShard","lines","split","corruptedLines","map","line","trim","corruptedLine","i","length","includes","Math","random","substring","charAt","floor","join","getTerminalEffectClasses","terminalId","terminalName","replace","damagedTerminals","minorGlitchTerminals","shouldCorruptContent","content","corruptTerminals","getCorruptionParams","level","isEclipseContent","isSayelleLog","isBlacksiteLog","terminals","requiresRoll","logs","requiresPassword","password","typeText","setState","callback","index","delay","prev","setTimeout","TravellerTerminal","_s","navigate","initText","setInitText","initComplete","setInitComplete","hasInitialized","typingRef","inputCode","setInputCode","terminalData","setTerminalData","logData","setLogData","rollCheck","setRollCheck","specialRollCheck","setSpecialRollCheck","activeTerminal","setActiveTerminal","selectedLogData","setSelectedLogData","displayedText","setDisplayedText","logTypingComplete","setLogTypingComplete","currentView","setCurrentView","setRequiresPassword","passwordInput","setPasswordInput","passwordAttempts","setPasswordAttempts","isPasswordUnlocked","setIsPasswordUnlocked","terminalPasswordInput","setTerminalPasswordInput","terminalPasswordRequired","setTerminalPasswordRequired","terminalPasswordAttempts","setTerminalPasswordAttempts","multiLevelAuth","setMultiLevelAuth","currentAuthLevel","setCurrentAuthLevel","authStep","setAuthStep","authData","setAuthData","expandedGroup","setExpandedGroup","showAudioLogsPage","setShowAudioLogsPage","audioLogsData","setAudioLogsData","severeMalfunction","setSevereMalfunction","glitchText","setGlitchText","terminalRef","showRiftjawTerminal","setShowRiftjawTerminal","glitchEnabledTerminals","randomGlitch","glitchMessages","glitchInterval","setInterval","clearInterval","handleKeyDown","e","key","current","clearTimeout","fullText","roll_check","on_success","date","author","handleBackToTerminal","handleBackToInit","handleTerminalPasswordSubmit","handlePasswordSubmit","handleAccessCode","window","addEventListener","removeEventListener","scrollTop","scrollHeight","loadingMessages","displayNextMessage","welcomeMessage","toLowerCase","terminal","difficulty","success","fetchLogs","attempts","handleRollCheck","passed","handleSpecialRollCheck","message","typeWithRef","on_failure","logPath","response","fetch","data","json","Array","isArray","title","requires_password","error","handleLogClick","log","requires_roll","handleMultiAuthNext","console","handleMultiAuthPassword","successMessage","next_log","nextLevelData","nextMessage","finalMessage","attemptsAllowed","failureMessage","handleRiftjawBack","onBack","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","marginBottom","whiteSpace","audio_file","controls","backgroundColor","border","borderRadius","width","marginTop","color","src","type","onClick","fontFamily","textAlign","div","initial","opacity","animate","transition","duration","overflow","height","position","ref","placeholder","value","onChange","target","onKeyDown","fontSize","onKeyPress","cursor","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/James/Desktop/traveller-terminal-v5/src/components/TravellerTerminal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Card, CardContent } from \"../ui/Card\";\r\nimport { Input } from \"../ui/Input\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RiftjawTerminal from \"./RiftjawTerminal\";\r\n\r\n// Character set for corruption effects\r\nconst corruptionCharacters = \"!@#$%^&*()_+-=[]{}|;:,./<>?`~¡™£¢∞§¶•ªº–≠\";\r\n\r\n/**\r\n * Corrupts a portion of the text for an immersive glitched terminal effect\r\n */\r\nconst applyTextCorruption = (text, corruptionLevel = 0.02, isEclipseShard = false) => {\r\n  if (!text) return \"\";\r\n  \r\n  const lines = text.split('\\n');\r\n  \r\n  const corruptedLines = lines.map(line => {\r\n    if (line.trim() === '') return line;\r\n    \r\n    let corruptedLine = '';\r\n    \r\n    for (let i = 0; i < line.length; i++) {\r\n      if (isEclipseShard && \r\n         (line.includes(\"SHARD\") || line.includes(\"Eclipse\") || line.includes(\"Trevar\")) && \r\n         Math.random() < 0.2) {\r\n        if (line.substring(i, i+5) === \"SHARD\" || \r\n            (i >= 5 && line.substring(i-5, i) === \"SHARD\") ||\r\n            line.substring(i, i+7) === \"Eclipse\" || \r\n            (i >= 7 && line.substring(i-7, i) === \"Eclipse\") ||\r\n            line.substring(i, i+6) === \"Trevar\" || \r\n            (i >= 6 && line.substring(i-6, i) === \"Trevar\")) {\r\n          if (Math.random() < 0.4) {\r\n            corruptedLine += corruptionCharacters.charAt(\r\n              Math.floor(Math.random() * corruptionCharacters.length)\r\n            );\r\n            continue;\r\n          }\r\n        }\r\n      }\r\n      \r\n      if (Math.random() < corruptionLevel) {\r\n        corruptedLine += corruptionCharacters.charAt(\r\n          Math.floor(Math.random() * corruptionCharacters.length)\r\n        );\r\n      } else {\r\n        corruptedLine += line[i];\r\n      }\r\n    }\r\n    \r\n    return corruptedLine;\r\n  });\r\n  \r\n  return corruptedLines.join('\\n');\r\n};\r\n\r\n// Get terminal effect classes based on terminal type\r\nconst getTerminalEffectClasses = (terminalId) => {\r\n  if (!terminalId) return \"terminal terminal-flicker\";\r\n  \r\n  const terminalName = terminalId.includes(\"/\") \r\n    ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\")\r\n    : terminalId;\r\n  \r\n  const damagedTerminals = [\"blacksite-es1\", \"sayelle-logs\", \"vennik-personal\"];\r\n  const minorGlitchTerminals = [\"fuwnet\", \"vanagandr001\", \"fuw01\", \"blacktalon\"];\r\n  \r\n  if (damagedTerminals.includes(terminalName)) {\r\n    return \"terminal terminal-severe-flicker terminal-scanlines\";\r\n  } else if (minorGlitchTerminals.includes(terminalName)) {\r\n    return \"terminal terminal-flicker terminal-scanlines\";\r\n  } else {\r\n    return \"terminal terminal-flicker\";\r\n  }\r\n};\r\n\r\n// Function to check if content should be corrupted\r\nconst shouldCorruptContent = (content, terminalId) => {\r\n  if (!content || !terminalId) return false;\r\n  \r\n  const terminalName = terminalId.includes(\"/\") \r\n    ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\")\r\n    : terminalId;\r\n  \r\n  const corruptTerminals = [\"blacksite-es1\", \"vennik-personal\", \"sayelle-logs\", \"blacktalon\"];\r\n  \r\n  return corruptTerminals.includes(terminalName) || \r\n         content.includes(\"Eclipse Shard\") || \r\n         content.includes(\"ES1\") ||\r\n         content.includes(\"Trevar\");\r\n};\r\n\r\n// Get corruption level and type for specific terminal content\r\nconst getCorruptionParams = (content, terminalId) => {\r\n  if (!content || !terminalId) return { level: 0, isEclipseShard: false };\r\n  \r\n  const terminalName = terminalId.includes(\"/\") \r\n    ? terminalId.replace(\"/logs/\", \"\").replace(\".json\", \"\")\r\n    : terminalId;\r\n  \r\n  const isEclipseContent = content.includes(\"Eclipse Shard\") || \r\n                         content.includes(\"ES1\") ||\r\n                         terminalName === \"blacksite-es1\";\r\n                         \r\n  const isSayelleLog = terminalName.includes(\"sayelle\");\r\n  const isBlacksiteLog = terminalName.includes(\"blacksite\");\r\n  \r\n  if (isEclipseContent) {\r\n    return { level: 0.03, isEclipseShard: true };\r\n  } else if (isBlacksiteLog) {\r\n    return { level: 0.02, isEclipseShard: false };\r\n  } else if (isSayelleLog) {\r\n    return { level: 0.015, isEclipseShard: false };\r\n  } else {\r\n    return { level: 0.01, isEclipseShard: false };\r\n  }\r\n};\r\n\r\n// Terminal definitions including all terminals\r\nconst terminals = {\r\n  \"lysani01\": { requiresRoll: 8, logs: \"/logs/lysani01.json\" },\r\n  \"s.elara01\": { requiresRoll: false, logs: \"/logs/s.elara01.json\" },\r\n  \"slocombe875\": { requiresRoll: 8, logs: \"/logs/slocombe875.json\" },\r\n  \"waferterm01\": { requiresRoll: false, logs: \"/logs/waferterm01.json\" },\r\n  \"labpc81\": { requiresRoll: 6, logs: \"/logs/labpc81.json\" },\r\n  \"vanagandr001\": { requiresRoll: 8, logs: \"/logs/vanagandr001.json\" },\r\n  \"blackcircuit01\": { requiresRoll: 8, logs: \"/logs/blackcircuit01.json\" },\r\n  \"fuw01\": { requiresRoll: 8, logs: \"/logs/fuw01.json\" },\r\n  \"azura01\": { requiresRoll: 10, logs: \"/logs/azura01.json\" },\r\n  \"vennik01\": { \r\n    requiresRoll: 12, \r\n    logs: \"/logs/vennik01.json\",\r\n    requiresPassword: true,\r\n    password: \"vennik4ever\"\r\n  },\r\n  \"caldonis_public\": { requiresRoll: false, logs: \"/logs/caldonis_public.json\" },\r\n  \"blacksite-es1\": { requiresRoll: 10, logs: \"/logs/blacksite-es1.json\" },\r\n  \"blacktalon\": { requiresRoll: 12, logs: \"/logs/blacktalon.json\" },\r\n  \"vennik-personal\": { requiresRoll: 10, logs: \"/logs/vennik-personal.json\" },\r\n  \"sayelle-logs\": { requiresRoll: 8, logs: \"/logs/sayelle-logs.json\" },\r\n  \"fuwnet\": { requiresRoll: 8, logs: \"/logs/fuw-network.json\" },\r\n  \"01-1485-10-4-89-40\": { requiresRoll: false, logs: \"/logs/01-1485-10-4-89-40.json\" }\r\n};\r\n\r\nconst typeText = (text, setState, callback = null, index = 0, delay = 30) => {\r\n  if (index < text.length) {\r\n    setState(prev => prev + text[index]);\r\n    setTimeout(() => typeText(text, setState, callback, index + 1, delay), delay);\r\n  } else {\r\n    if (callback) callback();\r\n  }\r\n};\r\n\r\nexport default function TravellerTerminal() {\r\n  const navigate = useNavigate();\r\n  const [initText, setInitText] = useState(\"\");\r\n  const [initComplete, setInitComplete] = useState(false);\r\n  const hasInitialized = useRef(false);\r\n  const typingRef = useRef(null);\r\n  \r\n  const [inputCode, setInputCode] = useState(\"\");\r\n  const [terminalData, setTerminalData] = useState(\"\");\r\n  const [logData, setLogData] = useState(null);\r\n  const [rollCheck, setRollCheck] = useState(null);\r\n  const [specialRollCheck, setSpecialRollCheck] = useState(null);\r\n  const [activeTerminal, setActiveTerminal] = useState(null);\r\n  const [selectedLogData, setSelectedLogData] = useState(null);\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [logTypingComplete, setLogTypingComplete] = useState(false);\r\n  const [currentView, setCurrentView] = useState(\"init\");\r\n\r\n  // Password-related states\r\n  const [requiresPassword, setRequiresPassword] = useState(false);\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n  const [passwordAttempts, setPasswordAttempts] = useState(0);\r\n  const [isPasswordUnlocked, setIsPasswordUnlocked] = useState(false);\r\n  const [terminalPasswordInput, setTerminalPasswordInput] = useState(\"\");\r\n  const [terminalPasswordRequired, setTerminalPasswordRequired] = useState(false);\r\n  const [terminalPasswordAttempts, setTerminalPasswordAttempts] = useState(0);\r\n\r\n  // NEW: Multi-level authentication states\r\n  const [multiLevelAuth, setMultiLevelAuth] = useState(null);\r\n  const [currentAuthLevel, setCurrentAuthLevel] = useState(0);\r\n  const [authStep, setAuthStep] = useState(\"content\");\r\n  const [authData, setAuthData] = useState(null);\r\n\r\n  // Grouping state for grouped logs\r\n  const [expandedGroup, setExpandedGroup] = useState(null);\r\n  const [showAudioLogsPage, setShowAudioLogsPage] = useState(false);\r\n  const [audioLogsData, setAudioLogsData] = useState([]);\r\n  \r\n  // States for screen flicker effects\r\n  const [severeMalfunction, setSevereMalfunction] = useState(false);\r\n  const [glitchText, setGlitchText] = useState(\"\");\r\n  const terminalRef = useRef(null);\r\n  \r\n  // New state for Riftjaw terminal\r\n  const [showRiftjawTerminal, setShowRiftjawTerminal] = useState(false);\r\n\r\n  // Random severe glitch effect\r\n  useEffect(() => {\r\n    if (!activeTerminal || !selectedLogData) return;\r\n    \r\n    const terminalName = activeTerminal.logs.replace(\"/logs/\", \"\").replace(\".json\", \"\");\r\n    const glitchEnabledTerminals = [\"blacksite-es1\", \"vennik-personal\", \"fuwnet\", \"sayelle-logs\", \"blacktalon\"];\r\n    \r\n    if (glitchEnabledTerminals.includes(terminalName)) {\r\n      const randomGlitch = () => {\r\n        if (Math.random() < 0.05) {\r\n          setSevereMalfunction(true);\r\n          \r\n          const glitchMessages = [\r\n            \"WARNING: SIGNAL INTEGRITY FAILING\",\r\n            \"CRC ERROR DETECTED IN DATA STREAM\",\r\n            \"QUANTUM FLUCTUATION DETECTED\",\r\n            \"TEMPORAL ANOMALY IN DATA BUFFER\",\r\n            \"WARNING: REALITY ANCHOR DESTABILIZING\",\r\n            \"SECURITY BREACH ATTEMPT DETECTED\"\r\n          ];\r\n          \r\n          setGlitchText(glitchMessages[Math.floor(Math.random() * glitchMessages.length)]);\r\n          \r\n          setTimeout(() => {\r\n            setSevereMalfunction(false);\r\n            setGlitchText(\"\");\r\n          }, 1500);\r\n        }\r\n      };\r\n      \r\n      const glitchInterval = setInterval(randomGlitch, 10000);\r\n      \r\n      return () => {\r\n        clearInterval(glitchInterval);\r\n      };\r\n    }\r\n  }, [selectedLogData, activeTerminal]);\r\n\r\n  // Function to handle keyboard events\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        if (currentView === \"log\" && !logTypingComplete) {\r\n          setLogTypingComplete(true);\r\n          if (typingRef.current) {\r\n            clearTimeout(typingRef.current);\r\n          }\r\n          if (selectedLogData) {\r\n            let fullText = \"\";\r\n            if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\r\n              fullText = selectedLogData.roll_check.on_success + \"\\n\\n\";\r\n            }\r\n            fullText += `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n            \r\n            if (activeTerminal && shouldCorruptContent(fullText, activeTerminal.logs)) {\r\n              const { level, isEclipseShard } = getCorruptionParams(fullText, activeTerminal.logs);\r\n              fullText = applyTextCorruption(fullText, level, isEclipseShard);\r\n            }\r\n            \r\n            setDisplayedText(fullText);\r\n          }\r\n        }\r\n        else if (currentView === \"log\") {\r\n          handleBackToTerminal();\r\n        } \r\n        else if (currentView === \"terminal\") {\r\n          handleBackToInit();\r\n        }\r\n      }\r\n      else if (e.key === \"Enter\") {\r\n        if (terminalPasswordRequired) {\r\n          handleTerminalPasswordSubmit();\r\n        }\r\n        else if (requiresPassword && !isPasswordUnlocked) {\r\n          handlePasswordSubmit();\r\n        }\r\n        else if (currentView === \"init\" && inputCode.trim() !== \"\") {\r\n          handleAccessCode();\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [currentView, logTypingComplete, selectedLogData, terminalPasswordRequired, \r\n      terminalPasswordInput, requiresPassword, isPasswordUnlocked, inputCode, activeTerminal]);\r\n  \r\n  // Auto scroll terminal to keep content in view\r\n  useEffect(() => {\r\n    if (terminalRef.current) {\r\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\r\n    }\r\n  }, [displayedText, terminalData, logTypingComplete, currentView]);\r\n\r\n  useEffect(() => {\r\n    if (hasInitialized.current) return;\r\n    hasInitialized.current = true;\r\n    const loadingMessages = [\r\n      \"Initializing system...\",\r\n      \"Connecting to network...\",\r\n      \"Loading secure protocols...\",\r\n      \"The Traveller Terminal is now online.\"\r\n    ];\r\n    let i = 0;\r\n    const displayNextMessage = () => {\r\n      if (i < loadingMessages.length) {\r\n        typeText(loadingMessages[i] + \"\\n\", setInitText, () => {\r\n          setInitText(prev => prev + \"\\n\");\r\n          i++;\r\n          displayNextMessage();\r\n        }, 0, 50);\r\n      } else {\r\n        const welcomeMessage =\r\n          \"\\nWelcome to The Traveller Terminal.\\n\" +\r\n          \"Type the name of a terminal to access its contents.\\n\" +\r\n          \"Press ESC at any time to go back.\\n\\n\";\r\n        typeText(welcomeMessage, setInitText, () => {\r\n          setInitComplete(true);\r\n        }, 0, 50);\r\n      }\r\n    };\r\n    displayNextMessage();\r\n  }, []);\r\n\r\n  const handleAccessCode = () => {\r\n    if (inputCode.trim().toLowerCase() === \"poop\") {\r\n      navigate(\"/poop\");\r\n      return;\r\n    }\r\n    \r\n    // Check for Riftjaw terminal\r\n    if (inputCode.trim() === \"01-1485-10-4-89-40\") {\r\n      setShowRiftjawTerminal(true);\r\n      setInputCode(\"\");\r\n      return;\r\n    }\r\n    \r\n    const terminal = terminals[inputCode];\r\n    if (terminal) {\r\n      setActiveTerminal(terminal);\r\n      setCurrentView(\"terminal\");\r\n      \r\n      if (terminal.requiresPassword && !isPasswordUnlocked) {\r\n        setTerminalPasswordRequired(true);\r\n      } \r\n      else if (terminal.requiresRoll) {\r\n        setRollCheck({ difficulty: terminal.requiresRoll, success: null });\r\n      } else {\r\n        fetchLogs(terminal.logs);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INVALID CODE.\", setTerminalData);\r\n    }\r\n    setInputCode(\"\");\r\n  };\r\n\r\n  const handleTerminalPasswordSubmit = () => {\r\n    if (activeTerminal && terminalPasswordInput === activeTerminal.password) {\r\n      setTerminalPasswordRequired(false);\r\n      setIsPasswordUnlocked(true);\r\n      fetchLogs(activeTerminal.logs);\r\n    } else {\r\n      const attempts = terminalPasswordAttempts + 1;\r\n      setTerminalPasswordAttempts(attempts);\r\n      setTerminalPasswordInput(\"\");\r\n      \r\n      if (attempts >= 3) {\r\n        setTerminalPasswordRequired(false);\r\n        \r\n        if (activeTerminal && activeTerminal.requiresRoll) {\r\n          setRollCheck({ difficulty: activeTerminal.requiresRoll, success: null });\r\n          typeText(\"Maximum password attempts reached. Attempting alternate access method...\", setTerminalData);\r\n        } else {\r\n          typeText(\"ACCESS DENIED. MAXIMUM ATTEMPTS REACHED.\", setTerminalData);\r\n          handleBackToInit();\r\n        }\r\n      } else {\r\n        typeText(`ACCESS DENIED. INVALID PASSWORD. ${3 - attempts} attempts remaining.`, setTerminalData);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (activeTerminal) {\r\n        fetchLogs(activeTerminal.logs);\r\n      } else {\r\n        typeText(\"ERROR: Terminal not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n    }\r\n    setRollCheck(null);\r\n  };\r\n\r\n  const handleSpecialRollCheck = (passed) => {\r\n    if (passed) {\r\n      if (selectedLogData) {\r\n        if (selectedLogData.logs) {\r\n          setAudioLogsData(selectedLogData.logs);\r\n          setShowAudioLogsPage(true);\r\n        } else {\r\n          setDisplayedText(\"\");\r\n          setLogTypingComplete(false);\r\n          setCurrentView(\"log\");\r\n          \r\n          let message = \"\";\r\n          if (selectedLogData.roll_check && selectedLogData.roll_check.on_success) {\r\n            message = selectedLogData.roll_check.on_success + \"\\n\\n\";\r\n            message += `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n          } else {\r\n            message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n          }\r\n          \r\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n            const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n            message = applyTextCorruption(message, level, isEclipseShard);\r\n          }\r\n          \r\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n            if (index < text.length) {\r\n              setState(prev => prev + text[index]);\r\n              typingRef.current = setTimeout(\r\n                () => typeWithRef(text, setState, callback, index + 1, delay), \r\n                delay\r\n              );\r\n            } else {\r\n              typingRef.current = null;\r\n              if (callback) callback();\r\n            }\r\n          };\r\n          \r\n          typeWithRef(message, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      } else {\r\n        typeText(\"ERROR: Log not found.\", setTerminalData);\r\n      }\r\n    } else {\r\n      if (selectedLogData && selectedLogData.roll_check && selectedLogData.roll_check.on_failure) {\r\n        typeText(selectedLogData.roll_check.on_failure, setTerminalData);\r\n      } else {\r\n        typeText(\"ACCESS DENIED. INSUFFICIENT CLEARANCE.\", setTerminalData);\r\n      }\r\n      setSelectedLogData(null);\r\n    }\r\n    setSpecialRollCheck(null);\r\n    setPasswordAttempts(0);\r\n    setIsPasswordUnlocked(false);\r\n    setPasswordInput(\"\");\r\n  };\r\n\r\n  const fetchLogs = async (logPath) => {\r\n    try {\r\n      const response = await fetch(logPath);\r\n      const data = await response.json();\r\n      if (Array.isArray(data)) {\r\n        setLogData(data);\r\n      } else {\r\n        // Check if this is the special multi-level authentication terminal\r\n        if (logPath.includes(\"01-1485-10-4-89-40\")) {\r\n          setMultiLevelAuth(data);\r\n          setCurrentAuthLevel(0);\r\n          setAuthStep(\"content\");\r\n          setAuthData(data);\r\n          setCurrentView(\"multi-auth\");\r\n          setDisplayedText(\"\");\r\n          setLogTypingComplete(false);\r\n          \r\n          let message = `${data.title}\\n\\nDate: ${data.date}\\nAuthor: ${data.author}\\n\\n${data.content}`;\r\n          \r\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n            if (index < text.length) {\r\n              setState(prev => prev + text[index]);\r\n              typingRef.current = setTimeout(\r\n                () => typeWithRef(text, setState, callback, index + 1, delay), \r\n                delay\r\n              );\r\n            } else {\r\n              typingRef.current = null;\r\n              if (callback) callback();\r\n            }\r\n          };\r\n          \r\n          typeWithRef(message, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        } else {\r\n          setSelectedLogData(data);\r\n          setCurrentView(\"log\");\r\n          setDisplayedText(\"\");\r\n          setLogTypingComplete(false);\r\n          \r\n          if (data.requires_password) {\r\n            setRequiresPassword(true);\r\n            setPasswordInput(\"\");\r\n            setPasswordAttempts(0);\r\n            setIsPasswordUnlocked(false);\r\n          }\r\n          \r\n          let message = `Date: ${data.date}\\nAuthor: ${data.author}\\n\\n${data.content || \"No data available.\"}`;\r\n          \r\n          if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n            const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n            message = applyTextCorruption(message, level, isEclipseShard);\r\n          }\r\n          \r\n          const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n            if (index < text.length) {\r\n              setState(prev => prev + text[index]);\r\n              typingRef.current = setTimeout(\r\n                () => typeWithRef(text, setState, callback, index + 1, delay), \r\n                delay\r\n              );\r\n            } else {\r\n              typingRef.current = null;\r\n              if (callback) callback();\r\n            }\r\n          };\r\n          \r\n          typeWithRef(message, setDisplayedText, () => {\r\n            setLogTypingComplete(true);\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      typeText(\"ERROR LOADING LOGS.\", setTerminalData);\r\n    }\r\n  };\r\n\r\n  const handleLogClick = (log) => {\r\n    setSelectedLogData(log);\r\n    setCurrentView(\"log\");\r\n    setExpandedGroup(null);\r\n    setPasswordAttempts(0);\r\n    setPasswordInput(\"\");\r\n    setIsPasswordUnlocked(false);\r\n    \r\n    if (log.logs) {\r\n      if (log.requires_password) {\r\n        setRequiresPassword(true);\r\n      } else {\r\n        setAudioLogsData(log.logs);\r\n        setShowAudioLogsPage(true);\r\n      }\r\n    } else if (log.requires_password) {\r\n      setRequiresPassword(true);\r\n    } else {\r\n      if (log.requires_roll && log.roll_check && log.roll_check.difficulty >= 10) {\r\n        setSpecialRollCheck({ difficulty: log.roll_check.difficulty });\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        \r\n        let message = `Date: ${log.date}\\nAuthor: ${log.author}\\n\\n${log.content}`;\r\n        \r\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n          const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n          message = applyTextCorruption(message, level, isEclipseShard);\r\n        }\r\n        \r\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n          if (index < text.length) {\r\n            setState(prev => prev + text[index]);\r\n            typingRef.current = setTimeout(\r\n              () => typeWithRef(text, setState, callback, index + 1, delay), \r\n              delay\r\n            );\r\n          } else {\r\n            typingRef.current = null;\r\n            if (callback) callback();\r\n          }\r\n        };\r\n        \r\n        typeWithRef(message, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMultiAuthNext = () => {\r\n    console.log(\"handleMultiAuthNext called\");\r\n    console.log(\"Current authData:\", authData);\r\n    console.log(\"authData.password:\", authData.password);\r\n    \r\n    setAuthStep(\"password\");\r\n    setPasswordInput(\"\");\r\n    setPasswordAttempts(0);\r\n    setDisplayedText(\"\");\r\n    setLogTypingComplete(false);\r\n    \r\n    let message = `Password required for ${authData.title}.\\nAttempts remaining: 3\\n\\nEnter passphrase:`;\r\n    \r\n    const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n      if (index < text.length) {\r\n        setState(prev => prev + text[index]);\r\n        typingRef.current = setTimeout(\r\n          () => typeWithRef(text, setState, callback, index + 1, delay), \r\n          delay\r\n        );\r\n      } else {\r\n        typingRef.current = null;\r\n        if (callback) callback();\r\n      }\r\n    };\r\n    \r\n    typeWithRef(message, setDisplayedText, () => {\r\n      setLogTypingComplete(true);\r\n    });\r\n  };\r\n\r\n  const handleMultiAuthPassword = () => {\r\n    console.log(\"handleMultiAuthPassword called\");\r\n    console.log(\"passwordInput:\", passwordInput);\r\n    console.log(\"authData.password:\", authData.password);\r\n    console.log(\"Match?\", passwordInput === authData.password);\r\n    \r\n    if (passwordInput === authData.password) {\r\n      setAuthStep(\"success\");\r\n      setDisplayedText(\"\");\r\n      setLogTypingComplete(false);\r\n      \r\n      let successMessage = authData.on_success || \"Authentication successful.\";\r\n      \r\n      const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n        if (index < text.length) {\r\n          setState(prev => prev + text[index]);\r\n          typingRef.current = setTimeout(\r\n            () => typeWithRef(text, setState, callback, index + 1, delay), \r\n            delay\r\n          );\r\n        } else {\r\n          typingRef.current = null;\r\n          if (callback) callback();\r\n        }\r\n      };\r\n      \r\n      typeWithRef(successMessage, setDisplayedText, () => {\r\n        setLogTypingComplete(true);\r\n        \r\n        setTimeout(() => {\r\n          console.log(\"=== MOVING TO NEXT LEVEL ===\");\r\n          console.log(\"Current authData:\", authData);\r\n          console.log(\"authData.next_log exists:\", !!authData.next_log);\r\n          console.log(\"Current currentView:\", currentView);\r\n          \r\n          if (authData.next_log) {\r\n            const nextLevelData = authData.next_log;\r\n            console.log(\"nextLevelData:\", nextLevelData);\r\n            console.log(\"Setting currentView to multi-auth\");\r\n            console.log(\"Setting authStep to content\");\r\n            \r\n            setCurrentAuthLevel(currentAuthLevel + 1);\r\n            setAuthData(nextLevelData);\r\n            setAuthStep(\"content\");\r\n            setPasswordInput(\"\");\r\n            setPasswordAttempts(0);\r\n            setDisplayedText(\"\");\r\n            setLogTypingComplete(false);\r\n            setCurrentView(\"multi-auth\");\r\n            \r\n            console.log(\"About to type next message\");\r\n            \r\n            let nextMessage = `${nextLevelData.title}\\n\\nDate: ${nextLevelData.date}\\nAuthor: ${nextLevelData.author}\\n\\n${nextLevelData.content}`;\r\n            \r\n            typeWithRef(nextMessage, setDisplayedText, () => {\r\n              console.log(\"Typing complete for next level\");\r\n              setLogTypingComplete(true);\r\n            });\r\n          } else {\r\n            console.log(\"No next_log found - this should be final archive\");\r\n            setCurrentView(\"log\");\r\n            setSelectedLogData(authData);\r\n            setDisplayedText(\"\");\r\n            setLogTypingComplete(false);\r\n            \r\n            let finalMessage = `${authData.title}\\n\\nDate: ${authData.date}\\nAuthor: ${authData.author}\\n\\n${authData.content}`;\r\n            \r\n            typeWithRef(finalMessage, setDisplayedText, () => {\r\n              setLogTypingComplete(true);\r\n            });\r\n          }\r\n        }, 2000);\r\n      });\r\n    } else {\r\n      const attempts = passwordAttempts + 1;\r\n      setPasswordAttempts(attempts);\r\n      setPasswordInput(\"\");\r\n      \r\n      if (attempts >= (authData.attemptsAllowed || 3)) {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        \r\n        let failureMessage = \"Maximum attempts exceeded. Access denied.\";\r\n        \r\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n          if (index < text.length) {\r\n            setState(prev => prev + text[index]);\r\n            typingRef.current = setTimeout(\r\n              () => typeWithRef(text, setState, callback, index + 1, delay), \r\n              delay\r\n            );\r\n          } else {\r\n            typingRef.current = null;\r\n            if (callback) callback();\r\n          }\r\n        };\r\n        \r\n        typeWithRef(failureMessage, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n          setTimeout(() => {\r\n            handleBackToInit();\r\n          }, 2000);\r\n        });\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        \r\n        let failureMessage = `${authData.on_failure || \"Incorrect password.\"}\\n\\nAttempts remaining: ${(authData.attemptsAllowed || 3) - attempts}\\n\\nEnter passphrase:`;\r\n        \r\n        const typeWithRef = (text, setState, callback = null, index = 0, delay = 30) => {\r\n          if (index < text.length) {\r\n            setState(prev => prev + text[index]);\r\n            typingRef.current = setTimeout(\r\n              () => typeWithRef(text, setState, callback, index + 1, delay), \r\n              delay\r\n            );\r\n          } else {\r\n            typingRef.current = null;\r\n            if (callback) callback();\r\n          }\r\n        };\r\n        \r\n        typeWithRef(failureMessage, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePasswordSubmit = () => {\r\n    if (passwordInput === selectedLogData.password) {\r\n      setIsPasswordUnlocked(true);\r\n      setRequiresPassword(false);\r\n      \r\n      if (selectedLogData.logs) {\r\n        setAudioLogsData(selectedLogData.logs);\r\n        setShowAudioLogsPage(true);\r\n      } else {\r\n        setDisplayedText(\"\");\r\n        setLogTypingComplete(false);\r\n        \r\n        let message = `Date: ${selectedLogData.date}\\nAuthor: ${selectedLogData.author}\\n\\n${selectedLogData.content}`;\r\n        \r\n        if (activeTerminal && shouldCorruptContent(message, activeTerminal.logs)) {\r\n          const { level, isEclipseShard } = getCorruptionParams(message, activeTerminal.logs);\r\n          message = applyTextCorruption(message, level, isEclipseShard);\r\n        }\r\n        \r\n        typeText(message, setDisplayedText, () => {\r\n          setLogTypingComplete(true);\r\n        });\r\n      }\r\n    } else {\r\n      const attempts = passwordAttempts + 1;\r\n      setPasswordAttempts(attempts);\r\n      if (attempts >= (selectedLogData.attemptsAllowed || 3)) {\r\n        setRequiresPassword(false);\r\n        setSpecialRollCheck({ difficulty: selectedLogData.roll_check.difficulty });\r\n      } else {\r\n        typeText(\"Incorrect password. Please try again.\", setTerminalData);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBackToTerminal = () => {\r\n    setSelectedLogData(null);\r\n    setDisplayedText(\"\");\r\n    setLogTypingComplete(false);\r\n    setCurrentView(\"terminal\");\r\n    if (typingRef.current) {\r\n      clearTimeout(typingRef.current);\r\n      typingRef.current = null;\r\n    }\r\n  };\r\n\r\n  const handleBackToInit = () => {\r\n    setLogData(null);\r\n    setActiveTerminal(null);\r\n    setTerminalData(\"\");\r\n    setCurrentView(\"init\");\r\n    setTerminalPasswordRequired(false);\r\n    setTerminalPasswordInput(\"\");\r\n    setTerminalPasswordAttempts(0);\r\n    setIsPasswordUnlocked(false);\r\n    setMultiLevelAuth(null);\r\n    setCurrentAuthLevel(0);\r\n    setAuthStep(\"content\");\r\n    setAuthData(null);\r\n    setShowRiftjawTerminal(false);\r\n  };\r\n\r\n  // Handle returning from Riftjaw terminal\r\n  const handleRiftjawBack = () => {\r\n    setShowRiftjawTerminal(false);\r\n  };\r\n\r\n  // Show Riftjaw terminal if requested\r\n  if (showRiftjawTerminal) {\r\n    return <RiftjawTerminal onBack={handleRiftjawBack} />;\r\n  }\r\n\r\n  if (showAudioLogsPage) {\r\n    return (\r\n      <div className=\"flex flex-col items-center h-screen bg-black\">\r\n        <h1 className=\"text-green-400 font-mono text-xl my-4 terminal-flicker\">Encrypted Audio Logs</h1>\r\n        <div className=\"w-full max-w-md border-green-400 border-2 p-4 overflow-auto terminal-flicker\">\r\n          {audioLogsData.map((log, index) => (\r\n            <div key={index} style={{ marginBottom: \"20px\" }}>\r\n              <h2 className=\"text-green-400 font-mono\">{log.title}</h2>\r\n              <p className=\"text-green-400 font-mono\" style={{ whiteSpace: \"pre-wrap\" }}>{log.content}</p>\r\n              {log.audio_file && (\r\n                <audio\r\n                  controls\r\n                  style={{\r\n                    backgroundColor: \"black\",\r\n                    border: \"1px solid #33ff33\",\r\n                    borderRadius: \"5px\",\r\n                    width: \"100%\",\r\n                    marginTop: \"10px\",\r\n                    color: \"#33ff33\"\r\n                  }}\r\n                >\r\n                  <source src={log.audio_file} type=\"audio/mp3\" />\r\n                  Your browser does not support the audio element.\r\n                </audio>\r\n              )}\r\n            </div>\r\n          ))}\r\n          <Button\r\n            className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-4\"\r\n            onClick={() => {\r\n              setShowAudioLogsPage(false);\r\n              setAudioLogsData([]);\r\n              setSelectedLogData(null);\r\n              setCurrentView(\"terminal\");\r\n            }}\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center h-screen bg-black\">\r\n      {currentView === \"init\" && (\r\n        <div\r\n          style={{\r\n            fontFamily: \"monospace\",\r\n            color: \"#33ff33\",\r\n            whiteSpace: \"pre-wrap\",\r\n            marginBottom: \"10px\",\r\n            textAlign: \"center\"\r\n          }}\r\n          className=\"terminal-flicker\"\r\n        >\r\n          {initText}\r\n        </div>\r\n      )}\r\n      <Card className=\"w-full max-w-md border-green-400 border-2\">\r\n        <CardContent>\r\n          <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>\r\n            <div \r\n              className={activeTerminal ? getTerminalEffectClasses(activeTerminal.logs) : \"terminal terminal-flicker\"} \r\n              style={{ overflow: \"auto\", height: \"300px\", position: \"relative\" }}\r\n              ref={terminalRef}\r\n            >\r\n              {severeMalfunction && (\r\n                <div className=\"absolute inset-0 bg-black bg-opacity-70 flex items-center justify-center z-20\">\r\n                  <div className=\"text-red-500 font-mono text-xl severe-glitch p-4 border border-red-500\">\r\n                    {glitchText}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {terminalPasswordRequired ? (\r\n                <div>\r\n                  <p>Terminal requires password authentication.</p>\r\n                  <p>Attempts remaining: {3 - terminalPasswordAttempts}</p>\r\n                  <div className=\"mt-4\">\r\n                    <Input\r\n                      className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n                      placeholder=\"Enter Password\"\r\n                      value={terminalPasswordInput}\r\n                      onChange={(e) => setTerminalPasswordInput(e.target.value)}\r\n                      type=\"password\"\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === \"Enter\") {\r\n                          handleTerminalPasswordSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                    <div className=\"flex gap-2 mt-2\">\r\n                      <Button\r\n                        className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                        onClick={handleTerminalPasswordSubmit}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                      <Button\r\n                        className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                        onClick={handleBackToInit}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : currentView === \"multi-auth\" ? (\r\n                <div>\r\n                  <div style={{ whiteSpace: \"pre-wrap\", marginBottom: \"10px\" }}>{displayedText}</div>\r\n                  {/* DEBUG INFO */}\r\n                  <div style={{ fontSize: '10px', color: '#666', marginBottom: '10px' }}>\r\n                    DEBUG: authStep={authStep}, logTypingComplete={logTypingComplete}, currentAuthLevel={currentAuthLevel}\r\n                  </div>\r\n                  {logTypingComplete && (\r\n                    <div>\r\n                      {authStep === \"content\" && (\r\n                        <Button\r\n                          className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                          onClick={handleMultiAuthNext}\r\n                        >\r\n                          Next\r\n                        </Button>\r\n                      )}\r\n                      {authStep === \"password\" && (\r\n                        <div className=\"mt-2\">\r\n                          <Input\r\n                            className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n                            placeholder=\"Enter Passphrase\"\r\n                            value={passwordInput}\r\n                            onChange={(e) => setPasswordInput(e.target.value)}\r\n                            type=\"password\"\r\n                            onKeyPress={(e) => {\r\n                              if (e.key === 'Enter') {\r\n                                handleMultiAuthPassword();\r\n                              }\r\n                            }}\r\n                          />\r\n                          <div className=\"flex gap-2 mt-2\">\r\n                            <Button\r\n                              className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                              onClick={handleMultiAuthPassword}\r\n                            >\r\n                              Submit\r\n                            </Button>\r\n                            <Button\r\n                              className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                              onClick={handleBackToInit}\r\n                            >\r\n                              Back\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  <Button\r\n                    className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                    onClick={handleBackToInit}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              ) : specialRollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {specialRollCheck.difficulty}+ check for{\" \"}\r\n                    {selectedLogData ? selectedLogData.title : \"this file\"}?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleSpecialRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleSpecialRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : rollCheck ? (\r\n                <div>\r\n                  <p>\r\n                    Did you pass the {rollCheck.difficulty}+ Electronics (Computers) check?\r\n                  </p>\r\n                  <div className=\"flex gap-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleRollCheck(true)}\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={() => handleRollCheck(false)}\r\n                    >\r\n                      No\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData && requiresPassword && !isPasswordUnlocked ? (\r\n                <div>\r\n                  <div style={{ whiteSpace: \"pre-wrap\", marginBottom: \"10px\" }}>{displayedText}</div>\r\n                  <p>\r\n                    Password required. Attempts remaining:{\" \"}\r\n                    {(selectedLogData.attemptsAllowed || 3) - passwordAttempts}\r\n                  </p>\r\n                  <Input\r\n                    className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n                    placeholder=\"Enter Password\"\r\n                    value={passwordInput}\r\n                    onChange={(e) => setPasswordInput(e.target.value)}\r\n                    type=\"password\"\r\n                    onKeyPress={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        handlePasswordSubmit();\r\n                      }\r\n                    }}\r\n                  />\r\n                  <div className=\"flex gap-2 mt-2\">\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={handlePasswordSubmit}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n                      onClick={handleBackToTerminal}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : selectedLogData ? (\r\n                <div className=\"terminal-glitch\">\r\n                  <div style={{ whiteSpace: \"pre-wrap\" }}>{displayedText}</div>\r\n                  {selectedLogData.audio_file && (\r\n                    <audio\r\n                      controls\r\n                      style={{\r\n                        backgroundColor: \"black\",\r\n                        border: \"1px solid #33ff33\",\r\n                        borderRadius: \"5px\",\r\n                        width: \"100%\",\r\n                        marginTop: \"10px\",\r\n                        color: \"#33ff33\"\r\n                      }}\r\n                    >\r\n                      <source src={selectedLogData.audio_file} type=\"audio/mp3\" />\r\n                      Your browser does not support the audio element.\r\n                    </audio>\r\n                  )}\r\n                  {logTypingComplete && (\r\n                    <Button\r\n                      className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                      onClick={handleBackToTerminal}\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              ) : logData ? (\r\n                <div>\r\n                  {logData.map((log, index) => {\r\n                    if (log.logs) {\r\n                      return (\r\n                        <div key={index}>\r\n                          <p\r\n                            onClick={() => handleLogClick(log)}\r\n                            style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n                          >\r\n                            {log.title}\r\n                          </p>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <p\r\n                          key={index}\r\n                          onClick={() => handleLogClick(log)}\r\n                          style={{ cursor: \"pointer\", textDecoration: \"underline\" }}\r\n                        >\r\n                          {log.title}\r\n                        </p>\r\n                      );\r\n                    }\r\n                  })}\r\n                  <Button\r\n                    className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500 mt-2\"\r\n                    onClick={handleBackToInit}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <p className=\"glitch-text\">\r\n                  {terminalData || \"ENTER ACCESS CODE TO PROCEED\"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n          <div className=\"mt-4 flex gap-2\">\r\n            <Input\r\n              className=\"bg-black text-green-400 border border-green-400 px-3 py-2 font-mono focus:outline-none\"\r\n              placeholder=\"Enter Access Code...\"\r\n              value={inputCode}\r\n              onChange={(e) => setInputCode(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  handleAccessCode();\r\n                }\r\n              }}\r\n            />\r\n            <Button\r\n              className=\"bg-green-400 text-black font-mono px-4 py-2 rounded hover:bg-green-500\"\r\n              onClick={handleAccessCode}\r\n            >\r\n              Enter\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}