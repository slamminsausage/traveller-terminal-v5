{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\James\\\\Desktop\\\\traveller-terminal-v5\\\\src\\\\components\\\\SignalInterference.jsx\",\n  _s = $RefreshSig$();\n// Create a new file: src/components/SignalInterference.jsx\nimport React, { useEffect, useState } from 'react';\nimport AudioManager from '../utils/AudioManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignalInterference = ({\n  level = 0,\n  terminalType = 'normal'\n}) => {\n  _s();\n  const [interferenceActive, setInterferenceActive] = useState(false);\n  const [staticOpacity, setStaticOpacity] = useState(0);\n  useEffect(() => {\n    if (level > 0.3) {\n      const interval = setInterval(() => {\n        if (Math.random() < level) {\n          setInterferenceActive(true);\n          setStaticOpacity(Math.random() * 0.3 + 0.1);\n\n          // Play interference sound\n          AudioManager.playEffect('glitch', 0.3);\n\n          // Random screen effects\n          const effects = [() => {\n            document.body.style.filter = `brightness(${0.3 + Math.random() * 0.7}) contrast(${1 + Math.random() * 0.5})`;\n          }, () => {\n            document.body.style.filter = `hue-rotate(${Math.random() * 30}deg) saturate(${0.5 + Math.random()})`;\n          }, () => {\n            document.body.style.transform = `translate(${Math.random() * 4 - 2}px, ${Math.random() * 4 - 2}px)`;\n          }];\n          const effect = effects[Math.floor(Math.random() * effects.length)];\n          effect();\n          setTimeout(() => {\n            document.body.style.filter = 'none';\n            document.body.style.transform = 'none';\n            setInterferenceActive(false);\n            setStaticOpacity(0);\n          }, 100 + Math.random() * 200);\n        }\n      }, 1000 + Math.random() * 4000);\n      return () => clearInterval(interval);\n    }\n  }, [level]);\n\n  // Change ambient sound based on interference level\n  useEffect(() => {\n    if (level > 0.7) {\n      AudioManager.playAmbient('interference', 0.4);\n    } else if (level > 0.5) {\n      AudioManager.playAmbient('corrupted', 0.3);\n    } else if (level > 0.3) {\n      AudioManager.playAmbient('damaged', 0.25);\n    } else if (terminalType === 'secure') {\n      AudioManager.playAmbient('secure', 0.2);\n    } else {\n      AudioManager.playAmbient('normal', 0.15);\n    }\n    return () => {\n      AudioManager.stopAmbient();\n    };\n  }, [level, terminalType]);\n  if (!interferenceActive) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pointer-events-none fixed inset-0 z-50\",\n      style: {\n        opacity: staticOpacity,\n        background: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' /%3E%3C/svg%3E\")`,\n        mixBlendMode: 'screen'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), level > 0.5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pointer-events-none fixed inset-0 z-40\",\n      style: {\n        background: 'repeating-linear-gradient(0deg, rgba(0,255,0,0.03) 0px, transparent 1px, transparent 2px, rgba(0,255,0,0.03) 3px)',\n        animation: 'scanlines 8s linear infinite'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 right-4 z-50 text-green-400 font-mono text-xs bg-black bg-opacity-80 p-2 border border-green-400\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"SIGNAL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1\",\n          children: [...Array(5)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-1 h-3 ${i < Math.floor((1 - level) * 5) ? 'bg-green-400' : 'bg-gray-700'}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.floor((1 - level) * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignalInterference, \"N+idzYjWCq6Yc7ZBErhpdj8vjKE=\");\n_c = SignalInterference;\nexport default SignalInterference;\nvar _c;\n$RefreshReg$(_c, \"SignalInterference\");","map":{"version":3,"names":["React","useEffect","useState","AudioManager","jsxDEV","_jsxDEV","Fragment","_Fragment","SignalInterference","level","terminalType","_s","interferenceActive","setInterferenceActive","staticOpacity","setStaticOpacity","interval","setInterval","Math","random","playEffect","effects","document","body","style","filter","transform","effect","floor","length","setTimeout","clearInterval","playAmbient","stopAmbient","children","className","opacity","background","mixBlendMode","fileName","_jsxFileName","lineNumber","columnNumber","animation","Array","map","_","i","_c","$RefreshReg$"],"sources":["C:/Users/James/Desktop/traveller-terminal-v5/src/components/SignalInterference.jsx"],"sourcesContent":["// Create a new file: src/components/SignalInterference.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport AudioManager from '../utils/AudioManager';\r\n\r\nconst SignalInterference = ({ level = 0, terminalType = 'normal' }) => {\r\n  const [interferenceActive, setInterferenceActive] = useState(false);\r\n  const [staticOpacity, setStaticOpacity] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (level > 0.3) {\r\n      const interval = setInterval(() => {\r\n        if (Math.random() < level) {\r\n          setInterferenceActive(true);\r\n          setStaticOpacity(Math.random() * 0.3 + 0.1);\r\n          \r\n          // Play interference sound\r\n          AudioManager.playEffect('glitch', 0.3);\r\n          \r\n          // Random screen effects\r\n          const effects = [\r\n            () => {\r\n              document.body.style.filter = `brightness(${0.3 + Math.random() * 0.7}) contrast(${1 + Math.random() * 0.5})`;\r\n            },\r\n            () => {\r\n              document.body.style.filter = `hue-rotate(${Math.random() * 30}deg) saturate(${0.5 + Math.random()})`;\r\n            },\r\n            () => {\r\n              document.body.style.transform = `translate(${Math.random() * 4 - 2}px, ${Math.random() * 4 - 2}px)`;\r\n            }\r\n          ];\r\n          \r\n          const effect = effects[Math.floor(Math.random() * effects.length)];\r\n          effect();\r\n          \r\n          setTimeout(() => {\r\n            document.body.style.filter = 'none';\r\n            document.body.style.transform = 'none';\r\n            setInterferenceActive(false);\r\n            setStaticOpacity(0);\r\n          }, 100 + Math.random() * 200);\r\n        }\r\n      }, 1000 + Math.random() * 4000);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [level]);\r\n\r\n  // Change ambient sound based on interference level\r\n  useEffect(() => {\r\n    if (level > 0.7) {\r\n      AudioManager.playAmbient('interference', 0.4);\r\n    } else if (level > 0.5) {\r\n      AudioManager.playAmbient('corrupted', 0.3);\r\n    } else if (level > 0.3) {\r\n      AudioManager.playAmbient('damaged', 0.25);\r\n    } else if (terminalType === 'secure') {\r\n      AudioManager.playAmbient('secure', 0.2);\r\n    } else {\r\n      AudioManager.playAmbient('normal', 0.15);\r\n    }\r\n\r\n    return () => {\r\n      AudioManager.stopAmbient();\r\n    };\r\n  }, [level, terminalType]);\r\n\r\n  if (!interferenceActive) return null;\r\n\r\n  return (\r\n    <>\r\n      {/* Static overlay */}\r\n      <div \r\n        className=\"pointer-events-none fixed inset-0 z-50\"\r\n        style={{\r\n          opacity: staticOpacity,\r\n          background: `url(\"data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='4' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' /%3E%3C/svg%3E\")`,\r\n          mixBlendMode: 'screen'\r\n        }}\r\n      />\r\n      \r\n      {/* Scan lines */}\r\n      {level > 0.5 && (\r\n        <div \r\n          className=\"pointer-events-none fixed inset-0 z-40\"\r\n          style={{\r\n            background: 'repeating-linear-gradient(0deg, rgba(0,255,0,0.03) 0px, transparent 1px, transparent 2px, rgba(0,255,0,0.03) 3px)',\r\n            animation: 'scanlines 8s linear infinite'\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      {/* Signal strength indicator */}\r\n      <div className=\"fixed top-4 right-4 z-50 text-green-400 font-mono text-xs bg-black bg-opacity-80 p-2 border border-green-400\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <span>SIGNAL:</span>\r\n          <div className=\"flex gap-1\">\r\n            {[...Array(5)].map((_, i) => (\r\n              <div \r\n                key={i}\r\n                className={`w-1 h-3 ${\r\n                  i < Math.floor((1 - level) * 5) \r\n                    ? 'bg-green-400' \r\n                    : 'bg-gray-700'\r\n                }`}\r\n              />\r\n            ))}\r\n          </div>\r\n          <span>{Math.floor((1 - level) * 100)}%</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignalInterference;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}